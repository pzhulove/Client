include "Union.fbs"; 

namespace ProtoTable.LostDungeonBuffTable;
enum eCrypt :int{
	code = 124985693,}

namespace ProtoTable;
table LostDungeonBuffTable{
	ID:int32;
	Name:string;
	Description:string;
	IconSortOrder:int32;
	Icon:string;
	Type:int32;
	WorkType:int32;
	DispelType:int32;
	IsQuickPressSupport:int32;
	EffectShaderName:string;
	HeadName:string;
	HpBarName:string;
	IsShowSpell:bool;
	IsLowLevelShow:bool;
	BirthEffect:string;
	BirthEffectLocate:string;
	EffectName:string;
	EffectLocateName:string;
	EffectLoop:bool;
	EndEffect:string;
	EndEffectLocate:string;
	EffectConfigPath:string;
	HurtEffectName:string;
	HurtEffectLocateName:string;
	SfxID:int32;
	BuffAIPath:string;
	TargetState:[int32];
	Overlay:int32;
	OverlayLimit:int32;
	EffectDisOverlay:int32;
	TriggerInterval:int32;
	StateChange:[int32];
	AbilityChange:[int32];
	Elements:[int32];
	LightAttack:UnionCell;
	FireAttack:UnionCell;
	IceAttack:UnionCell;
	DarkAttack:UnionCell;
	LightDefence:UnionCell;
	FireDefence:UnionCell;
	IceDefence:UnionCell;
	DarkDefence:UnionCell;
	UseSkillIDs:[int32];
	DispelBuffType:int32;
	TriggerBuffInfoIDs:[int32];
	ExitRemoveTrigger:int32;
	MechanismID:[int32];
	hp:UnionCell;
	mp:UnionCell;
	hpRate:UnionCell;
	mpRate:UnionCell;
	currentHpRate:UnionCell;
	currentHpRateControl:int32;
	baseAtk:UnionCell;
	baseInt:UnionCell;
	sta:UnionCell;
	spr:UnionCell;
	atkAddRate:UnionCell;
	intAddRate:UnionCell;
	staAddRate:UnionCell;
	sprAddRate:UnionCell;
	maxHp:UnionCell;
	maxMp:UnionCell;
	maxHpAddRate:UnionCell;
	maxMpAddRate:UnionCell;
	hpRecover:UnionCell;
	mpRecover:UnionCell;
	attack:UnionCell;
	magicAttack:UnionCell;
	defence:UnionCell;
	magicDefence:UnionCell;
	attackSpeed:UnionCell;
	spellSpeed:UnionCell;
	moveSpeed:UnionCell;
	ciriticalAttack:UnionCell;
	ciriticalMagicAttack:UnionCell;
	dex:UnionCell;
	dodge:UnionCell;
	frozen:UnionCell;
	hard:UnionCell;
	abnormalResist:UnionCell;
	abnormalResist1:UnionCell;
	abnormalResist2:UnionCell;
	abnormalResist3:UnionCell;
	abnormalResist4:UnionCell;
	abnormalResist5:UnionCell;
	abnormalResist6:UnionCell;
	abnormalResist7:UnionCell;
	abnormalResist8:UnionCell;
	abnormalResist9:UnionCell;
	abnormalResist10:UnionCell;
	abnormalResist11:UnionCell;
	abnormalResist12:UnionCell;
	abnormalResist13:UnionCell;
	criticalPercent:UnionCell;
	cdReduceRate:UnionCell;
	attackAddRate:UnionCell;
	magicAttackAddRate:UnionCell;
	defenceAddRate:UnionCell;
	magicDefenceAddRate:UnionCell;
	ignoreDefAttackAddRate:UnionCell;
	ignoreDefMagicAttackAddRate:UnionCell;
	attachAddDamageFix:UnionCell;
	attachAddDamagePercent:UnionCell;
	addDamageFix:UnionCell;
	addDamagePercent:UnionCell;
	reduceDamageFix:UnionCell;
	reduceDamageFixType:int32;
	reduceDamagePercent:UnionCell;
	reduceDamagePercentType:int32;
	reflectDamageFix:UnionCell;
	reflectDamageFixType:int32;
	reflectDamagePercent:UnionCell;
	reflectDamagePercentType:int32;
	level:UnionCell;
	skill_mpCostReduceRate:UnionCell;
	skill_cdReduceRate:UnionCell;
	skill_cdReduceValue:UnionCell;
	skill_speedAddFactor:UnionCell;
	skill_hitRateAdd:UnionCell;
	skill_criticalHitRateAdd:UnionCell;
	skill_attackAddRate:UnionCell;
	skill_attackAdd:UnionCell;
	skill_attackAddFix:UnionCell;
	skill_hardAddRate:UnionCell;
	skill_chargeReduceRate:UnionCell;
	ResistMagic:UnionCell;
	ai_warlike:UnionCell;
	ai_sight:UnionCell;
	ai_attackProb:UnionCell;
	summon_monsterID:int32;
	summon_monsterLevel:int32;
	summon_existTime:int32;
	summon_posType:int32;
	summon_posType2:[int32];
	summon_display:int32;
	summon_num:int32;
	summon_relation:int32;
	summon_numLimit:int32;
	summon_entity:[int32];
	duplicate_percent:int32;
	duplicate_max:int32;
	expAddRate:UnionCell;
	goldAddRate:UnionCell;
	taskDropAddRate:int32;
	PinkDropAddRate:int32;
	ChestDropAddRate:int32;
	durationType:int32;
	duration:int32;
	DescriptionA:string;
	ValueA:[UnionCell];
	DescriptionB:string;
	ValueB:[UnionCell];
	DescriptionC:string;
	ValueC:[UnionCell];
	DescriptionD:string;
	ValueD:[UnionCell];
	DescriptionE:string;
	ValueE:[UnionCell];
	DescriptionF:string;
	ValueF:[UnionCell];
	DescriptionG:string;
	ValueG:[UnionCell];
	EffectTimes:int32;
	ApplyDungeon:string;
	param1:int32;
	param2:int32;
}

root_type LostDungeonBuffTable;