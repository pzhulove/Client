// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class EquipQLValueTable : IFlatbufferObject
{
public enum ePart : int
{
 NONE = 0,
 WEAPON = 1,
 CLOTH = 2,
 LEATHER = 3,
 HEAVY = 4,
 PLATE = 5,
 LIGHT = 6,
 JEWELRY = 7,
 ASSIST = 8,
 MAGICSTONE = 9,
 EARRINGS = 10,
};

public enum eCrypt : int
{
 code = 571032840,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static EquipQLValueTable GetRootAsEquipQLValueTable(ByteBuffer _bb) { return GetRootAsEquipQLValueTable(_bb, new EquipQLValueTable()); }
  public static EquipQLValueTable GetRootAsEquipQLValueTable(ByteBuffer _bb, EquipQLValueTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public EquipQLValueTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public ProtoTable.EquipQLValueTable.ePart Part { get { int o = __p.__offset(6); return o != 0 ? (ProtoTable.EquipQLValueTable.ePart)__p.bb.GetInt(o + __p.bb_pos) : ProtoTable.EquipQLValueTable.ePart.NONE; } }
  public int AtkDef { get { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int FourDimensional { get { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int PerfectAtkDef { get { int o = __p.__offset(12); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int PerfectFourDimensional { get { int o = __p.__offset(14); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int StrProp { get { int o = __p.__offset(16); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int PerfectStrProp { get { int o = __p.__offset(18); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int DefProp { get { int o = __p.__offset(20); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int PerfectDefProp { get { int o = __p.__offset(22); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int AbnormalResists { get { int o = __p.__offset(24); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int PerfectAbnormalResists { get { int o = __p.__offset(26); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int IndependentResists { get { int o = __p.__offset(28); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int PerfectIndependentResists { get { int o = __p.__offset(30); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }

  public static Offset<EquipQLValueTable> CreateEquipQLValueTable(FlatBufferBuilder builder,
      int ID = 0,
      ProtoTable.EquipQLValueTable.ePart Part = ProtoTable.EquipQLValueTable.ePart.NONE,
      int AtkDef = 0,
      int FourDimensional = 0,
      int PerfectAtkDef = 0,
      int PerfectFourDimensional = 0,
      int StrProp = 0,
      int PerfectStrProp = 0,
      int DefProp = 0,
      int PerfectDefProp = 0,
      int AbnormalResists = 0,
      int PerfectAbnormalResists = 0,
      int IndependentResists = 0,
      int PerfectIndependentResists = 0) {
    builder.StartObject(14);
    EquipQLValueTable.AddPerfectIndependentResists(builder, PerfectIndependentResists);
    EquipQLValueTable.AddIndependentResists(builder, IndependentResists);
    EquipQLValueTable.AddPerfectAbnormalResists(builder, PerfectAbnormalResists);
    EquipQLValueTable.AddAbnormalResists(builder, AbnormalResists);
    EquipQLValueTable.AddPerfectDefProp(builder, PerfectDefProp);
    EquipQLValueTable.AddDefProp(builder, DefProp);
    EquipQLValueTable.AddPerfectStrProp(builder, PerfectStrProp);
    EquipQLValueTable.AddStrProp(builder, StrProp);
    EquipQLValueTable.AddPerfectFourDimensional(builder, PerfectFourDimensional);
    EquipQLValueTable.AddPerfectAtkDef(builder, PerfectAtkDef);
    EquipQLValueTable.AddFourDimensional(builder, FourDimensional);
    EquipQLValueTable.AddAtkDef(builder, AtkDef);
    EquipQLValueTable.AddPart(builder, Part);
    EquipQLValueTable.AddID(builder, ID);
    return EquipQLValueTable.EndEquipQLValueTable(builder);
  }

  public static void StartEquipQLValueTable(FlatBufferBuilder builder) { builder.StartObject(14); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddPart(FlatBufferBuilder builder, ProtoTable.EquipQLValueTable.ePart Part) { builder.AddInt(1, (int)Part, 0); }
  public static void AddAtkDef(FlatBufferBuilder builder, int AtkDef) { builder.AddInt(2, AtkDef, 0); }
  public static void AddFourDimensional(FlatBufferBuilder builder, int FourDimensional) { builder.AddInt(3, FourDimensional, 0); }
  public static void AddPerfectAtkDef(FlatBufferBuilder builder, int PerfectAtkDef) { builder.AddInt(4, PerfectAtkDef, 0); }
  public static void AddPerfectFourDimensional(FlatBufferBuilder builder, int PerfectFourDimensional) { builder.AddInt(5, PerfectFourDimensional, 0); }
  public static void AddStrProp(FlatBufferBuilder builder, int StrProp) { builder.AddInt(6, StrProp, 0); }
  public static void AddPerfectStrProp(FlatBufferBuilder builder, int PerfectStrProp) { builder.AddInt(7, PerfectStrProp, 0); }
  public static void AddDefProp(FlatBufferBuilder builder, int DefProp) { builder.AddInt(8, DefProp, 0); }
  public static void AddPerfectDefProp(FlatBufferBuilder builder, int PerfectDefProp) { builder.AddInt(9, PerfectDefProp, 0); }
  public static void AddAbnormalResists(FlatBufferBuilder builder, int AbnormalResists) { builder.AddInt(10, AbnormalResists, 0); }
  public static void AddPerfectAbnormalResists(FlatBufferBuilder builder, int PerfectAbnormalResists) { builder.AddInt(11, PerfectAbnormalResists, 0); }
  public static void AddIndependentResists(FlatBufferBuilder builder, int IndependentResists) { builder.AddInt(12, IndependentResists, 0); }
  public static void AddPerfectIndependentResists(FlatBufferBuilder builder, int PerfectIndependentResists) { builder.AddInt(13, PerfectIndependentResists, 0); }
  public static Offset<EquipQLValueTable> EndEquipQLValueTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<EquipQLValueTable>(o);
  }
  public static void FinishEquipQLValueTableBuffer(FlatBufferBuilder builder, Offset<EquipQLValueTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

