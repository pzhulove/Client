// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class TeamCopyFieldTable : IFlatbufferObject
{
public enum ePresentedType : int
{
 PresentedType_None = 0,
 BeginAppear = 1,
 UnlockByPreFightPoint = 2,
 BossFightPoint = 3,
 BossRelationFightPoint = 4,
};

public enum eCrypt : int
{
 code = 666151196,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static TeamCopyFieldTable GetRootAsTeamCopyFieldTable(ByteBuffer _bb) { return GetRootAsTeamCopyFieldTable(_bb, new TeamCopyFieldTable()); }
  public static TeamCopyFieldTable GetRootAsTeamCopyFieldTable(ByteBuffer _bb, TeamCopyFieldTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public TeamCopyFieldTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
  public int TeamGrade { get { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string StrongholdDesc { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetStrongholdDescBytes() { return __p.__vector_as_arraysegment(10); }
  public int DungeonId { get { int o = __p.__offset(12); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public ProtoTable.TeamCopyFieldTable.ePresentedType PresentedType { get { int o = __p.__offset(14); return o != 0 ? (ProtoTable.TeamCopyFieldTable.ePresentedType)__p.bb.GetInt(o + __p.bb_pos) : ProtoTable.TeamCopyFieldTable.ePresentedType.PresentedType_None; } }
  public int DefeatCond { get { int o = __p.__offset(16); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int RebornTime { get { int o = __p.__offset(18); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int UnlockedCondArray(int j) { int o = __p.__offset(20); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int UnlockedCondLength { get { int o = __p.__offset(20); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetUnlockedCondBytes() { return __p.__vector_as_arraysegment(20); }
 private FlatBufferArray<int> UnlockedCondValue;
 public FlatBufferArray<int>  UnlockedCond
 {
  get{
  if (UnlockedCondValue == null)
  {
    UnlockedCondValue = new FlatBufferArray<int>(this.UnlockedCondArray, this.UnlockedCondLength);
  }
  return UnlockedCondValue;}
 }
  public int appearStatus { get { int o = __p.__offset(22); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string UpdateFieldStatusArray(int j) { int o = __p.__offset(24); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : FlatBufferConstants.DefaultString; }
  public int UpdateFieldStatusLength { get { int o = __p.__offset(24); return o != 0 ? __p.__vector_len(o) : 0; } }
 private FlatBufferArray<string> UpdateFieldStatusValue;
 public FlatBufferArray<string>  UpdateFieldStatus
 {
  get{
  if (UpdateFieldStatusValue == null)
  {
    UpdateFieldStatusValue = new FlatBufferArray<string>(this.UpdateFieldStatusArray, this.UpdateFieldStatusLength);
  }
  return UpdateFieldStatusValue;}
 }
  public int PreFieldPointId { get { int o = __p.__offset(26); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int PositionIndex { get { int o = __p.__offset(28); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int UnLockTip { get { int o = __p.__offset(30); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string NormalIconPath { get { int o = __p.__offset(32); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetNormalIconPathBytes() { return __p.__vector_as_arraysegment(32); }
  public string SelectedIconPath { get { int o = __p.__offset(34); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetSelectedIconPathBytes() { return __p.__vector_as_arraysegment(34); }
  public string BossSecondStageNormalIconPath { get { int o = __p.__offset(36); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetBossSecondStageNormalIconPathBytes() { return __p.__vector_as_arraysegment(36); }
  public string BossSecondStageSelectedIconPath { get { int o = __p.__offset(38); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetBossSecondStageSelectedIconPathBytes() { return __p.__vector_as_arraysegment(38); }
  public string BossThirdStageNormalIconPath { get { int o = __p.__offset(40); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetBossThirdStageNormalIconPathBytes() { return __p.__vector_as_arraysegment(40); }
  public string BossThirdStageSelectedIconPath { get { int o = __p.__offset(42); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetBossThirdStageSelectedIconPathBytes() { return __p.__vector_as_arraysegment(42); }

  public static Offset<TeamCopyFieldTable> CreateTeamCopyFieldTable(FlatBufferBuilder builder,
      int ID = 0,
      StringOffset NameOffset = default(StringOffset),
      int TeamGrade = 0,
      StringOffset StrongholdDescOffset = default(StringOffset),
      int DungeonId = 0,
      ProtoTable.TeamCopyFieldTable.ePresentedType PresentedType = ProtoTable.TeamCopyFieldTable.ePresentedType.PresentedType_None,
      int DefeatCond = 0,
      int RebornTime = 0,
      VectorOffset UnlockedCondOffset = default(VectorOffset),
      int appearStatus = 0,
      VectorOffset UpdateFieldStatusOffset = default(VectorOffset),
      int PreFieldPointId = 0,
      int PositionIndex = 0,
      int UnLockTip = 0,
      StringOffset NormalIconPathOffset = default(StringOffset),
      StringOffset SelectedIconPathOffset = default(StringOffset),
      StringOffset BossSecondStageNormalIconPathOffset = default(StringOffset),
      StringOffset BossSecondStageSelectedIconPathOffset = default(StringOffset),
      StringOffset BossThirdStageNormalIconPathOffset = default(StringOffset),
      StringOffset BossThirdStageSelectedIconPathOffset = default(StringOffset)) {
    builder.StartObject(20);
    TeamCopyFieldTable.AddBossThirdStageSelectedIconPath(builder, BossThirdStageSelectedIconPathOffset);
    TeamCopyFieldTable.AddBossThirdStageNormalIconPath(builder, BossThirdStageNormalIconPathOffset);
    TeamCopyFieldTable.AddBossSecondStageSelectedIconPath(builder, BossSecondStageSelectedIconPathOffset);
    TeamCopyFieldTable.AddBossSecondStageNormalIconPath(builder, BossSecondStageNormalIconPathOffset);
    TeamCopyFieldTable.AddSelectedIconPath(builder, SelectedIconPathOffset);
    TeamCopyFieldTable.AddNormalIconPath(builder, NormalIconPathOffset);
    TeamCopyFieldTable.AddUnLockTip(builder, UnLockTip);
    TeamCopyFieldTable.AddPositionIndex(builder, PositionIndex);
    TeamCopyFieldTable.AddPreFieldPointId(builder, PreFieldPointId);
    TeamCopyFieldTable.AddUpdateFieldStatus(builder, UpdateFieldStatusOffset);
    TeamCopyFieldTable.AddAppearStatus(builder, appearStatus);
    TeamCopyFieldTable.AddUnlockedCond(builder, UnlockedCondOffset);
    TeamCopyFieldTable.AddRebornTime(builder, RebornTime);
    TeamCopyFieldTable.AddDefeatCond(builder, DefeatCond);
    TeamCopyFieldTable.AddPresentedType(builder, PresentedType);
    TeamCopyFieldTable.AddDungeonId(builder, DungeonId);
    TeamCopyFieldTable.AddStrongholdDesc(builder, StrongholdDescOffset);
    TeamCopyFieldTable.AddTeamGrade(builder, TeamGrade);
    TeamCopyFieldTable.AddName(builder, NameOffset);
    TeamCopyFieldTable.AddID(builder, ID);
    return TeamCopyFieldTable.EndTeamCopyFieldTable(builder);
  }

  public static void StartTeamCopyFieldTable(FlatBufferBuilder builder) { builder.StartObject(20); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset NameOffset) { builder.AddOffset(1, NameOffset.Value, 0); }
  public static void AddTeamGrade(FlatBufferBuilder builder, int TeamGrade) { builder.AddInt(2, TeamGrade, 0); }
  public static void AddStrongholdDesc(FlatBufferBuilder builder, StringOffset StrongholdDescOffset) { builder.AddOffset(3, StrongholdDescOffset.Value, 0); }
  public static void AddDungeonId(FlatBufferBuilder builder, int DungeonId) { builder.AddInt(4, DungeonId, 0); }
  public static void AddPresentedType(FlatBufferBuilder builder, ProtoTable.TeamCopyFieldTable.ePresentedType PresentedType) { builder.AddInt(5, (int)PresentedType, 0); }
  public static void AddDefeatCond(FlatBufferBuilder builder, int DefeatCond) { builder.AddInt(6, DefeatCond, 0); }
  public static void AddRebornTime(FlatBufferBuilder builder, int RebornTime) { builder.AddInt(7, RebornTime, 0); }
  public static void AddUnlockedCond(FlatBufferBuilder builder, VectorOffset UnlockedCondOffset) { builder.AddOffset(8, UnlockedCondOffset.Value, 0); }
  public static VectorOffset CreateUnlockedCondVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartUnlockedCondVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddAppearStatus(FlatBufferBuilder builder, int appearStatus) { builder.AddInt(9, appearStatus, 0); }
  public static void AddUpdateFieldStatus(FlatBufferBuilder builder, VectorOffset UpdateFieldStatusOffset) { builder.AddOffset(10, UpdateFieldStatusOffset.Value, 0); }
  public static VectorOffset CreateUpdateFieldStatusVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartUpdateFieldStatusVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddPreFieldPointId(FlatBufferBuilder builder, int PreFieldPointId) { builder.AddInt(11, PreFieldPointId, 0); }
  public static void AddPositionIndex(FlatBufferBuilder builder, int PositionIndex) { builder.AddInt(12, PositionIndex, 0); }
  public static void AddUnLockTip(FlatBufferBuilder builder, int UnLockTip) { builder.AddInt(13, UnLockTip, 0); }
  public static void AddNormalIconPath(FlatBufferBuilder builder, StringOffset NormalIconPathOffset) { builder.AddOffset(14, NormalIconPathOffset.Value, 0); }
  public static void AddSelectedIconPath(FlatBufferBuilder builder, StringOffset SelectedIconPathOffset) { builder.AddOffset(15, SelectedIconPathOffset.Value, 0); }
  public static void AddBossSecondStageNormalIconPath(FlatBufferBuilder builder, StringOffset BossSecondStageNormalIconPathOffset) { builder.AddOffset(16, BossSecondStageNormalIconPathOffset.Value, 0); }
  public static void AddBossSecondStageSelectedIconPath(FlatBufferBuilder builder, StringOffset BossSecondStageSelectedIconPathOffset) { builder.AddOffset(17, BossSecondStageSelectedIconPathOffset.Value, 0); }
  public static void AddBossThirdStageNormalIconPath(FlatBufferBuilder builder, StringOffset BossThirdStageNormalIconPathOffset) { builder.AddOffset(18, BossThirdStageNormalIconPathOffset.Value, 0); }
  public static void AddBossThirdStageSelectedIconPath(FlatBufferBuilder builder, StringOffset BossThirdStageSelectedIconPathOffset) { builder.AddOffset(19, BossThirdStageSelectedIconPathOffset.Value, 0); }
  public static Offset<TeamCopyFieldTable> EndTeamCopyFieldTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<TeamCopyFieldTable>(o);
  }
  public static void FinishTeamCopyFieldTableBuffer(FlatBufferBuilder builder, Offset<TeamCopyFieldTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

