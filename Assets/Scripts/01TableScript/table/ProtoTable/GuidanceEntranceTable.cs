// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class GuidanceEntranceTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = 477889616,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static GuidanceEntranceTable GetRootAsGuidanceEntranceTable(ByteBuffer _bb) { return GetRootAsGuidanceEntranceTable(_bb, new GuidanceEntranceTable()); }
  public static GuidanceEntranceTable GetRootAsGuidanceEntranceTable(ByteBuffer _bb, GuidanceEntranceTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public GuidanceEntranceTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
  public int FunctionId { get { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string Icon { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetIconBytes() { return __p.__vector_as_arraysegment(10); }
  public string LinkInfo { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetLinkInfoBytes() { return __p.__vector_as_arraysegment(12); }

  public static Offset<GuidanceEntranceTable> CreateGuidanceEntranceTable(FlatBufferBuilder builder,
      int ID = 0,
      StringOffset NameOffset = default(StringOffset),
      int FunctionId = 0,
      StringOffset IconOffset = default(StringOffset),
      StringOffset LinkInfoOffset = default(StringOffset)) {
    builder.StartObject(5);
    GuidanceEntranceTable.AddLinkInfo(builder, LinkInfoOffset);
    GuidanceEntranceTable.AddIcon(builder, IconOffset);
    GuidanceEntranceTable.AddFunctionId(builder, FunctionId);
    GuidanceEntranceTable.AddName(builder, NameOffset);
    GuidanceEntranceTable.AddID(builder, ID);
    return GuidanceEntranceTable.EndGuidanceEntranceTable(builder);
  }

  public static void StartGuidanceEntranceTable(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset NameOffset) { builder.AddOffset(1, NameOffset.Value, 0); }
  public static void AddFunctionId(FlatBufferBuilder builder, int FunctionId) { builder.AddInt(2, FunctionId, 0); }
  public static void AddIcon(FlatBufferBuilder builder, StringOffset IconOffset) { builder.AddOffset(3, IconOffset.Value, 0); }
  public static void AddLinkInfo(FlatBufferBuilder builder, StringOffset LinkInfoOffset) { builder.AddOffset(4, LinkInfoOffset.Value, 0); }
  public static Offset<GuidanceEntranceTable> EndGuidanceEntranceTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<GuidanceEntranceTable>(o);
  }
  public static void FinishGuidanceEntranceTableBuffer(FlatBufferBuilder builder, Offset<GuidanceEntranceTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

