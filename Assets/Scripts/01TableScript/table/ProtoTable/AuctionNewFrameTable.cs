// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class AuctionNewFrameTable : IFlatbufferObject
{
public enum eMenuType : int
{
 Auction_Menu_None = 0,
 Auction_Menu_Notice = 1,
};

public enum eJob : int
{
 AC_JIANSHI = 0,
 AC_QIANGSHOU = 1,
 AC_FASHI = 2,
 AC_GEDOU = 3,
 AC_SHENGZHIZHE = 4,
 AC_JOB_ALL = 100,
};

public enum eMainItemType : int
{
 MIT_NONE = 0,
 MIT_WEAPON = 1,
 MIT_ARMOR = 2,
 MIT_JEWELRY = 3,
 MIT_COST = 4,
 MIT_MATERIAL = 5,
 MIT_SPECIAL = 6,
};

public enum eFilterItemType : int
{
 FIT_NONE = 0,
 FIT_QUALITY = 1,
 FIT_LEVEL = 2,
 FIT_SUCCEEDRAT = 3,
 FIT_PRICE = 4,
 FIT_JOB = 5,
};

public enum eCrypt : int
{
 code = 1527745024,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static AuctionNewFrameTable GetRootAsAuctionNewFrameTable(ByteBuffer _bb) { return GetRootAsAuctionNewFrameTable(_bb, new AuctionNewFrameTable()); }
  public static AuctionNewFrameTable GetRootAsAuctionNewFrameTable(ByteBuffer _bb, AuctionNewFrameTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public AuctionNewFrameTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Layer { get { int o = __p.__offset(6); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string Name { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(8); }
  public int Sort { get { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public ProtoTable.AuctionNewFrameTable.eMenuType MenuType { get { int o = __p.__offset(12); return o != 0 ? (ProtoTable.AuctionNewFrameTable.eMenuType)__p.bb.GetInt(o + __p.bb_pos) : ProtoTable.AuctionNewFrameTable.eMenuType.Auction_Menu_None; } }
  public int LayerRelationArray(int j) { int o = __p.__offset(14); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int LayerRelationLength { get { int o = __p.__offset(14); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetLayerRelationBytes() { return __p.__vector_as_arraysegment(14); }
 private FlatBufferArray<int> LayerRelationValue;
 public FlatBufferArray<int>  LayerRelation
 {
  get{
  if (LayerRelationValue == null)
  {
    LayerRelationValue = new FlatBufferArray<int>(this.LayerRelationArray, this.LayerRelationLength);
  }
  return LayerRelationValue;}
 }
  public int PageDisplay { get { int o = __p.__offset(16); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int DeleteLayerIDArray(int j) { int o = __p.__offset(18); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int DeleteLayerIDLength { get { int o = __p.__offset(18); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetDeleteLayerIDBytes() { return __p.__vector_as_arraysegment(18); }
 private FlatBufferArray<int> DeleteLayerIDValue;
 public FlatBufferArray<int>  DeleteLayerID
 {
  get{
  if (DeleteLayerIDValue == null)
  {
    DeleteLayerIDValue = new FlatBufferArray<int>(this.DeleteLayerIDArray, this.DeleteLayerIDLength);
  }
  return DeleteLayerIDValue;}
 }
  public ProtoTable.AuctionNewFrameTable.eJob Job { get { int o = __p.__offset(20); return o != 0 ? (ProtoTable.AuctionNewFrameTable.eJob)__p.bb.GetInt(o + __p.bb_pos) : ProtoTable.AuctionNewFrameTable.eJob.AC_JIANSHI; } }
  public ProtoTable.AuctionNewFrameTable.eMainItemType MainItemType { get { int o = __p.__offset(22); return o != 0 ? (ProtoTable.AuctionNewFrameTable.eMainItemType)__p.bb.GetInt(o + __p.bb_pos) : ProtoTable.AuctionNewFrameTable.eMainItemType.MIT_NONE; } }
  public int SubTypeArray(int j) { int o = __p.__offset(24); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int SubTypeLength { get { int o = __p.__offset(24); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetSubTypeBytes() { return __p.__vector_as_arraysegment(24); }
 private FlatBufferArray<int> SubTypeValue;
 public FlatBufferArray<int>  SubType
 {
  get{
  if (SubTypeValue == null)
  {
    SubTypeValue = new FlatBufferArray<int>(this.SubTypeArray, this.SubTypeLength);
  }
  return SubTypeValue;}
 }
  public int ThirdTypeArray(int j) { int o = __p.__offset(26); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int ThirdTypeLength { get { int o = __p.__offset(26); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetThirdTypeBytes() { return __p.__vector_as_arraysegment(26); }
 private FlatBufferArray<int> ThirdTypeValue;
 public FlatBufferArray<int>  ThirdType
 {
  get{
  if (ThirdTypeValue == null)
  {
    ThirdTypeValue = new FlatBufferArray<int>(this.ThirdTypeArray, this.ThirdTypeLength);
  }
  return ThirdTypeValue;}
 }
  public ProtoTable.AuctionNewFrameTable.eFilterItemType FilterItemTypeArray(int j) { int o = __p.__offset(28); return o != 0 ? (ProtoTable.AuctionNewFrameTable.eFilterItemType)__p.bb.GetInt(__p.__vector(o) + j * 4) : (ProtoTable.AuctionNewFrameTable.eFilterItemType)0; }
  public int FilterItemTypeLength { get { int o = __p.__offset(28); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetFilterItemTypeBytes() { return __p.__vector_as_arraysegment(28); }
 private FlatBufferArray<ProtoTable.AuctionNewFrameTable.eFilterItemType> FilterItemTypeValue;
 public FlatBufferArray<ProtoTable.AuctionNewFrameTable.eFilterItemType>  FilterItemType
 {
  get{
  if (FilterItemTypeValue == null)
  {
    FilterItemTypeValue = new FlatBufferArray<ProtoTable.AuctionNewFrameTable.eFilterItemType>(this.FilterItemTypeArray, this.FilterItemTypeLength);
  }
  return FilterItemTypeValue;}
 }
  public int FilterSortTypeArray(int j) { int o = __p.__offset(30); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int FilterSortTypeLength { get { int o = __p.__offset(30); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetFilterSortTypeBytes() { return __p.__vector_as_arraysegment(30); }
 private FlatBufferArray<int> FilterSortTypeValue;
 public FlatBufferArray<int>  FilterSortType
 {
  get{
  if (FilterSortTypeValue == null)
  {
    FilterSortTypeValue = new FlatBufferArray<int>(this.FilterSortTypeArray, this.FilterSortTypeLength);
  }
  return FilterSortTypeValue;}
 }
  public int ChooseLogic { get { int o = __p.__offset(32); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int JobBaseId { get { int o = __p.__offset(34); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int SpecialParametersType { get { int o = __p.__offset(36); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int SpecialParameters { get { int o = __p.__offset(38); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int IsShow { get { int o = __p.__offset(40); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string IconPath { get { int o = __p.__offset(42); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetIconPathBytes() { return __p.__vector_as_arraysegment(42); }
  public string RecommendedJob { get { int o = __p.__offset(44); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetRecommendedJobBytes() { return __p.__vector_as_arraysegment(44); }
  public string BaseMap { get { int o = __p.__offset(46); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetBaseMapBytes() { return __p.__vector_as_arraysegment(46); }

  public static Offset<AuctionNewFrameTable> CreateAuctionNewFrameTable(FlatBufferBuilder builder,
      int ID = 0,
      int Layer = 0,
      StringOffset NameOffset = default(StringOffset),
      int Sort = 0,
      ProtoTable.AuctionNewFrameTable.eMenuType MenuType = ProtoTable.AuctionNewFrameTable.eMenuType.Auction_Menu_None,
      VectorOffset LayerRelationOffset = default(VectorOffset),
      int PageDisplay = 0,
      VectorOffset DeleteLayerIDOffset = default(VectorOffset),
      ProtoTable.AuctionNewFrameTable.eJob Job = ProtoTable.AuctionNewFrameTable.eJob.AC_JIANSHI,
      ProtoTable.AuctionNewFrameTable.eMainItemType MainItemType = ProtoTable.AuctionNewFrameTable.eMainItemType.MIT_NONE,
      VectorOffset SubTypeOffset = default(VectorOffset),
      VectorOffset ThirdTypeOffset = default(VectorOffset),
      VectorOffset FilterItemTypeOffset = default(VectorOffset),
      VectorOffset FilterSortTypeOffset = default(VectorOffset),
      int ChooseLogic = 0,
      int JobBaseId = 0,
      int SpecialParametersType = 0,
      int SpecialParameters = 0,
      int IsShow = 0,
      StringOffset IconPathOffset = default(StringOffset),
      StringOffset RecommendedJobOffset = default(StringOffset),
      StringOffset BaseMapOffset = default(StringOffset)) {
    builder.StartObject(22);
    AuctionNewFrameTable.AddBaseMap(builder, BaseMapOffset);
    AuctionNewFrameTable.AddRecommendedJob(builder, RecommendedJobOffset);
    AuctionNewFrameTable.AddIconPath(builder, IconPathOffset);
    AuctionNewFrameTable.AddIsShow(builder, IsShow);
    AuctionNewFrameTable.AddSpecialParameters(builder, SpecialParameters);
    AuctionNewFrameTable.AddSpecialParametersType(builder, SpecialParametersType);
    AuctionNewFrameTable.AddJobBaseId(builder, JobBaseId);
    AuctionNewFrameTable.AddChooseLogic(builder, ChooseLogic);
    AuctionNewFrameTable.AddFilterSortType(builder, FilterSortTypeOffset);
    AuctionNewFrameTable.AddFilterItemType(builder, FilterItemTypeOffset);
    AuctionNewFrameTable.AddThirdType(builder, ThirdTypeOffset);
    AuctionNewFrameTable.AddSubType(builder, SubTypeOffset);
    AuctionNewFrameTable.AddMainItemType(builder, MainItemType);
    AuctionNewFrameTable.AddJob(builder, Job);
    AuctionNewFrameTable.AddDeleteLayerID(builder, DeleteLayerIDOffset);
    AuctionNewFrameTable.AddPageDisplay(builder, PageDisplay);
    AuctionNewFrameTable.AddLayerRelation(builder, LayerRelationOffset);
    AuctionNewFrameTable.AddMenuType(builder, MenuType);
    AuctionNewFrameTable.AddSort(builder, Sort);
    AuctionNewFrameTable.AddName(builder, NameOffset);
    AuctionNewFrameTable.AddLayer(builder, Layer);
    AuctionNewFrameTable.AddID(builder, ID);
    return AuctionNewFrameTable.EndAuctionNewFrameTable(builder);
  }

  public static void StartAuctionNewFrameTable(FlatBufferBuilder builder) { builder.StartObject(22); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddLayer(FlatBufferBuilder builder, int Layer) { builder.AddInt(1, Layer, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset NameOffset) { builder.AddOffset(2, NameOffset.Value, 0); }
  public static void AddSort(FlatBufferBuilder builder, int Sort) { builder.AddInt(3, Sort, 0); }
  public static void AddMenuType(FlatBufferBuilder builder, ProtoTable.AuctionNewFrameTable.eMenuType MenuType) { builder.AddInt(4, (int)MenuType, 0); }
  public static void AddLayerRelation(FlatBufferBuilder builder, VectorOffset LayerRelationOffset) { builder.AddOffset(5, LayerRelationOffset.Value, 0); }
  public static VectorOffset CreateLayerRelationVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartLayerRelationVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddPageDisplay(FlatBufferBuilder builder, int PageDisplay) { builder.AddInt(6, PageDisplay, 0); }
  public static void AddDeleteLayerID(FlatBufferBuilder builder, VectorOffset DeleteLayerIDOffset) { builder.AddOffset(7, DeleteLayerIDOffset.Value, 0); }
  public static VectorOffset CreateDeleteLayerIDVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartDeleteLayerIDVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddJob(FlatBufferBuilder builder, ProtoTable.AuctionNewFrameTable.eJob Job) { builder.AddInt(8, (int)Job, 0); }
  public static void AddMainItemType(FlatBufferBuilder builder, ProtoTable.AuctionNewFrameTable.eMainItemType MainItemType) { builder.AddInt(9, (int)MainItemType, 0); }
  public static void AddSubType(FlatBufferBuilder builder, VectorOffset SubTypeOffset) { builder.AddOffset(10, SubTypeOffset.Value, 0); }
  public static VectorOffset CreateSubTypeVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartSubTypeVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddThirdType(FlatBufferBuilder builder, VectorOffset ThirdTypeOffset) { builder.AddOffset(11, ThirdTypeOffset.Value, 0); }
  public static VectorOffset CreateThirdTypeVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartThirdTypeVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddFilterItemType(FlatBufferBuilder builder, VectorOffset FilterItemTypeOffset) { builder.AddOffset(12, FilterItemTypeOffset.Value, 0); }
  public static VectorOffset CreateFilterItemTypeVector(FlatBufferBuilder builder, ProtoTable.AuctionNewFrameTable.eFilterItemType[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt((int)data[i]); return builder.EndVector(); }
  public static void StartFilterItemTypeVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddFilterSortType(FlatBufferBuilder builder, VectorOffset FilterSortTypeOffset) { builder.AddOffset(13, FilterSortTypeOffset.Value, 0); }
  public static VectorOffset CreateFilterSortTypeVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartFilterSortTypeVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddChooseLogic(FlatBufferBuilder builder, int ChooseLogic) { builder.AddInt(14, ChooseLogic, 0); }
  public static void AddJobBaseId(FlatBufferBuilder builder, int JobBaseId) { builder.AddInt(15, JobBaseId, 0); }
  public static void AddSpecialParametersType(FlatBufferBuilder builder, int SpecialParametersType) { builder.AddInt(16, SpecialParametersType, 0); }
  public static void AddSpecialParameters(FlatBufferBuilder builder, int SpecialParameters) { builder.AddInt(17, SpecialParameters, 0); }
  public static void AddIsShow(FlatBufferBuilder builder, int IsShow) { builder.AddInt(18, IsShow, 0); }
  public static void AddIconPath(FlatBufferBuilder builder, StringOffset IconPathOffset) { builder.AddOffset(19, IconPathOffset.Value, 0); }
  public static void AddRecommendedJob(FlatBufferBuilder builder, StringOffset RecommendedJobOffset) { builder.AddOffset(20, RecommendedJobOffset.Value, 0); }
  public static void AddBaseMap(FlatBufferBuilder builder, StringOffset BaseMapOffset) { builder.AddOffset(21, BaseMapOffset.Value, 0); }
  public static Offset<AuctionNewFrameTable> EndAuctionNewFrameTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<AuctionNewFrameTable>(o);
  }
  public static void FinishAuctionNewFrameTableBuffer(FlatBufferBuilder builder, Offset<AuctionNewFrameTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

