// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class DungeonDailyDropTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = 223055862,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static DungeonDailyDropTable GetRootAsDungeonDailyDropTable(ByteBuffer _bb) { return GetRootAsDungeonDailyDropTable(_bb, new DungeonDailyDropTable()); }
  public static DungeonDailyDropTable GetRootAsDungeonDailyDropTable(ByteBuffer _bb, DungeonDailyDropTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public DungeonDailyDropTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int DailyLimit { get { int o = __p.__offset(6); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string Items { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetItemsBytes() { return __p.__vector_as_arraysegment(8); }

  public static Offset<DungeonDailyDropTable> CreateDungeonDailyDropTable(FlatBufferBuilder builder,
      int ID = 0,
      int DailyLimit = 0,
      StringOffset ItemsOffset = default(StringOffset)) {
    builder.StartObject(3);
    DungeonDailyDropTable.AddItems(builder, ItemsOffset);
    DungeonDailyDropTable.AddDailyLimit(builder, DailyLimit);
    DungeonDailyDropTable.AddID(builder, ID);
    return DungeonDailyDropTable.EndDungeonDailyDropTable(builder);
  }

  public static void StartDungeonDailyDropTable(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddDailyLimit(FlatBufferBuilder builder, int DailyLimit) { builder.AddInt(1, DailyLimit, 0); }
  public static void AddItems(FlatBufferBuilder builder, StringOffset ItemsOffset) { builder.AddOffset(2, ItemsOffset.Value, 0); }
  public static Offset<DungeonDailyDropTable> EndDungeonDailyDropTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<DungeonDailyDropTable>(o);
  }
  public static void FinishDungeonDailyDropTableBuffer(FlatBufferBuilder builder, Offset<DungeonDailyDropTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

