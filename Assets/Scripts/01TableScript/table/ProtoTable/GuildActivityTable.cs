// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class GuildActivityTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = 71967124,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static GuildActivityTable GetRootAsGuildActivityTable(ByteBuffer _bb) { return GetRootAsGuildActivityTable(_bb, new GuildActivityTable()); }
  public static GuildActivityTable GetRootAsGuildActivityTable(ByteBuffer _bb, GuildActivityTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public GuildActivityTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string activityName { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetActivityNameBytes() { return __p.__vector_as_arraysegment(6); }
  public string activityDesc { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetActivityDescBytes() { return __p.__vector_as_arraysegment(8); }
  public string iconPath { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetIconPathBytes() { return __p.__vector_as_arraysegment(10); }
  public string openTime { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetOpenTimeBytes() { return __p.__vector_as_arraysegment(12); }
  public string activityUnLockConditon { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetActivityUnLockConditonBytes() { return __p.__vector_as_arraysegment(14); }
  public string btnDefaultText { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetBtnDefaultTextBytes() { return __p.__vector_as_arraysegment(16); }
  public string btnCallBack { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetBtnCallBackBytes() { return __p.__vector_as_arraysegment(18); }
  public string stateUpdateCallBack { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetStateUpdateCallBackBytes() { return __p.__vector_as_arraysegment(20); }
  public string activityUnLockCallBack { get { int o = __p.__offset(22); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetActivityUnLockCallBackBytes() { return __p.__vector_as_arraysegment(22); }
  public string openWeek { get { int o = __p.__offset(24); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetOpenWeekBytes() { return __p.__vector_as_arraysegment(24); }
  public string openHourStart { get { int o = __p.__offset(26); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetOpenHourStartBytes() { return __p.__vector_as_arraysegment(26); }
  public string redPointUpdateCallBack { get { int o = __p.__offset(28); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetRedPointUpdateCallBackBytes() { return __p.__vector_as_arraysegment(28); }

  public static Offset<GuildActivityTable> CreateGuildActivityTable(FlatBufferBuilder builder,
      int ID = 0,
      StringOffset activityNameOffset = default(StringOffset),
      StringOffset activityDescOffset = default(StringOffset),
      StringOffset iconPathOffset = default(StringOffset),
      StringOffset openTimeOffset = default(StringOffset),
      StringOffset activityUnLockConditonOffset = default(StringOffset),
      StringOffset btnDefaultTextOffset = default(StringOffset),
      StringOffset btnCallBackOffset = default(StringOffset),
      StringOffset stateUpdateCallBackOffset = default(StringOffset),
      StringOffset activityUnLockCallBackOffset = default(StringOffset),
      StringOffset openWeekOffset = default(StringOffset),
      StringOffset openHourStartOffset = default(StringOffset),
      StringOffset redPointUpdateCallBackOffset = default(StringOffset)) {
    builder.StartObject(13);
    GuildActivityTable.AddRedPointUpdateCallBack(builder, redPointUpdateCallBackOffset);
    GuildActivityTable.AddOpenHourStart(builder, openHourStartOffset);
    GuildActivityTable.AddOpenWeek(builder, openWeekOffset);
    GuildActivityTable.AddActivityUnLockCallBack(builder, activityUnLockCallBackOffset);
    GuildActivityTable.AddStateUpdateCallBack(builder, stateUpdateCallBackOffset);
    GuildActivityTable.AddBtnCallBack(builder, btnCallBackOffset);
    GuildActivityTable.AddBtnDefaultText(builder, btnDefaultTextOffset);
    GuildActivityTable.AddActivityUnLockConditon(builder, activityUnLockConditonOffset);
    GuildActivityTable.AddOpenTime(builder, openTimeOffset);
    GuildActivityTable.AddIconPath(builder, iconPathOffset);
    GuildActivityTable.AddActivityDesc(builder, activityDescOffset);
    GuildActivityTable.AddActivityName(builder, activityNameOffset);
    GuildActivityTable.AddID(builder, ID);
    return GuildActivityTable.EndGuildActivityTable(builder);
  }

  public static void StartGuildActivityTable(FlatBufferBuilder builder) { builder.StartObject(13); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddActivityName(FlatBufferBuilder builder, StringOffset activityNameOffset) { builder.AddOffset(1, activityNameOffset.Value, 0); }
  public static void AddActivityDesc(FlatBufferBuilder builder, StringOffset activityDescOffset) { builder.AddOffset(2, activityDescOffset.Value, 0); }
  public static void AddIconPath(FlatBufferBuilder builder, StringOffset iconPathOffset) { builder.AddOffset(3, iconPathOffset.Value, 0); }
  public static void AddOpenTime(FlatBufferBuilder builder, StringOffset openTimeOffset) { builder.AddOffset(4, openTimeOffset.Value, 0); }
  public static void AddActivityUnLockConditon(FlatBufferBuilder builder, StringOffset activityUnLockConditonOffset) { builder.AddOffset(5, activityUnLockConditonOffset.Value, 0); }
  public static void AddBtnDefaultText(FlatBufferBuilder builder, StringOffset btnDefaultTextOffset) { builder.AddOffset(6, btnDefaultTextOffset.Value, 0); }
  public static void AddBtnCallBack(FlatBufferBuilder builder, StringOffset btnCallBackOffset) { builder.AddOffset(7, btnCallBackOffset.Value, 0); }
  public static void AddStateUpdateCallBack(FlatBufferBuilder builder, StringOffset stateUpdateCallBackOffset) { builder.AddOffset(8, stateUpdateCallBackOffset.Value, 0); }
  public static void AddActivityUnLockCallBack(FlatBufferBuilder builder, StringOffset activityUnLockCallBackOffset) { builder.AddOffset(9, activityUnLockCallBackOffset.Value, 0); }
  public static void AddOpenWeek(FlatBufferBuilder builder, StringOffset openWeekOffset) { builder.AddOffset(10, openWeekOffset.Value, 0); }
  public static void AddOpenHourStart(FlatBufferBuilder builder, StringOffset openHourStartOffset) { builder.AddOffset(11, openHourStartOffset.Value, 0); }
  public static void AddRedPointUpdateCallBack(FlatBufferBuilder builder, StringOffset redPointUpdateCallBackOffset) { builder.AddOffset(12, redPointUpdateCallBackOffset.Value, 0); }
  public static Offset<GuildActivityTable> EndGuildActivityTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<GuildActivityTable>(o);
  }
  public static void FinishGuildActivityTableBuffer(FlatBufferBuilder builder, Offset<GuildActivityTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

