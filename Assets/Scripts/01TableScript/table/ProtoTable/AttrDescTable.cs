// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class AttrDescTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = 758544612,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static AttrDescTable GetRootAsAttrDescTable(ByteBuffer _bb) { return GetRootAsAttrDescTable(_bb, new AttrDescTable()); }
  public static AttrDescTable GetRootAsAttrDescTable(ByteBuffer _bb, AttrDescTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public AttrDescTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
  public string Desc { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetDescBytes() { return __p.__vector_as_arraysegment(8); }
  public string DescNagative { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetDescNagativeBytes() { return __p.__vector_as_arraysegment(10); }
  public string IconPath { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetIconPathBytes() { return __p.__vector_as_arraysegment(12); }

  public static Offset<AttrDescTable> CreateAttrDescTable(FlatBufferBuilder builder,
      int ID = 0,
      StringOffset NameOffset = default(StringOffset),
      StringOffset DescOffset = default(StringOffset),
      StringOffset DescNagativeOffset = default(StringOffset),
      StringOffset IconPathOffset = default(StringOffset)) {
    builder.StartObject(5);
    AttrDescTable.AddIconPath(builder, IconPathOffset);
    AttrDescTable.AddDescNagative(builder, DescNagativeOffset);
    AttrDescTable.AddDesc(builder, DescOffset);
    AttrDescTable.AddName(builder, NameOffset);
    AttrDescTable.AddID(builder, ID);
    return AttrDescTable.EndAttrDescTable(builder);
  }

  public static void StartAttrDescTable(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset NameOffset) { builder.AddOffset(1, NameOffset.Value, 0); }
  public static void AddDesc(FlatBufferBuilder builder, StringOffset DescOffset) { builder.AddOffset(2, DescOffset.Value, 0); }
  public static void AddDescNagative(FlatBufferBuilder builder, StringOffset DescNagativeOffset) { builder.AddOffset(3, DescNagativeOffset.Value, 0); }
  public static void AddIconPath(FlatBufferBuilder builder, StringOffset IconPathOffset) { builder.AddOffset(4, IconPathOffset.Value, 0); }
  public static Offset<AttrDescTable> EndAttrDescTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<AttrDescTable>(o);
  }
  public static void FinishAttrDescTableBuffer(FlatBufferBuilder builder, Offset<AttrDescTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

