// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class SkillInputTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = -1721590939,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static SkillInputTable GetRootAsSkillInputTable(ByteBuffer _bb) { return GetRootAsSkillInputTable(_bb, new SkillInputTable()); }
  public static SkillInputTable GetRootAsSkillInputTable(ByteBuffer _bb, SkillInputTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public SkillInputTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Name { get { int o = __p.__offset(6); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Level { get { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int CameraDistance { get { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int PositionOffsetArray(int j) { int o = __p.__offset(12); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int PositionOffsetLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetPositionOffsetBytes() { return __p.__vector_as_arraysegment(12); }
 private FlatBufferArray<int> PositionOffsetValue;
 public FlatBufferArray<int>  PositionOffset
 {
  get{
  if (PositionOffsetValue == null)
  {
    PositionOffsetValue = new FlatBufferArray<int>(this.PositionOffsetArray, this.PositionOffsetLength);
  }
  return PositionOffsetValue;}
 }
  public bool Face { get { int o = __p.__offset(14); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public string Assembling { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetAssemblingBytes() { return __p.__vector_as_arraysegment(16); }
  public int PreConditionArray(int j) { int o = __p.__offset(18); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int PreConditionLength { get { int o = __p.__offset(18); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetPreConditionBytes() { return __p.__vector_as_arraysegment(18); }
 private FlatBufferArray<int> PreConditionValue;
 public FlatBufferArray<int>  PreCondition
 {
  get{
  if (PreConditionValue == null)
  {
    PreConditionValue = new FlatBufferArray<int>(this.PreConditionArray, this.PreConditionLength);
  }
  return PreConditionValue;}
 }
  public int LoopTime { get { int o = __p.__offset(20); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Input1Array(int j) { int o = __p.__offset(22); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int Input1Length { get { int o = __p.__offset(22); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetInput1Bytes() { return __p.__vector_as_arraysegment(22); }
 private FlatBufferArray<int> Input1Value;
 public FlatBufferArray<int>  Input1
 {
  get{
  if (Input1Value == null)
  {
    Input1Value = new FlatBufferArray<int>(this.Input1Array, this.Input1Length);
  }
  return Input1Value;}
 }
  public int Input2Array(int j) { int o = __p.__offset(24); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int Input2Length { get { int o = __p.__offset(24); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetInput2Bytes() { return __p.__vector_as_arraysegment(24); }
 private FlatBufferArray<int> Input2Value;
 public FlatBufferArray<int>  Input2
 {
  get{
  if (Input2Value == null)
  {
    Input2Value = new FlatBufferArray<int>(this.Input2Array, this.Input2Length);
  }
  return Input2Value;}
 }
  public int Input3Array(int j) { int o = __p.__offset(26); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int Input3Length { get { int o = __p.__offset(26); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetInput3Bytes() { return __p.__vector_as_arraysegment(26); }
 private FlatBufferArray<int> Input3Value;
 public FlatBufferArray<int>  Input3
 {
  get{
  if (Input3Value == null)
  {
    Input3Value = new FlatBufferArray<int>(this.Input3Array, this.Input3Length);
  }
  return Input3Value;}
 }
  public int Input4Array(int j) { int o = __p.__offset(28); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int Input4Length { get { int o = __p.__offset(28); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetInput4Bytes() { return __p.__vector_as_arraysegment(28); }
 private FlatBufferArray<int> Input4Value;
 public FlatBufferArray<int>  Input4
 {
  get{
  if (Input4Value == null)
  {
    Input4Value = new FlatBufferArray<int>(this.Input4Array, this.Input4Length);
  }
  return Input4Value;}
 }
  public int Input5Array(int j) { int o = __p.__offset(30); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int Input5Length { get { int o = __p.__offset(30); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetInput5Bytes() { return __p.__vector_as_arraysegment(30); }
 private FlatBufferArray<int> Input5Value;
 public FlatBufferArray<int>  Input5
 {
  get{
  if (Input5Value == null)
  {
    Input5Value = new FlatBufferArray<int>(this.Input5Array, this.Input5Length);
  }
  return Input5Value;}
 }
  public int MonsterInfo1Array(int j) { int o = __p.__offset(32); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int MonsterInfo1Length { get { int o = __p.__offset(32); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetMonsterInfo1Bytes() { return __p.__vector_as_arraysegment(32); }
 private FlatBufferArray<int> MonsterInfo1Value;
 public FlatBufferArray<int>  MonsterInfo1
 {
  get{
  if (MonsterInfo1Value == null)
  {
    MonsterInfo1Value = new FlatBufferArray<int>(this.MonsterInfo1Array, this.MonsterInfo1Length);
  }
  return MonsterInfo1Value;}
 }
  public int MonsterInfo2Array(int j) { int o = __p.__offset(34); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int MonsterInfo2Length { get { int o = __p.__offset(34); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetMonsterInfo2Bytes() { return __p.__vector_as_arraysegment(34); }
 private FlatBufferArray<int> MonsterInfo2Value;
 public FlatBufferArray<int>  MonsterInfo2
 {
  get{
  if (MonsterInfo2Value == null)
  {
    MonsterInfo2Value = new FlatBufferArray<int>(this.MonsterInfo2Array, this.MonsterInfo2Length);
  }
  return MonsterInfo2Value;}
 }
  public int MonsterInfo3Array(int j) { int o = __p.__offset(36); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int MonsterInfo3Length { get { int o = __p.__offset(36); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetMonsterInfo3Bytes() { return __p.__vector_as_arraysegment(36); }
 private FlatBufferArray<int> MonsterInfo3Value;
 public FlatBufferArray<int>  MonsterInfo3
 {
  get{
  if (MonsterInfo3Value == null)
  {
    MonsterInfo3Value = new FlatBufferArray<int>(this.MonsterInfo3Array, this.MonsterInfo3Length);
  }
  return MonsterInfo3Value;}
 }
  public int MonsterInfo4Array(int j) { int o = __p.__offset(38); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int MonsterInfo4Length { get { int o = __p.__offset(38); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetMonsterInfo4Bytes() { return __p.__vector_as_arraysegment(38); }
 private FlatBufferArray<int> MonsterInfo4Value;
 public FlatBufferArray<int>  MonsterInfo4
 {
  get{
  if (MonsterInfo4Value == null)
  {
    MonsterInfo4Value = new FlatBufferArray<int>(this.MonsterInfo4Array, this.MonsterInfo4Length);
  }
  return MonsterInfo4Value;}
 }
  public int MonsterInfo5Array(int j) { int o = __p.__offset(40); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int MonsterInfo5Length { get { int o = __p.__offset(40); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetMonsterInfo5Bytes() { return __p.__vector_as_arraysegment(40); }
 private FlatBufferArray<int> MonsterInfo5Value;
 public FlatBufferArray<int>  MonsterInfo5
 {
  get{
  if (MonsterInfo5Value == null)
  {
    MonsterInfo5Value = new FlatBufferArray<int>(this.MonsterInfo5Array, this.MonsterInfo5Length);
  }
  return MonsterInfo5Value;}
 }
  public int MonsterInfo6Array(int j) { int o = __p.__offset(42); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int MonsterInfo6Length { get { int o = __p.__offset(42); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetMonsterInfo6Bytes() { return __p.__vector_as_arraysegment(42); }
 private FlatBufferArray<int> MonsterInfo6Value;
 public FlatBufferArray<int>  MonsterInfo6
 {
  get{
  if (MonsterInfo6Value == null)
  {
    MonsterInfo6Value = new FlatBufferArray<int>(this.MonsterInfo6Array, this.MonsterInfo6Length);
  }
  return MonsterInfo6Value;}
 }

  public static Offset<SkillInputTable> CreateSkillInputTable(FlatBufferBuilder builder,
      int ID = 0,
      int Name = 0,
      int Level = 0,
      int CameraDistance = 0,
      VectorOffset PositionOffsetOffset = default(VectorOffset),
      bool Face = false,
      StringOffset AssemblingOffset = default(StringOffset),
      VectorOffset PreConditionOffset = default(VectorOffset),
      int LoopTime = 0,
      VectorOffset Input1Offset = default(VectorOffset),
      VectorOffset Input2Offset = default(VectorOffset),
      VectorOffset Input3Offset = default(VectorOffset),
      VectorOffset Input4Offset = default(VectorOffset),
      VectorOffset Input5Offset = default(VectorOffset),
      VectorOffset MonsterInfo1Offset = default(VectorOffset),
      VectorOffset MonsterInfo2Offset = default(VectorOffset),
      VectorOffset MonsterInfo3Offset = default(VectorOffset),
      VectorOffset MonsterInfo4Offset = default(VectorOffset),
      VectorOffset MonsterInfo5Offset = default(VectorOffset),
      VectorOffset MonsterInfo6Offset = default(VectorOffset)) {
    builder.StartObject(20);
    SkillInputTable.AddMonsterInfo6(builder, MonsterInfo6Offset);
    SkillInputTable.AddMonsterInfo5(builder, MonsterInfo5Offset);
    SkillInputTable.AddMonsterInfo4(builder, MonsterInfo4Offset);
    SkillInputTable.AddMonsterInfo3(builder, MonsterInfo3Offset);
    SkillInputTable.AddMonsterInfo2(builder, MonsterInfo2Offset);
    SkillInputTable.AddMonsterInfo1(builder, MonsterInfo1Offset);
    SkillInputTable.AddInput5(builder, Input5Offset);
    SkillInputTable.AddInput4(builder, Input4Offset);
    SkillInputTable.AddInput3(builder, Input3Offset);
    SkillInputTable.AddInput2(builder, Input2Offset);
    SkillInputTable.AddInput1(builder, Input1Offset);
    SkillInputTable.AddLoopTime(builder, LoopTime);
    SkillInputTable.AddPreCondition(builder, PreConditionOffset);
    SkillInputTable.AddAssembling(builder, AssemblingOffset);
    SkillInputTable.AddPositionOffset(builder, PositionOffsetOffset);
    SkillInputTable.AddCameraDistance(builder, CameraDistance);
    SkillInputTable.AddLevel(builder, Level);
    SkillInputTable.AddName(builder, Name);
    SkillInputTable.AddID(builder, ID);
    SkillInputTable.AddFace(builder, Face);
    return SkillInputTable.EndSkillInputTable(builder);
  }

  public static void StartSkillInputTable(FlatBufferBuilder builder) { builder.StartObject(20); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddName(FlatBufferBuilder builder, int Name) { builder.AddInt(1, Name, 0); }
  public static void AddLevel(FlatBufferBuilder builder, int Level) { builder.AddInt(2, Level, 0); }
  public static void AddCameraDistance(FlatBufferBuilder builder, int CameraDistance) { builder.AddInt(3, CameraDistance, 0); }
  public static void AddPositionOffset(FlatBufferBuilder builder, VectorOffset PositionOffsetOffset) { builder.AddOffset(4, PositionOffsetOffset.Value, 0); }
  public static VectorOffset CreatePositionOffsetVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartPositionOffsetVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddFace(FlatBufferBuilder builder, bool Face) { builder.AddBool(5, Face, false); }
  public static void AddAssembling(FlatBufferBuilder builder, StringOffset AssemblingOffset) { builder.AddOffset(6, AssemblingOffset.Value, 0); }
  public static void AddPreCondition(FlatBufferBuilder builder, VectorOffset PreConditionOffset) { builder.AddOffset(7, PreConditionOffset.Value, 0); }
  public static VectorOffset CreatePreConditionVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartPreConditionVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddLoopTime(FlatBufferBuilder builder, int LoopTime) { builder.AddInt(8, LoopTime, 0); }
  public static void AddInput1(FlatBufferBuilder builder, VectorOffset Input1Offset) { builder.AddOffset(9, Input1Offset.Value, 0); }
  public static VectorOffset CreateInput1Vector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartInput1Vector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddInput2(FlatBufferBuilder builder, VectorOffset Input2Offset) { builder.AddOffset(10, Input2Offset.Value, 0); }
  public static VectorOffset CreateInput2Vector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartInput2Vector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddInput3(FlatBufferBuilder builder, VectorOffset Input3Offset) { builder.AddOffset(11, Input3Offset.Value, 0); }
  public static VectorOffset CreateInput3Vector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartInput3Vector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddInput4(FlatBufferBuilder builder, VectorOffset Input4Offset) { builder.AddOffset(12, Input4Offset.Value, 0); }
  public static VectorOffset CreateInput4Vector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartInput4Vector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddInput5(FlatBufferBuilder builder, VectorOffset Input5Offset) { builder.AddOffset(13, Input5Offset.Value, 0); }
  public static VectorOffset CreateInput5Vector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartInput5Vector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMonsterInfo1(FlatBufferBuilder builder, VectorOffset MonsterInfo1Offset) { builder.AddOffset(14, MonsterInfo1Offset.Value, 0); }
  public static VectorOffset CreateMonsterInfo1Vector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartMonsterInfo1Vector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMonsterInfo2(FlatBufferBuilder builder, VectorOffset MonsterInfo2Offset) { builder.AddOffset(15, MonsterInfo2Offset.Value, 0); }
  public static VectorOffset CreateMonsterInfo2Vector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartMonsterInfo2Vector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMonsterInfo3(FlatBufferBuilder builder, VectorOffset MonsterInfo3Offset) { builder.AddOffset(16, MonsterInfo3Offset.Value, 0); }
  public static VectorOffset CreateMonsterInfo3Vector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartMonsterInfo3Vector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMonsterInfo4(FlatBufferBuilder builder, VectorOffset MonsterInfo4Offset) { builder.AddOffset(17, MonsterInfo4Offset.Value, 0); }
  public static VectorOffset CreateMonsterInfo4Vector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartMonsterInfo4Vector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMonsterInfo5(FlatBufferBuilder builder, VectorOffset MonsterInfo5Offset) { builder.AddOffset(18, MonsterInfo5Offset.Value, 0); }
  public static VectorOffset CreateMonsterInfo5Vector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartMonsterInfo5Vector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMonsterInfo6(FlatBufferBuilder builder, VectorOffset MonsterInfo6Offset) { builder.AddOffset(19, MonsterInfo6Offset.Value, 0); }
  public static VectorOffset CreateMonsterInfo6Vector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartMonsterInfo6Vector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<SkillInputTable> EndSkillInputTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<SkillInputTable>(o);
  }
  public static void FinishSkillInputTableBuffer(FlatBufferBuilder builder, Offset<SkillInputTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

