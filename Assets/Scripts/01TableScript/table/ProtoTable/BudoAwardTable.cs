// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class BudoAwardTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = 41054139,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static BudoAwardTable GetRootAsBudoAwardTable(ByteBuffer _bb) { return GetRootAsBudoAwardTable(_bb, new BudoAwardTable()); }
  public static BudoAwardTable GetRootAsBudoAwardTable(ByteBuffer _bb, BudoAwardTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public BudoAwardTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Times { get { int o = __p.__offset(6); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int MaxTimes { get { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int JarTypeArray(int j) { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int JarTypeLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetJarTypeBytes() { return __p.__vector_as_arraysegment(10); }
 private FlatBufferArray<int> JarTypeValue;
 public FlatBufferArray<int>  JarType
 {
  get{
  if (JarTypeValue == null)
  {
    JarTypeValue = new FlatBufferArray<int>(this.JarTypeArray, this.JarTypeLength);
  }
  return JarTypeValue;}
 }
  public string desc { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetDescBytes() { return __p.__vector_as_arraysegment(12); }
  public string wins { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetWinsBytes() { return __p.__vector_as_arraysegment(14); }
  public string news { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetNewsBytes() { return __p.__vector_as_arraysegment(16); }
  public string idles { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetIdlesBytes() { return __p.__vector_as_arraysegment(18); }
  public string GetPreview { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetGetPreviewBytes() { return __p.__vector_as_arraysegment(20); }

  public static Offset<BudoAwardTable> CreateBudoAwardTable(FlatBufferBuilder builder,
      int ID = 0,
      int Times = 0,
      int MaxTimes = 0,
      VectorOffset JarTypeOffset = default(VectorOffset),
      StringOffset descOffset = default(StringOffset),
      StringOffset winsOffset = default(StringOffset),
      StringOffset newsOffset = default(StringOffset),
      StringOffset idlesOffset = default(StringOffset),
      StringOffset GetPreviewOffset = default(StringOffset)) {
    builder.StartObject(9);
    BudoAwardTable.AddGetPreview(builder, GetPreviewOffset);
    BudoAwardTable.AddIdles(builder, idlesOffset);
    BudoAwardTable.AddNews(builder, newsOffset);
    BudoAwardTable.AddWins(builder, winsOffset);
    BudoAwardTable.AddDesc(builder, descOffset);
    BudoAwardTable.AddJarType(builder, JarTypeOffset);
    BudoAwardTable.AddMaxTimes(builder, MaxTimes);
    BudoAwardTable.AddTimes(builder, Times);
    BudoAwardTable.AddID(builder, ID);
    return BudoAwardTable.EndBudoAwardTable(builder);
  }

  public static void StartBudoAwardTable(FlatBufferBuilder builder) { builder.StartObject(9); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddTimes(FlatBufferBuilder builder, int Times) { builder.AddInt(1, Times, 0); }
  public static void AddMaxTimes(FlatBufferBuilder builder, int MaxTimes) { builder.AddInt(2, MaxTimes, 0); }
  public static void AddJarType(FlatBufferBuilder builder, VectorOffset JarTypeOffset) { builder.AddOffset(3, JarTypeOffset.Value, 0); }
  public static VectorOffset CreateJarTypeVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartJarTypeVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddDesc(FlatBufferBuilder builder, StringOffset descOffset) { builder.AddOffset(4, descOffset.Value, 0); }
  public static void AddWins(FlatBufferBuilder builder, StringOffset winsOffset) { builder.AddOffset(5, winsOffset.Value, 0); }
  public static void AddNews(FlatBufferBuilder builder, StringOffset newsOffset) { builder.AddOffset(6, newsOffset.Value, 0); }
  public static void AddIdles(FlatBufferBuilder builder, StringOffset idlesOffset) { builder.AddOffset(7, idlesOffset.Value, 0); }
  public static void AddGetPreview(FlatBufferBuilder builder, StringOffset GetPreviewOffset) { builder.AddOffset(8, GetPreviewOffset.Value, 0); }
  public static Offset<BudoAwardTable> EndBudoAwardTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<BudoAwardTable>(o);
  }
  public static void FinishBudoAwardTableBuffer(FlatBufferBuilder builder, Offset<BudoAwardTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

