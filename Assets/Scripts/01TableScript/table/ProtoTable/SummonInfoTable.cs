// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class SummonInfoTable : IFlatbufferObject
{
public enum eSummonPosType : int
{
 FACE = 0,
 ORIGIN = 1,
 FACE_OFFSET = 2,
 POSITION = 3,
 RANDOM = 4,
};

public enum eCrypt : int
{
 code = 769209279,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static SummonInfoTable GetRootAsSummonInfoTable(ByteBuffer _bb) { return GetRootAsSummonInfoTable(_bb, new SummonInfoTable()); }
  public static SummonInfoTable GetRootAsSummonInfoTable(ByteBuffer _bb, SummonInfoTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public SummonInfoTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int SummonID { get { int o = __p.__offset(6); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string Name { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(8); }
  public ProtoTable.SummonInfoTable.eSummonPosType SummonPosType { get { int o = __p.__offset(10); return o != 0 ? (ProtoTable.SummonInfoTable.eSummonPosType)__p.bb.GetInt(o + __p.bb_pos) : ProtoTable.SummonInfoTable.eSummonPosType.FACE; } }
  public int ConsiderBlock { get { int o = __p.__offset(12); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int SummonParamArray(int j) { int o = __p.__offset(14); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int SummonParamLength { get { int o = __p.__offset(14); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetSummonParamBytes() { return __p.__vector_as_arraysegment(14); }
 private FlatBufferArray<int> SummonParamValue;
 public FlatBufferArray<int>  SummonParam
 {
  get{
  if (SummonParamValue == null)
  {
    SummonParamValue = new FlatBufferArray<int>(this.SummonParamArray, this.SummonParamLength);
  }
  return SummonParamValue;}
 }
  public int SummonDir { get { int o = __p.__offset(16); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public bool isSummonEnterVisionForbid { get { int o = __p.__offset(18); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public int SummonDisplay { get { int o = __p.__offset(20); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public UnionCell SummonNum { get { int o = __p.__offset(22); return o != 0 ? (UnionCell)(new UnionCell()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) :(UnionCell)UnionCell.Default(); } }
  public UnionCell SummonLevel { get { int o = __p.__offset(24); return o != 0 ? (UnionCell)(new UnionCell()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) :(UnionCell)UnionCell.Default(); } }
  public int SummonNumLimit { get { int o = __p.__offset(26); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public UnionCell SummonGroupNumLimit { get { int o = __p.__offset(28); return o != 0 ? (UnionCell)(new UnionCell()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) :(UnionCell)UnionCell.Default(); } }
  public int SummonGroup { get { int o = __p.__offset(30); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int SummonRelation { get { int o = __p.__offset(32); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int SummonRandListArray(int j) { int o = __p.__offset(34); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int SummonRandListLength { get { int o = __p.__offset(34); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetSummonRandListBytes() { return __p.__vector_as_arraysegment(34); }
 private FlatBufferArray<int> SummonRandListValue;
 public FlatBufferArray<int>  SummonRandList
 {
  get{
  if (SummonRandListValue == null)
  {
    SummonRandListValue = new FlatBufferArray<int>(this.SummonRandListArray, this.SummonRandListLength);
  }
  return SummonRandListValue;}
 }
  public int KillLastSummon { get { int o = __p.__offset(36); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ForceFollow { get { int o = __p.__offset(38); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string BirthActionName { get { int o = __p.__offset(40); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetBirthActionNameBytes() { return __p.__vector_as_arraysegment(40); }
  public int LifeTime { get { int o = __p.__offset(42); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public bool UseCampInTable { get { int o = __p.__offset(44); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool IsNotShowHpBar { get { int o = __p.__offset(46); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool IsNameNotShowLv { get { int o = __p.__offset(48); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<SummonInfoTable> CreateSummonInfoTable(FlatBufferBuilder builder,
      int ID = 0,
      int SummonID = 0,
      StringOffset NameOffset = default(StringOffset),
      ProtoTable.SummonInfoTable.eSummonPosType SummonPosType = ProtoTable.SummonInfoTable.eSummonPosType.FACE,
      int ConsiderBlock = 0,
      VectorOffset SummonParamOffset = default(VectorOffset),
      int SummonDir = 0,
      bool isSummonEnterVisionForbid = false,
      int SummonDisplay = 0,
      Offset<UnionCell> SummonNumOffset = default(Offset<UnionCell>),
      Offset<UnionCell> SummonLevelOffset = default(Offset<UnionCell>),
      int SummonNumLimit = 0,
      Offset<UnionCell> SummonGroupNumLimitOffset = default(Offset<UnionCell>),
      int SummonGroup = 0,
      int SummonRelation = 0,
      VectorOffset SummonRandListOffset = default(VectorOffset),
      int KillLastSummon = 0,
      int ForceFollow = 0,
      StringOffset BirthActionNameOffset = default(StringOffset),
      int LifeTime = 0,
      bool UseCampInTable = false,
      bool IsNotShowHpBar = false,
      bool IsNameNotShowLv = false) {
    builder.StartObject(23);
    SummonInfoTable.AddLifeTime(builder, LifeTime);
    SummonInfoTable.AddBirthActionName(builder, BirthActionNameOffset);
    SummonInfoTable.AddForceFollow(builder, ForceFollow);
    SummonInfoTable.AddKillLastSummon(builder, KillLastSummon);
    SummonInfoTable.AddSummonRandList(builder, SummonRandListOffset);
    SummonInfoTable.AddSummonRelation(builder, SummonRelation);
    SummonInfoTable.AddSummonGroup(builder, SummonGroup);
    SummonInfoTable.AddSummonGroupNumLimit(builder, SummonGroupNumLimitOffset);
    SummonInfoTable.AddSummonNumLimit(builder, SummonNumLimit);
    SummonInfoTable.AddSummonLevel(builder, SummonLevelOffset);
    SummonInfoTable.AddSummonNum(builder, SummonNumOffset);
    SummonInfoTable.AddSummonDisplay(builder, SummonDisplay);
    SummonInfoTable.AddSummonDir(builder, SummonDir);
    SummonInfoTable.AddSummonParam(builder, SummonParamOffset);
    SummonInfoTable.AddConsiderBlock(builder, ConsiderBlock);
    SummonInfoTable.AddSummonPosType(builder, SummonPosType);
    SummonInfoTable.AddName(builder, NameOffset);
    SummonInfoTable.AddSummonID(builder, SummonID);
    SummonInfoTable.AddID(builder, ID);
    SummonInfoTable.AddIsNameNotShowLv(builder, IsNameNotShowLv);
    SummonInfoTable.AddIsNotShowHpBar(builder, IsNotShowHpBar);
    SummonInfoTable.AddUseCampInTable(builder, UseCampInTable);
    SummonInfoTable.AddIsSummonEnterVisionForbid(builder, isSummonEnterVisionForbid);
    return SummonInfoTable.EndSummonInfoTable(builder);
  }

  public static void StartSummonInfoTable(FlatBufferBuilder builder) { builder.StartObject(23); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddSummonID(FlatBufferBuilder builder, int SummonID) { builder.AddInt(1, SummonID, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset NameOffset) { builder.AddOffset(2, NameOffset.Value, 0); }
  public static void AddSummonPosType(FlatBufferBuilder builder, ProtoTable.SummonInfoTable.eSummonPosType SummonPosType) { builder.AddInt(3, (int)SummonPosType, 0); }
  public static void AddConsiderBlock(FlatBufferBuilder builder, int ConsiderBlock) { builder.AddInt(4, ConsiderBlock, 0); }
  public static void AddSummonParam(FlatBufferBuilder builder, VectorOffset SummonParamOffset) { builder.AddOffset(5, SummonParamOffset.Value, 0); }
  public static VectorOffset CreateSummonParamVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartSummonParamVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddSummonDir(FlatBufferBuilder builder, int SummonDir) { builder.AddInt(6, SummonDir, 0); }
  public static void AddIsSummonEnterVisionForbid(FlatBufferBuilder builder, bool isSummonEnterVisionForbid) { builder.AddBool(7, isSummonEnterVisionForbid, false); }
  public static void AddSummonDisplay(FlatBufferBuilder builder, int SummonDisplay) { builder.AddInt(8, SummonDisplay, 0); }
  public static void AddSummonNum(FlatBufferBuilder builder, Offset<UnionCell> SummonNumOffset) { builder.AddOffset(9, SummonNumOffset.Value, 0); }
  public static void AddSummonLevel(FlatBufferBuilder builder, Offset<UnionCell> SummonLevelOffset) { builder.AddOffset(10, SummonLevelOffset.Value, 0); }
  public static void AddSummonNumLimit(FlatBufferBuilder builder, int SummonNumLimit) { builder.AddInt(11, SummonNumLimit, 0); }
  public static void AddSummonGroupNumLimit(FlatBufferBuilder builder, Offset<UnionCell> SummonGroupNumLimitOffset) { builder.AddOffset(12, SummonGroupNumLimitOffset.Value, 0); }
  public static void AddSummonGroup(FlatBufferBuilder builder, int SummonGroup) { builder.AddInt(13, SummonGroup, 0); }
  public static void AddSummonRelation(FlatBufferBuilder builder, int SummonRelation) { builder.AddInt(14, SummonRelation, 0); }
  public static void AddSummonRandList(FlatBufferBuilder builder, VectorOffset SummonRandListOffset) { builder.AddOffset(15, SummonRandListOffset.Value, 0); }
  public static VectorOffset CreateSummonRandListVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartSummonRandListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddKillLastSummon(FlatBufferBuilder builder, int KillLastSummon) { builder.AddInt(16, KillLastSummon, 0); }
  public static void AddForceFollow(FlatBufferBuilder builder, int ForceFollow) { builder.AddInt(17, ForceFollow, 0); }
  public static void AddBirthActionName(FlatBufferBuilder builder, StringOffset BirthActionNameOffset) { builder.AddOffset(18, BirthActionNameOffset.Value, 0); }
  public static void AddLifeTime(FlatBufferBuilder builder, int LifeTime) { builder.AddInt(19, LifeTime, 0); }
  public static void AddUseCampInTable(FlatBufferBuilder builder, bool UseCampInTable) { builder.AddBool(20, UseCampInTable, false); }
  public static void AddIsNotShowHpBar(FlatBufferBuilder builder, bool IsNotShowHpBar) { builder.AddBool(21, IsNotShowHpBar, false); }
  public static void AddIsNameNotShowLv(FlatBufferBuilder builder, bool IsNameNotShowLv) { builder.AddBool(22, IsNameNotShowLv, false); }
  public static Offset<SummonInfoTable> EndSummonInfoTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<SummonInfoTable>(o);
  }
  public static void FinishSummonInfoTableBuffer(FlatBufferBuilder builder, Offset<SummonInfoTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

