// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class EquipInitialAttribute : IFlatbufferObject
{
public enum eCrypt : int
{
 code = -1229955750,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static EquipInitialAttribute GetRootAsEquipInitialAttribute(ByteBuffer _bb) { return GetRootAsEquipInitialAttribute(_bb, new EquipInitialAttribute()); }
  public static EquipInitialAttribute GetRootAsEquipInitialAttribute(ByteBuffer _bb, EquipInitialAttribute obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public EquipInitialAttribute __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ItemID { get { int o = __p.__offset(6); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Strengthen { get { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int EquipQL { get { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Lease { get { int o = __p.__offset(12); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string FitOccuArray(int j) { int o = __p.__offset(14); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : FlatBufferConstants.DefaultString; }
  public int FitOccuLength { get { int o = __p.__offset(14); return o != 0 ? __p.__vector_len(o) : 0; } }
 private FlatBufferArray<string> FitOccuValue;
 public FlatBufferArray<string>  FitOccu
 {
  get{
  if (FitOccuValue == null)
  {
    FitOccuValue = new FlatBufferArray<string>(this.FitOccuArray, this.FitOccuLength);
  }
  return FitOccuValue;}
 }
  public int Source { get { int o = __p.__offset(16); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }

  public static Offset<EquipInitialAttribute> CreateEquipInitialAttribute(FlatBufferBuilder builder,
      int ID = 0,
      int ItemID = 0,
      int Strengthen = 0,
      int EquipQL = 0,
      int Lease = 0,
      VectorOffset FitOccuOffset = default(VectorOffset),
      int Source = 0) {
    builder.StartObject(7);
    EquipInitialAttribute.AddSource(builder, Source);
    EquipInitialAttribute.AddFitOccu(builder, FitOccuOffset);
    EquipInitialAttribute.AddLease(builder, Lease);
    EquipInitialAttribute.AddEquipQL(builder, EquipQL);
    EquipInitialAttribute.AddStrengthen(builder, Strengthen);
    EquipInitialAttribute.AddItemID(builder, ItemID);
    EquipInitialAttribute.AddID(builder, ID);
    return EquipInitialAttribute.EndEquipInitialAttribute(builder);
  }

  public static void StartEquipInitialAttribute(FlatBufferBuilder builder) { builder.StartObject(7); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddItemID(FlatBufferBuilder builder, int ItemID) { builder.AddInt(1, ItemID, 0); }
  public static void AddStrengthen(FlatBufferBuilder builder, int Strengthen) { builder.AddInt(2, Strengthen, 0); }
  public static void AddEquipQL(FlatBufferBuilder builder, int EquipQL) { builder.AddInt(3, EquipQL, 0); }
  public static void AddLease(FlatBufferBuilder builder, int Lease) { builder.AddInt(4, Lease, 0); }
  public static void AddFitOccu(FlatBufferBuilder builder, VectorOffset FitOccuOffset) { builder.AddOffset(5, FitOccuOffset.Value, 0); }
  public static VectorOffset CreateFitOccuVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartFitOccuVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddSource(FlatBufferBuilder builder, int Source) { builder.AddInt(6, Source, 0); }
  public static Offset<EquipInitialAttribute> EndEquipInitialAttribute(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<EquipInitialAttribute>(o);
  }
  public static void FinishEquipInitialAttributeBuffer(FlatBufferBuilder builder, Offset<EquipInitialAttribute> offset) { builder.Finish(offset.Value); }
};


}


#endif

