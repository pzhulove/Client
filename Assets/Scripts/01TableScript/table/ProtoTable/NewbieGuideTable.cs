// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class NewbieGuideTable : IFlatbufferObject
{
public enum eNewbieGuideTask : int
{
 None = 0,
 FirstFight = 1,
 AutoTraceGuide = 2,
 GuanKaGuide = 3,
 DoubleClickRunGuide = 4,
 DungeonRewardGuide = 5,
 ReturnToTownGuide = 6,
 EquipmentGuide = 7,
 AutoTraceGuide2 = 8,
 JumpBackGuide = 9,
 QuickEquipGuide = 10,
 RewardBoxGuide = 11,
 EvaluateGuide = 12,
 DrugGuide = 13,
 SuperArmorGuide = 14,
 CounterGuide = 15,
 MagicPotGuide = 16,
 SkillGuide = 17,
 DrugSetGuide = 18,
 SkillLevelUpGuide = 19,
 RankListGuide = 20,
 WelfareGuide = 21,
 ForgeGuide = 22,
 DuelGuide = 23,
 MakeEquipGuide = 24,
 EntourageGuide = 25,
 EntourageSkillGuide = 26,
 EntourageSkillLvUpGuide = 27,
 AutoFightGuide = 28,
 MarketGuide = 29,
 DailyTaskGuide = 30,
 TitleGuide = 31,
 BattlePreJobSkillGuide = 32,
 ArmorMasterGuide = 33,
 BufferSkillGuide = 34,
 DeathTowerGuide = 35,
 BeatCowGuide = 36,
 GuildGuide = 37,
 EnchantGuide = 38,
 DegeneratorGuide = 39,
 ChangeJobChoiceGuide = 40,
 TeamBossGuide = 41,
 EntourageWashGuide = 42,
 FriendGuide = 43,
 TeamGuide = 44,
 MissionGuide = 45,
 ChangeJobSkillGuide = 46,
 FirstChargeGuide = 47,
 ArmorPunishGuide = 48,
 BreakDownHaveWhiteGuide = 49,
 BreakDownHavenotWhiteGuide = 50,
 NextBoxGuide = 51,
 SkillComboGuide1 = 52,
 SkillComboGuide2 = 53,
 TwoWeaponsGuide = 54,
 AbyssGuide1 = 55,
 AbyssGuide2 = 56,
 AbyssGuide3 = 57,
 HandbookGuide = 58,
 ExchangeShopGuide = 59,
 AncientGuide = 60,
 YiJieOpenGuide = 61,
};

public enum eNewbieGuideType : int
{
 NGT_None = 0,
 NGT_FORCE = 1,
 NGT_WEAK = 2,
 NGT_ALL = 3,
};

public enum eGuideSubType : int
{
 GST_NONE = 0,
 GST_ALONE = 1,
 GST_FINISH_TALK_DIALOG = 2,
 GST_ACCEPT_MISSION = 3,
 GST_FINISH_MISSION = 4,
 GST_RECEIVE_MISSION_AWARD = 5,
};

public enum eCrypt : int
{
 code = 1395428350,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static NewbieGuideTable GetRootAsNewbieGuideTable(ByteBuffer _bb) { return GetRootAsNewbieGuideTable(_bb, new NewbieGuideTable()); }
  public static NewbieGuideTable GetRootAsNewbieGuideTable(ByteBuffer _bb, NewbieGuideTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public NewbieGuideTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
  public ProtoTable.NewbieGuideTable.eNewbieGuideTask NewbieGuideTask { get { int o = __p.__offset(8); return o != 0 ? (ProtoTable.NewbieGuideTable.eNewbieGuideTask)__p.bb.GetInt(o + __p.bb_pos) : ProtoTable.NewbieGuideTable.eNewbieGuideTask.None; } }
  public int Order { get { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int IsOpen { get { int o = __p.__offset(12); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public ProtoTable.NewbieGuideTable.eNewbieGuideType NewbieGuideType { get { int o = __p.__offset(14); return o != 0 ? (ProtoTable.NewbieGuideTable.eNewbieGuideType)__p.bb.GetInt(o + __p.bb_pos) : ProtoTable.NewbieGuideTable.eNewbieGuideType.NGT_None; } }
  public ProtoTable.NewbieGuideTable.eGuideSubType GuideSubType { get { int o = __p.__offset(16); return o != 0 ? (ProtoTable.NewbieGuideTable.eGuideSubType)__p.bb.GetInt(o + __p.bb_pos) : ProtoTable.NewbieGuideTable.eGuideSubType.GST_NONE; } }
  public bool CloseFrames { get { int o = __p.__offset(18); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public string ScriptDataPath { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetScriptDataPathBytes() { return __p.__vector_as_arraysegment(20); }
  public int AudioIDListArray(int j) { int o = __p.__offset(22); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int AudioIDListLength { get { int o = __p.__offset(22); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetAudioIDListBytes() { return __p.__vector_as_arraysegment(22); }
 private FlatBufferArray<int> AudioIDListValue;
 public FlatBufferArray<int>  AudioIDList
 {
  get{
  if (AudioIDListValue == null)
  {
    AudioIDListValue = new FlatBufferArray<int>(this.AudioIDListArray, this.AudioIDListLength);
  }
  return AudioIDListValue;}
 }

  public static Offset<NewbieGuideTable> CreateNewbieGuideTable(FlatBufferBuilder builder,
      int ID = 0,
      StringOffset NameOffset = default(StringOffset),
      ProtoTable.NewbieGuideTable.eNewbieGuideTask NewbieGuideTask = ProtoTable.NewbieGuideTable.eNewbieGuideTask.None,
      int Order = 0,
      int IsOpen = 0,
      ProtoTable.NewbieGuideTable.eNewbieGuideType NewbieGuideType = ProtoTable.NewbieGuideTable.eNewbieGuideType.NGT_None,
      ProtoTable.NewbieGuideTable.eGuideSubType GuideSubType = ProtoTable.NewbieGuideTable.eGuideSubType.GST_NONE,
      bool CloseFrames = false,
      StringOffset ScriptDataPathOffset = default(StringOffset),
      VectorOffset AudioIDListOffset = default(VectorOffset)) {
    builder.StartObject(10);
    NewbieGuideTable.AddAudioIDList(builder, AudioIDListOffset);
    NewbieGuideTable.AddScriptDataPath(builder, ScriptDataPathOffset);
    NewbieGuideTable.AddGuideSubType(builder, GuideSubType);
    NewbieGuideTable.AddNewbieGuideType(builder, NewbieGuideType);
    NewbieGuideTable.AddIsOpen(builder, IsOpen);
    NewbieGuideTable.AddOrder(builder, Order);
    NewbieGuideTable.AddNewbieGuideTask(builder, NewbieGuideTask);
    NewbieGuideTable.AddName(builder, NameOffset);
    NewbieGuideTable.AddID(builder, ID);
    NewbieGuideTable.AddCloseFrames(builder, CloseFrames);
    return NewbieGuideTable.EndNewbieGuideTable(builder);
  }

  public static void StartNewbieGuideTable(FlatBufferBuilder builder) { builder.StartObject(10); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset NameOffset) { builder.AddOffset(1, NameOffset.Value, 0); }
  public static void AddNewbieGuideTask(FlatBufferBuilder builder, ProtoTable.NewbieGuideTable.eNewbieGuideTask NewbieGuideTask) { builder.AddInt(2, (int)NewbieGuideTask, 0); }
  public static void AddOrder(FlatBufferBuilder builder, int Order) { builder.AddInt(3, Order, 0); }
  public static void AddIsOpen(FlatBufferBuilder builder, int IsOpen) { builder.AddInt(4, IsOpen, 0); }
  public static void AddNewbieGuideType(FlatBufferBuilder builder, ProtoTable.NewbieGuideTable.eNewbieGuideType NewbieGuideType) { builder.AddInt(5, (int)NewbieGuideType, 0); }
  public static void AddGuideSubType(FlatBufferBuilder builder, ProtoTable.NewbieGuideTable.eGuideSubType GuideSubType) { builder.AddInt(6, (int)GuideSubType, 0); }
  public static void AddCloseFrames(FlatBufferBuilder builder, bool CloseFrames) { builder.AddBool(7, CloseFrames, false); }
  public static void AddScriptDataPath(FlatBufferBuilder builder, StringOffset ScriptDataPathOffset) { builder.AddOffset(8, ScriptDataPathOffset.Value, 0); }
  public static void AddAudioIDList(FlatBufferBuilder builder, VectorOffset AudioIDListOffset) { builder.AddOffset(9, AudioIDListOffset.Value, 0); }
  public static VectorOffset CreateAudioIDListVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartAudioIDListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<NewbieGuideTable> EndNewbieGuideTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<NewbieGuideTable>(o);
  }
  public static void FinishNewbieGuideTableBuffer(FlatBufferBuilder builder, Offset<NewbieGuideTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

