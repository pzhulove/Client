// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class NotificationTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = -870402045,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static NotificationTable GetRootAsNotificationTable(ByteBuffer _bb) { return GetRootAsNotificationTable(_bb, new NotificationTable()); }
  public static NotificationTable GetRootAsNotificationTable(ByteBuffer _bb, NotificationTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public NotificationTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string Content { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetContentBytes() { return __p.__vector_as_arraysegment(6); }
  public string year { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetYearBytes() { return __p.__vector_as_arraysegment(8); }
  public string month { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetMonthBytes() { return __p.__vector_as_arraysegment(10); }
  public string weekday { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetWeekdayBytes() { return __p.__vector_as_arraysegment(12); }
  public string day { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetDayBytes() { return __p.__vector_as_arraysegment(14); }
  public int hour { get { int o = __p.__offset(16); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int minute { get { int o = __p.__offset(18); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int NeedClose { get { int o = __p.__offset(20); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }

  public static Offset<NotificationTable> CreateNotificationTable(FlatBufferBuilder builder,
      int ID = 0,
      StringOffset ContentOffset = default(StringOffset),
      StringOffset yearOffset = default(StringOffset),
      StringOffset monthOffset = default(StringOffset),
      StringOffset weekdayOffset = default(StringOffset),
      StringOffset dayOffset = default(StringOffset),
      int hour = 0,
      int minute = 0,
      int NeedClose = 0) {
    builder.StartObject(9);
    NotificationTable.AddNeedClose(builder, NeedClose);
    NotificationTable.AddMinute(builder, minute);
    NotificationTable.AddHour(builder, hour);
    NotificationTable.AddDay(builder, dayOffset);
    NotificationTable.AddWeekday(builder, weekdayOffset);
    NotificationTable.AddMonth(builder, monthOffset);
    NotificationTable.AddYear(builder, yearOffset);
    NotificationTable.AddContent(builder, ContentOffset);
    NotificationTable.AddID(builder, ID);
    return NotificationTable.EndNotificationTable(builder);
  }

  public static void StartNotificationTable(FlatBufferBuilder builder) { builder.StartObject(9); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddContent(FlatBufferBuilder builder, StringOffset ContentOffset) { builder.AddOffset(1, ContentOffset.Value, 0); }
  public static void AddYear(FlatBufferBuilder builder, StringOffset yearOffset) { builder.AddOffset(2, yearOffset.Value, 0); }
  public static void AddMonth(FlatBufferBuilder builder, StringOffset monthOffset) { builder.AddOffset(3, monthOffset.Value, 0); }
  public static void AddWeekday(FlatBufferBuilder builder, StringOffset weekdayOffset) { builder.AddOffset(4, weekdayOffset.Value, 0); }
  public static void AddDay(FlatBufferBuilder builder, StringOffset dayOffset) { builder.AddOffset(5, dayOffset.Value, 0); }
  public static void AddHour(FlatBufferBuilder builder, int hour) { builder.AddInt(6, hour, 0); }
  public static void AddMinute(FlatBufferBuilder builder, int minute) { builder.AddInt(7, minute, 0); }
  public static void AddNeedClose(FlatBufferBuilder builder, int NeedClose) { builder.AddInt(8, NeedClose, 0); }
  public static Offset<NotificationTable> EndNotificationTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<NotificationTable>(o);
  }
  public static void FinishNotificationTableBuffer(FlatBufferBuilder builder, Offset<NotificationTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

