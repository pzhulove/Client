// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class ComboScoreTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = -1753797086,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ComboScoreTable GetRootAsComboScoreTable(ByteBuffer _bb) { return GetRootAsComboScoreTable(_bb, new ComboScoreTable()); }
  public static ComboScoreTable GetRootAsComboScoreTable(ByteBuffer _bb, ComboScoreTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ComboScoreTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int JobID { get { int o = __p.__offset(6); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string JobDes { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetJobDesBytes() { return __p.__vector_as_arraysegment(8); }
  public int Percent { get { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int BaseScore { get { int o = __p.__offset(12); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int MinCombo { get { int o = __p.__offset(14); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }

  public static Offset<ComboScoreTable> CreateComboScoreTable(FlatBufferBuilder builder,
      int ID = 0,
      int JobID = 0,
      StringOffset JobDesOffset = default(StringOffset),
      int Percent = 0,
      int BaseScore = 0,
      int MinCombo = 0) {
    builder.StartObject(6);
    ComboScoreTable.AddMinCombo(builder, MinCombo);
    ComboScoreTable.AddBaseScore(builder, BaseScore);
    ComboScoreTable.AddPercent(builder, Percent);
    ComboScoreTable.AddJobDes(builder, JobDesOffset);
    ComboScoreTable.AddJobID(builder, JobID);
    ComboScoreTable.AddID(builder, ID);
    return ComboScoreTable.EndComboScoreTable(builder);
  }

  public static void StartComboScoreTable(FlatBufferBuilder builder) { builder.StartObject(6); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddJobID(FlatBufferBuilder builder, int JobID) { builder.AddInt(1, JobID, 0); }
  public static void AddJobDes(FlatBufferBuilder builder, StringOffset JobDesOffset) { builder.AddOffset(2, JobDesOffset.Value, 0); }
  public static void AddPercent(FlatBufferBuilder builder, int Percent) { builder.AddInt(3, Percent, 0); }
  public static void AddBaseScore(FlatBufferBuilder builder, int BaseScore) { builder.AddInt(4, BaseScore, 0); }
  public static void AddMinCombo(FlatBufferBuilder builder, int MinCombo) { builder.AddInt(5, MinCombo, 0); }
  public static Offset<ComboScoreTable> EndComboScoreTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ComboScoreTable>(o);
  }
  public static void FinishComboScoreTableBuffer(FlatBufferBuilder builder, Offset<ComboScoreTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

