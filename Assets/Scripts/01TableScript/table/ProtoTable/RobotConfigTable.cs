// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class RobotConfigTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = -1538225668,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static RobotConfigTable GetRootAsRobotConfigTable(ByteBuffer _bb) { return GetRootAsRobotConfigTable(_bb, new RobotConfigTable()); }
  public static RobotConfigTable GetRootAsRobotConfigTable(ByteBuffer _bb, RobotConfigTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public RobotConfigTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Level { get { int o = __p.__offset(6); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Occu { get { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int SkillsArray(int j) { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int SkillsLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetSkillsBytes() { return __p.__vector_as_arraysegment(10); }
 private FlatBufferArray<int> SkillsValue;
 public FlatBufferArray<int>  Skills
 {
  get{
  if (SkillsValue == null)
  {
    SkillsValue = new FlatBufferArray<int>(this.SkillsArray, this.SkillsLength);
  }
  return SkillsValue;}
 }
  public int FashionsArray(int j) { int o = __p.__offset(12); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int FashionsLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetFashionsBytes() { return __p.__vector_as_arraysegment(12); }
 private FlatBufferArray<int> FashionsValue;
 public FlatBufferArray<int>  Fashions
 {
  get{
  if (FashionsValue == null)
  {
    FashionsValue = new FlatBufferArray<int>(this.FashionsArray, this.FashionsLength);
  }
  return FashionsValue;}
 }

  public static Offset<RobotConfigTable> CreateRobotConfigTable(FlatBufferBuilder builder,
      int ID = 0,
      int Level = 0,
      int Occu = 0,
      VectorOffset SkillsOffset = default(VectorOffset),
      VectorOffset FashionsOffset = default(VectorOffset)) {
    builder.StartObject(5);
    RobotConfigTable.AddFashions(builder, FashionsOffset);
    RobotConfigTable.AddSkills(builder, SkillsOffset);
    RobotConfigTable.AddOccu(builder, Occu);
    RobotConfigTable.AddLevel(builder, Level);
    RobotConfigTable.AddID(builder, ID);
    return RobotConfigTable.EndRobotConfigTable(builder);
  }

  public static void StartRobotConfigTable(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddLevel(FlatBufferBuilder builder, int Level) { builder.AddInt(1, Level, 0); }
  public static void AddOccu(FlatBufferBuilder builder, int Occu) { builder.AddInt(2, Occu, 0); }
  public static void AddSkills(FlatBufferBuilder builder, VectorOffset SkillsOffset) { builder.AddOffset(3, SkillsOffset.Value, 0); }
  public static VectorOffset CreateSkillsVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartSkillsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddFashions(FlatBufferBuilder builder, VectorOffset FashionsOffset) { builder.AddOffset(4, FashionsOffset.Value, 0); }
  public static VectorOffset CreateFashionsVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartFashionsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<RobotConfigTable> EndRobotConfigTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<RobotConfigTable>(o);
  }
  public static void FinishRobotConfigTableBuffer(FlatBufferBuilder builder, Offset<RobotConfigTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

