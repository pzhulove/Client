// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class EquipEnhanceAttributeTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = -845456548,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static EquipEnhanceAttributeTable GetRootAsEquipEnhanceAttributeTable(ByteBuffer _bb) { return GetRootAsEquipEnhanceAttributeTable(_bb, new EquipEnhanceAttributeTable()); }
  public static EquipEnhanceAttributeTable GetRootAsEquipEnhanceAttributeTable(ByteBuffer _bb, EquipEnhanceAttributeTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public EquipEnhanceAttributeTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Quality { get { int o = __p.__offset(6); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int EnhanceLevel { get { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Level { get { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int EnhanceAttribute { get { int o = __p.__offset(12); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int EnhanceAttributePVP { get { int o = __p.__offset(14); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int eqScore { get { int o = __p.__offset(16); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }

  public static Offset<EquipEnhanceAttributeTable> CreateEquipEnhanceAttributeTable(FlatBufferBuilder builder,
      int ID = 0,
      int Quality = 0,
      int EnhanceLevel = 0,
      int Level = 0,
      int EnhanceAttribute = 0,
      int EnhanceAttributePVP = 0,
      int eqScore = 0) {
    builder.StartObject(7);
    EquipEnhanceAttributeTable.AddEqScore(builder, eqScore);
    EquipEnhanceAttributeTable.AddEnhanceAttributePVP(builder, EnhanceAttributePVP);
    EquipEnhanceAttributeTable.AddEnhanceAttribute(builder, EnhanceAttribute);
    EquipEnhanceAttributeTable.AddLevel(builder, Level);
    EquipEnhanceAttributeTable.AddEnhanceLevel(builder, EnhanceLevel);
    EquipEnhanceAttributeTable.AddQuality(builder, Quality);
    EquipEnhanceAttributeTable.AddID(builder, ID);
    return EquipEnhanceAttributeTable.EndEquipEnhanceAttributeTable(builder);
  }

  public static void StartEquipEnhanceAttributeTable(FlatBufferBuilder builder) { builder.StartObject(7); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddQuality(FlatBufferBuilder builder, int Quality) { builder.AddInt(1, Quality, 0); }
  public static void AddEnhanceLevel(FlatBufferBuilder builder, int EnhanceLevel) { builder.AddInt(2, EnhanceLevel, 0); }
  public static void AddLevel(FlatBufferBuilder builder, int Level) { builder.AddInt(3, Level, 0); }
  public static void AddEnhanceAttribute(FlatBufferBuilder builder, int EnhanceAttribute) { builder.AddInt(4, EnhanceAttribute, 0); }
  public static void AddEnhanceAttributePVP(FlatBufferBuilder builder, int EnhanceAttributePVP) { builder.AddInt(5, EnhanceAttributePVP, 0); }
  public static void AddEqScore(FlatBufferBuilder builder, int eqScore) { builder.AddInt(6, eqScore, 0); }
  public static Offset<EquipEnhanceAttributeTable> EndEquipEnhanceAttributeTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<EquipEnhanceAttributeTable>(o);
  }
  public static void FinishEquipEnhanceAttributeTableBuffer(FlatBufferBuilder builder, Offset<EquipEnhanceAttributeTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

