// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class DeathTowerAwardTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = -510387816,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static DeathTowerAwardTable GetRootAsDeathTowerAwardTable(ByteBuffer _bb) { return GetRootAsDeathTowerAwardTable(_bb, new DeathTowerAwardTable()); }
  public static DeathTowerAwardTable GetRootAsDeathTowerAwardTable(ByteBuffer _bb, DeathTowerAwardTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public DeathTowerAwardTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Floor { get { int o = __p.__offset(6); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int exp { get { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int WirrorSoul { get { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Drop { get { int o = __p.__offset(12); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int AwardItem { get { int o = __p.__offset(14); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int AwardItemNum { get { int o = __p.__offset(16); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int LimitLevel { get { int o = __p.__offset(18); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }

  public static Offset<DeathTowerAwardTable> CreateDeathTowerAwardTable(FlatBufferBuilder builder,
      int ID = 0,
      int Floor = 0,
      int exp = 0,
      int WirrorSoul = 0,
      int Drop = 0,
      int AwardItem = 0,
      int AwardItemNum = 0,
      int LimitLevel = 0) {
    builder.StartObject(8);
    DeathTowerAwardTable.AddLimitLevel(builder, LimitLevel);
    DeathTowerAwardTable.AddAwardItemNum(builder, AwardItemNum);
    DeathTowerAwardTable.AddAwardItem(builder, AwardItem);
    DeathTowerAwardTable.AddDrop(builder, Drop);
    DeathTowerAwardTable.AddWirrorSoul(builder, WirrorSoul);
    DeathTowerAwardTable.AddExp(builder, exp);
    DeathTowerAwardTable.AddFloor(builder, Floor);
    DeathTowerAwardTable.AddID(builder, ID);
    return DeathTowerAwardTable.EndDeathTowerAwardTable(builder);
  }

  public static void StartDeathTowerAwardTable(FlatBufferBuilder builder) { builder.StartObject(8); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddFloor(FlatBufferBuilder builder, int Floor) { builder.AddInt(1, Floor, 0); }
  public static void AddExp(FlatBufferBuilder builder, int exp) { builder.AddInt(2, exp, 0); }
  public static void AddWirrorSoul(FlatBufferBuilder builder, int WirrorSoul) { builder.AddInt(3, WirrorSoul, 0); }
  public static void AddDrop(FlatBufferBuilder builder, int Drop) { builder.AddInt(4, Drop, 0); }
  public static void AddAwardItem(FlatBufferBuilder builder, int AwardItem) { builder.AddInt(5, AwardItem, 0); }
  public static void AddAwardItemNum(FlatBufferBuilder builder, int AwardItemNum) { builder.AddInt(6, AwardItemNum, 0); }
  public static void AddLimitLevel(FlatBufferBuilder builder, int LimitLevel) { builder.AddInt(7, LimitLevel, 0); }
  public static Offset<DeathTowerAwardTable> EndDeathTowerAwardTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<DeathTowerAwardTable>(o);
  }
  public static void FinishDeathTowerAwardTableBuffer(FlatBufferBuilder builder, Offset<DeathTowerAwardTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

