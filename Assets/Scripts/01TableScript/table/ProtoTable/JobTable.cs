// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class JobTable : IFlatbufferObject
{
public enum esex : int
{
 Male = 0,
 Female = 1,
};

public enum eCrypt : int
{
 code = 487660145,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static JobTable GetRootAsJobTable(ByteBuffer _bb) { return GetRootAsJobTable(_bb, new JobTable()); }
  public static JobTable GetRootAsJobTable(ByteBuffer _bb, JobTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public JobTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
  public string AwakenJobNameArray(int j) { int o = __p.__offset(8); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : FlatBufferConstants.DefaultString; }
  public int AwakenJobNameLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
 private FlatBufferArray<string> AwakenJobNameValue;
 public FlatBufferArray<string>  AwakenJobName
 {
  get{
  if (AwakenJobNameValue == null)
  {
    AwakenJobNameValue = new FlatBufferArray<string>(this.AwakenJobNameArray, this.AwakenJobNameLength);
  }
  return AwakenJobNameValue;}
 }
  public int JobAttribute { get { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int JobType { get { int o = __p.__offset(12); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int prejob { get { int o = __p.__offset(14); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public ProtoTable.JobTable.esex sex { get { int o = __p.__offset(16); return o != 0 ? (ProtoTable.JobTable.esex)__p.bb.GetInt(o + __p.bb_pos) : ProtoTable.JobTable.esex.Male; } }
  public int OppositeSexJob { get { int o = __p.__offset(18); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Open { get { int o = __p.__offset(20); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int CanCreateRole { get { int o = __p.__offset(22); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int AuctionJob { get { int o = __p.__offset(24); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Diffcult { get { int o = __p.__offset(26); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ComboFactor { get { int o = __p.__offset(28); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Mode { get { int o = __p.__offset(30); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string RecProperty { get { int o = __p.__offset(32); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetRecPropertyBytes() { return __p.__vector_as_arraysegment(32); }
  public string RecDefence { get { int o = __p.__offset(34); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetRecDefenceBytes() { return __p.__vector_as_arraysegment(34); }
  public string RecWeapon { get { int o = __p.__offset(36); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetRecWeaponBytes() { return __p.__vector_as_arraysegment(36); }
  public int Weight { get { int o = __p.__offset(38); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string IdleAniName { get { int o = __p.__offset(40); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetIdleAniNameBytes() { return __p.__vector_as_arraysegment(40); }
  public string WalkAniName { get { int o = __p.__offset(42); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetWalkAniNameBytes() { return __p.__vector_as_arraysegment(42); }
  public string RunAniName { get { int o = __p.__offset(44); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetRunAniNameBytes() { return __p.__vector_as_arraysegment(44); }
  public string DeadAniName { get { int o = __p.__offset(46); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetDeadAniNameBytes() { return __p.__vector_as_arraysegment(46); }
  public int DefaultBoxRadius { get { int o = __p.__offset(48); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string DefaultHitEffect { get { int o = __p.__offset(50); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetDefaultHitEffectBytes() { return __p.__vector_as_arraysegment(50); }
  public int DefaultHitSFXID { get { int o = __p.__offset(52); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int DefaultWeaponTag { get { int o = __p.__offset(54); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int DefaultWeaponType { get { int o = __p.__offset(56); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string DefaultWeaponPath { get { int o = __p.__offset(58); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetDefaultWeaponPathBytes() { return __p.__vector_as_arraysegment(58); }
  public string DefaultWeaponLocator { get { int o = __p.__offset(60); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetDefaultWeaponLocatorBytes() { return __p.__vector_as_arraysegment(60); }
  public string InputConfigPath { get { int o = __p.__offset(62); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetInputConfigPathBytes() { return __p.__vector_as_arraysegment(62); }
  public int InitSkillsArray(int j) { int o = __p.__offset(64); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int InitSkillsLength { get { int o = __p.__offset(64); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetInitSkillsBytes() { return __p.__vector_as_arraysegment(64); }
 private FlatBufferArray<int> InitSkillsValue;
 public FlatBufferArray<int>  InitSkills
 {
  get{
  if (InitSkillsValue == null)
  {
    InitSkillsValue = new FlatBufferArray<int>(this.InitSkillsArray, this.InitSkillsLength);
  }
  return InitSkillsValue;}
 }
  public int MaxSkillPanelIndex { get { int o = __p.__offset(66); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int AwakenSkillsArray(int j) { int o = __p.__offset(68); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int AwakenSkillsLength { get { int o = __p.__offset(68); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetAwakenSkillsBytes() { return __p.__vector_as_arraysegment(68); }
 private FlatBufferArray<int> AwakenSkillsValue;
 public FlatBufferArray<int>  AwakenSkills
 {
  get{
  if (AwakenSkillsValue == null)
  {
    AwakenSkillsValue = new FlatBufferArray<int>(this.AwakenSkillsArray, this.AwakenSkillsLength);
  }
  return AwakenSkillsValue;}
 }
  public int ProJobSkills { get { int o = __p.__offset(70); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int PreJobDialogIDArray(int j) { int o = __p.__offset(72); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int PreJobDialogIDLength { get { int o = __p.__offset(72); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetPreJobDialogIDBytes() { return __p.__vector_as_arraysegment(72); }
 private FlatBufferArray<int> PreJobDialogIDValue;
 public FlatBufferArray<int>  PreJobDialogID
 {
  get{
  if (PreJobDialogIDValue == null)
  {
    PreJobDialogIDValue = new FlatBufferArray<int>(this.PreJobDialogIDArray, this.PreJobDialogIDLength);
  }
  return PreJobDialogIDValue;}
 }
  public int FightID { get { int o = __p.__offset(74); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ToJobArray(int j) { int o = __p.__offset(76); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int ToJobLength { get { int o = __p.__offset(76); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetToJobBytes() { return __p.__vector_as_arraysegment(76); }
 private FlatBufferArray<int> ToJobValue;
 public FlatBufferArray<int>  ToJob
 {
  get{
  if (ToJobValue == null)
  {
    ToJobValue = new FlatBufferArray<int>(this.ToJobArray, this.ToJobLength);
  }
  return ToJobValue;}
 }
  public int NormalAttackID { get { int o = __p.__offset(78); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ChijiNormalAttackID { get { int o = __p.__offset(80); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int JumpAttackID { get { int o = __p.__offset(82); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int RunAttackID { get { int o = __p.__offset(84); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int JumpAttackNum { get { int o = __p.__offset(86); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string AIConfig1 { get { int o = __p.__offset(88); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetAIConfig1Bytes() { return __p.__vector_as_arraysegment(88); }
  public string AIConfig2 { get { int o = __p.__offset(90); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetAIConfig2Bytes() { return __p.__vector_as_arraysegment(90); }
  public string AIConfig3 { get { int o = __p.__offset(92); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetAIConfig3Bytes() { return __p.__vector_as_arraysegment(92); }
  public int AIKeepDistance { get { int o = __p.__offset(94); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ToJobGift { get { int o = __p.__offset(96); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string JobCreateName { get { int o = __p.__offset(98); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetJobCreateNameBytes() { return __p.__vector_as_arraysegment(98); }
  public string JobPortrayal { get { int o = __p.__offset(100); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetJobPortrayalBytes() { return __p.__vector_as_arraysegment(100); }
  public string JobHalfBody { get { int o = __p.__offset(102); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetJobHalfBodyBytes() { return __p.__vector_as_arraysegment(102); }
  public string JobHead { get { int o = __p.__offset(104); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetJobHeadBytes() { return __p.__vector_as_arraysegment(104); }
  public string JobWeaponIcon { get { int o = __p.__offset(106); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetJobWeaponIconBytes() { return __p.__vector_as_arraysegment(106); }
  public string JobBody { get { int o = __p.__offset(108); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetJobBodyBytes() { return __p.__vector_as_arraysegment(108); }
  public string JobIcon { get { int o = __p.__offset(110); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetJobIconBytes() { return __p.__vector_as_arraysegment(110); }
  public string SkillIconArray(int j) { int o = __p.__offset(112); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : FlatBufferConstants.DefaultString; }
  public int SkillIconLength { get { int o = __p.__offset(112); return o != 0 ? __p.__vector_len(o) : 0; } }
 private FlatBufferArray<string> SkillIconValue;
 public FlatBufferArray<string>  SkillIcon
 {
  get{
  if (SkillIconValue == null)
  {
    SkillIconValue = new FlatBufferArray<string>(this.SkillIconArray, this.SkillIconLength);
  }
  return SkillIconValue;}
 }
  public string JobDesArray(int j) { int o = __p.__offset(114); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : FlatBufferConstants.DefaultString; }
  public int JobDesLength { get { int o = __p.__offset(114); return o != 0 ? __p.__vector_len(o) : 0; } }
 private FlatBufferArray<string> JobDesValue;
 public FlatBufferArray<string>  JobDes
 {
  get{
  if (JobDesValue == null)
  {
    JobDesValue = new FlatBufferArray<string>(this.JobDesArray, this.JobDesLength);
  }
  return JobDesValue;}
 }
  public string JobSimpleDes { get { int o = __p.__offset(116); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetJobSimpleDesBytes() { return __p.__vector_as_arraysegment(116); }
  public string AwakeJobIcon { get { int o = __p.__offset(118); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetAwakeJobIconBytes() { return __p.__vector_as_arraysegment(118); }
  public string AwakeJobName { get { int o = __p.__offset(120); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetAwakeJobNameBytes() { return __p.__vector_as_arraysegment(120); }
  public string AwakeSkillName { get { int o = __p.__offset(122); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetAwakeSkillNameBytes() { return __p.__vector_as_arraysegment(122); }
  public string JobShowPathArray(int j) { int o = __p.__offset(124); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : FlatBufferConstants.DefaultString; }
  public int JobShowPathLength { get { int o = __p.__offset(124); return o != 0 ? __p.__vector_len(o) : 0; } }
 private FlatBufferArray<string> JobShowPathValue;
 public FlatBufferArray<string>  JobShowPath
 {
  get{
  if (JobShowPathValue == null)
  {
    JobShowPathValue = new FlatBufferArray<string>(this.JobShowPathArray, this.JobShowPathLength);
  }
  return JobShowPathValue;}
 }
  public string FirstPayWeapon { get { int o = __p.__offset(126); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetFirstPayWeaponBytes() { return __p.__vector_as_arraysegment(126); }
  public string PayItemsArray(int j) { int o = __p.__offset(128); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : FlatBufferConstants.DefaultString; }
  public int PayItemsLength { get { int o = __p.__offset(128); return o != 0 ? __p.__vector_len(o) : 0; } }
 private FlatBufferArray<string> PayItemsValue;
 public FlatBufferArray<string>  PayItems
 {
  get{
  if (PayItemsValue == null)
  {
    PayItemsValue = new FlatBufferArray<string>(this.PayItemsArray, this.PayItemsLength);
  }
  return PayItemsValue;}
 }
  public int AbilityChartArray(int j) { int o = __p.__offset(130); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int AbilityChartLength { get { int o = __p.__offset(130); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetAbilityChartBytes() { return __p.__vector_as_arraysegment(130); }
 private FlatBufferArray<int> AbilityChartValue;
 public FlatBufferArray<int>  AbilityChart
 {
  get{
  if (AbilityChartValue == null)
  {
    AbilityChartValue = new FlatBufferArray<int>(this.AbilityChartArray, this.AbilityChartLength);
  }
  return AbilityChartValue;}
 }
  public string Video { get { int o = __p.__offset(132); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetVideoBytes() { return __p.__vector_as_arraysegment(132); }
  public string JobImage { get { int o = __p.__offset(134); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetJobImageBytes() { return __p.__vector_as_arraysegment(134); }
  public int OffSetXFriendInfo { get { int o = __p.__offset(136); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int SuitArmorType { get { int o = __p.__offset(138); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string JobFashionImage { get { int o = __p.__offset(140); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetJobFashionImageBytes() { return __p.__vector_as_arraysegment(140); }
  public string GoodsRecommendBG { get { int o = __p.__offset(142); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetGoodsRecommendBGBytes() { return __p.__vector_as_arraysegment(142); }
  public int TownStatueFace { get { int o = __p.__offset(144); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string Job_xuanjue_zhiye { get { int o = __p.__offset(146); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetJobXuanjueZhiyeBytes() { return __p.__vector_as_arraysegment(146); }
  public int changeFinishShowSkillsArray(int j) { int o = __p.__offset(148); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int changeFinishShowSkillsLength { get { int o = __p.__offset(148); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetChangeFinishShowSkillsBytes() { return __p.__vector_as_arraysegment(148); }
 private FlatBufferArray<int> changeFinishShowSkillsValue;
 public FlatBufferArray<int>  changeFinishShowSkills
 {
  get{
  if (changeFinishShowSkillsValue == null)
  {
    changeFinishShowSkillsValue = new FlatBufferArray<int>(this.changeFinishShowSkillsArray, this.changeFinishShowSkillsLength);
  }
  return changeFinishShowSkillsValue;}
 }
  public string LoadingPrefab { get { int o = __p.__offset(150); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetLoadingPrefabBytes() { return __p.__vector_as_arraysegment(150); }
  public string PKMatchShowPrefab { get { int o = __p.__offset(152); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetPKMatchShowPrefabBytes() { return __p.__vector_as_arraysegment(152); }
  public string PKResultPrefab { get { int o = __p.__offset(154); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetPKResultPrefabBytes() { return __p.__vector_as_arraysegment(154); }
  public string PKMatchResultHeadIconPath { get { int o = __p.__offset(156); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetPKMatchResultHeadIconPathBytes() { return __p.__vector_as_arraysegment(156); }
  public string ChangJobTaskPrompt { get { int o = __p.__offset(158); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetChangJobTaskPromptBytes() { return __p.__vector_as_arraysegment(158); }
  public int AppointmentRoleID { get { int o = __p.__offset(160); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int JobSort { get { int o = __p.__offset(162); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int JobPortrayalPosX { get { int o = __p.__offset(164); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int JobPortrayalPosY { get { int o = __p.__offset(166); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int FirstPayModelTransformArray(int j) { int o = __p.__offset(168); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int FirstPayModelTransformLength { get { int o = __p.__offset(168); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetFirstPayModelTransformBytes() { return __p.__vector_as_arraysegment(168); }
 private FlatBufferArray<int> FirstPayModelTransformValue;
 public FlatBufferArray<int>  FirstPayModelTransform
 {
  get{
  if (FirstPayModelTransformValue == null)
  {
    FirstPayModelTransformValue = new FlatBufferArray<int>(this.FirstPayModelTransformArray, this.FirstPayModelTransformLength);
  }
  return FirstPayModelTransformValue;}
 }
  public int FashionMergeFastBuyID { get { int o = __p.__offset(170); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string ChangJobPromptButtonPos { get { int o = __p.__offset(172); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetChangJobPromptButtonPosBytes() { return __p.__vector_as_arraysegment(172); }
  public string RecommendedAttribute { get { int o = __p.__offset(174); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetRecommendedAttributeBytes() { return __p.__vector_as_arraysegment(174); }
  public int RecommendedAttributeIndexArray(int j) { int o = __p.__offset(176); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int RecommendedAttributeIndexLength { get { int o = __p.__offset(176); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetRecommendedAttributeIndexBytes() { return __p.__vector_as_arraysegment(176); }
 private FlatBufferArray<int> RecommendedAttributeIndexValue;
 public FlatBufferArray<int>  RecommendedAttributeIndex
 {
  get{
  if (RecommendedAttributeIndexValue == null)
  {
    RecommendedAttributeIndexValue = new FlatBufferArray<int>(this.RecommendedAttributeIndexArray, this.RecommendedAttributeIndexLength);
  }
  return RecommendedAttributeIndexValue;}
 }
  public int AttachMonsterResID { get { int o = __p.__offset(178); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string CharacterCollectionPhoto { get { int o = __p.__offset(180); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetCharacterCollectionPhotoBytes() { return __p.__vector_as_arraysegment(180); }
  public string CharacterCollectionArtLetting { get { int o = __p.__offset(182); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetCharacterCollectionArtLettingBytes() { return __p.__vector_as_arraysegment(182); }
  public string AppointmentJobImage { get { int o = __p.__offset(184); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetAppointmentJobImageBytes() { return __p.__vector_as_arraysegment(184); }
  public int BaseJobSort { get { int o = __p.__offset(186); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int EqualPvPSP { get { int o = __p.__offset(188); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Height { get { int o = __p.__offset(190); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ChiJiOccu { get { int o = __p.__offset(192); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int BattleTestUseSkillsArray(int j) { int o = __p.__offset(194); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int BattleTestUseSkillsLength { get { int o = __p.__offset(194); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetBattleTestUseSkillsBytes() { return __p.__vector_as_arraysegment(194); }
 private FlatBufferArray<int> BattleTestUseSkillsValue;
 public FlatBufferArray<int>  BattleTestUseSkills
 {
  get{
  if (BattleTestUseSkillsValue == null)
  {
    BattleTestUseSkillsValue = new FlatBufferArray<int>(this.BattleTestUseSkillsArray, this.BattleTestUseSkillsLength);
  }
  return BattleTestUseSkillsValue;}
 }
  public string JobNameImgPathsArray(int j) { int o = __p.__offset(196); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : FlatBufferConstants.DefaultString; }
  public int JobNameImgPathsLength { get { int o = __p.__offset(196); return o != 0 ? __p.__vector_len(o) : 0; } }
 private FlatBufferArray<string> JobNameImgPathsValue;
 public FlatBufferArray<string>  JobNameImgPaths
 {
  get{
  if (JobNameImgPathsValue == null)
  {
    JobNameImgPathsValue = new FlatBufferArray<string>(this.JobNameImgPathsArray, this.JobNameImgPathsLength);
  }
  return JobNameImgPathsValue;}
 }
  public string Tips { get { int o = __p.__offset(198); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetTipsBytes() { return __p.__vector_as_arraysegment(198); }
  public int ChangeOccuSkillsArray(int j) { int o = __p.__offset(200); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int ChangeOccuSkillsLength { get { int o = __p.__offset(200); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetChangeOccuSkillsBytes() { return __p.__vector_as_arraysegment(200); }
 private FlatBufferArray<int> ChangeOccuSkillsValue;
 public FlatBufferArray<int>  ChangeOccuSkills
 {
  get{
  if (ChangeOccuSkillsValue == null)
  {
    ChangeOccuSkillsValue = new FlatBufferArray<int>(this.ChangeOccuSkillsArray, this.ChangeOccuSkillsLength);
  }
  return ChangeOccuSkillsValue;}
 }
  public int ChangeOccuEquipsArray(int j) { int o = __p.__offset(202); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int ChangeOccuEquipsLength { get { int o = __p.__offset(202); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetChangeOccuEquipsBytes() { return __p.__vector_as_arraysegment(202); }
 private FlatBufferArray<int> ChangeOccuEquipsValue;
 public FlatBufferArray<int>  ChangeOccuEquips
 {
  get{
  if (ChangeOccuEquipsValue == null)
  {
    ChangeOccuEquipsValue = new FlatBufferArray<int>(this.ChangeOccuEquipsArray, this.ChangeOccuEquipsLength);
  }
  return ChangeOccuEquipsValue;}
 }

  public static Offset<JobTable> CreateJobTable(FlatBufferBuilder builder,
      int ID = 0,
      StringOffset NameOffset = default(StringOffset),
      VectorOffset AwakenJobNameOffset = default(VectorOffset),
      int JobAttribute = 0,
      int JobType = 0,
      int prejob = 0,
      ProtoTable.JobTable.esex sex = ProtoTable.JobTable.esex.Male,
      int OppositeSexJob = 0,
      int Open = 0,
      int CanCreateRole = 0,
      int AuctionJob = 0,
      int Diffcult = 0,
      int ComboFactor = 0,
      int Mode = 0,
      StringOffset RecPropertyOffset = default(StringOffset),
      StringOffset RecDefenceOffset = default(StringOffset),
      StringOffset RecWeaponOffset = default(StringOffset),
      int Weight = 0,
      StringOffset IdleAniNameOffset = default(StringOffset),
      StringOffset WalkAniNameOffset = default(StringOffset),
      StringOffset RunAniNameOffset = default(StringOffset),
      StringOffset DeadAniNameOffset = default(StringOffset),
      int DefaultBoxRadius = 0,
      StringOffset DefaultHitEffectOffset = default(StringOffset),
      int DefaultHitSFXID = 0,
      int DefaultWeaponTag = 0,
      int DefaultWeaponType = 0,
      StringOffset DefaultWeaponPathOffset = default(StringOffset),
      StringOffset DefaultWeaponLocatorOffset = default(StringOffset),
      StringOffset InputConfigPathOffset = default(StringOffset),
      VectorOffset InitSkillsOffset = default(VectorOffset),
      int MaxSkillPanelIndex = 0,
      VectorOffset AwakenSkillsOffset = default(VectorOffset),
      int ProJobSkills = 0,
      VectorOffset PreJobDialogIDOffset = default(VectorOffset),
      int FightID = 0,
      VectorOffset ToJobOffset = default(VectorOffset),
      int NormalAttackID = 0,
      int ChijiNormalAttackID = 0,
      int JumpAttackID = 0,
      int RunAttackID = 0,
      int JumpAttackNum = 0,
      StringOffset AIConfig1Offset = default(StringOffset),
      StringOffset AIConfig2Offset = default(StringOffset),
      StringOffset AIConfig3Offset = default(StringOffset),
      int AIKeepDistance = 0,
      int ToJobGift = 0,
      StringOffset JobCreateNameOffset = default(StringOffset),
      StringOffset JobPortrayalOffset = default(StringOffset),
      StringOffset JobHalfBodyOffset = default(StringOffset),
      StringOffset JobHeadOffset = default(StringOffset),
      StringOffset JobWeaponIconOffset = default(StringOffset),
      StringOffset JobBodyOffset = default(StringOffset),
      StringOffset JobIconOffset = default(StringOffset),
      VectorOffset SkillIconOffset = default(VectorOffset),
      VectorOffset JobDesOffset = default(VectorOffset),
      StringOffset JobSimpleDesOffset = default(StringOffset),
      StringOffset AwakeJobIconOffset = default(StringOffset),
      StringOffset AwakeJobNameOffset = default(StringOffset),
      StringOffset AwakeSkillNameOffset = default(StringOffset),
      VectorOffset JobShowPathOffset = default(VectorOffset),
      StringOffset FirstPayWeaponOffset = default(StringOffset),
      VectorOffset PayItemsOffset = default(VectorOffset),
      VectorOffset AbilityChartOffset = default(VectorOffset),
      StringOffset VideoOffset = default(StringOffset),
      StringOffset JobImageOffset = default(StringOffset),
      int OffSetXFriendInfo = 0,
      int SuitArmorType = 0,
      StringOffset JobFashionImageOffset = default(StringOffset),
      StringOffset GoodsRecommendBGOffset = default(StringOffset),
      int TownStatueFace = 0,
      StringOffset Job_xuanjue_zhiyeOffset = default(StringOffset),
      VectorOffset changeFinishShowSkillsOffset = default(VectorOffset),
      StringOffset LoadingPrefabOffset = default(StringOffset),
      StringOffset PKMatchShowPrefabOffset = default(StringOffset),
      StringOffset PKResultPrefabOffset = default(StringOffset),
      StringOffset PKMatchResultHeadIconPathOffset = default(StringOffset),
      StringOffset ChangJobTaskPromptOffset = default(StringOffset),
      int AppointmentRoleID = 0,
      int JobSort = 0,
      int JobPortrayalPosX = 0,
      int JobPortrayalPosY = 0,
      VectorOffset FirstPayModelTransformOffset = default(VectorOffset),
      int FashionMergeFastBuyID = 0,
      StringOffset ChangJobPromptButtonPosOffset = default(StringOffset),
      StringOffset RecommendedAttributeOffset = default(StringOffset),
      VectorOffset RecommendedAttributeIndexOffset = default(VectorOffset),
      int AttachMonsterResID = 0,
      StringOffset CharacterCollectionPhotoOffset = default(StringOffset),
      StringOffset CharacterCollectionArtLettingOffset = default(StringOffset),
      StringOffset AppointmentJobImageOffset = default(StringOffset),
      int BaseJobSort = 0,
      int EqualPvPSP = 0,
      int Height = 0,
      int ChiJiOccu = 0,
      VectorOffset BattleTestUseSkillsOffset = default(VectorOffset),
      VectorOffset JobNameImgPathsOffset = default(VectorOffset),
      StringOffset TipsOffset = default(StringOffset),
      VectorOffset ChangeOccuSkillsOffset = default(VectorOffset),
      VectorOffset ChangeOccuEquipsOffset = default(VectorOffset)) {
    builder.StartObject(100);
    JobTable.AddChangeOccuEquips(builder, ChangeOccuEquipsOffset);
    JobTable.AddChangeOccuSkills(builder, ChangeOccuSkillsOffset);
    JobTable.AddTips(builder, TipsOffset);
    JobTable.AddJobNameImgPaths(builder, JobNameImgPathsOffset);
    JobTable.AddBattleTestUseSkills(builder, BattleTestUseSkillsOffset);
    JobTable.AddChiJiOccu(builder, ChiJiOccu);
    JobTable.AddHeight(builder, Height);
    JobTable.AddEqualPvPSP(builder, EqualPvPSP);
    JobTable.AddBaseJobSort(builder, BaseJobSort);
    JobTable.AddAppointmentJobImage(builder, AppointmentJobImageOffset);
    JobTable.AddCharacterCollectionArtLetting(builder, CharacterCollectionArtLettingOffset);
    JobTable.AddCharacterCollectionPhoto(builder, CharacterCollectionPhotoOffset);
    JobTable.AddAttachMonsterResID(builder, AttachMonsterResID);
    JobTable.AddRecommendedAttributeIndex(builder, RecommendedAttributeIndexOffset);
    JobTable.AddRecommendedAttribute(builder, RecommendedAttributeOffset);
    JobTable.AddChangJobPromptButtonPos(builder, ChangJobPromptButtonPosOffset);
    JobTable.AddFashionMergeFastBuyID(builder, FashionMergeFastBuyID);
    JobTable.AddFirstPayModelTransform(builder, FirstPayModelTransformOffset);
    JobTable.AddJobPortrayalPosY(builder, JobPortrayalPosY);
    JobTable.AddJobPortrayalPosX(builder, JobPortrayalPosX);
    JobTable.AddJobSort(builder, JobSort);
    JobTable.AddAppointmentRoleID(builder, AppointmentRoleID);
    JobTable.AddChangJobTaskPrompt(builder, ChangJobTaskPromptOffset);
    JobTable.AddPKMatchResultHeadIconPath(builder, PKMatchResultHeadIconPathOffset);
    JobTable.AddPKResultPrefab(builder, PKResultPrefabOffset);
    JobTable.AddPKMatchShowPrefab(builder, PKMatchShowPrefabOffset);
    JobTable.AddLoadingPrefab(builder, LoadingPrefabOffset);
    JobTable.AddChangeFinishShowSkills(builder, changeFinishShowSkillsOffset);
    JobTable.AddJobXuanjueZhiye(builder, Job_xuanjue_zhiyeOffset);
    JobTable.AddTownStatueFace(builder, TownStatueFace);
    JobTable.AddGoodsRecommendBG(builder, GoodsRecommendBGOffset);
    JobTable.AddJobFashionImage(builder, JobFashionImageOffset);
    JobTable.AddSuitArmorType(builder, SuitArmorType);
    JobTable.AddOffSetXFriendInfo(builder, OffSetXFriendInfo);
    JobTable.AddJobImage(builder, JobImageOffset);
    JobTable.AddVideo(builder, VideoOffset);
    JobTable.AddAbilityChart(builder, AbilityChartOffset);
    JobTable.AddPayItems(builder, PayItemsOffset);
    JobTable.AddFirstPayWeapon(builder, FirstPayWeaponOffset);
    JobTable.AddJobShowPath(builder, JobShowPathOffset);
    JobTable.AddAwakeSkillName(builder, AwakeSkillNameOffset);
    JobTable.AddAwakeJobName(builder, AwakeJobNameOffset);
    JobTable.AddAwakeJobIcon(builder, AwakeJobIconOffset);
    JobTable.AddJobSimpleDes(builder, JobSimpleDesOffset);
    JobTable.AddJobDes(builder, JobDesOffset);
    JobTable.AddSkillIcon(builder, SkillIconOffset);
    JobTable.AddJobIcon(builder, JobIconOffset);
    JobTable.AddJobBody(builder, JobBodyOffset);
    JobTable.AddJobWeaponIcon(builder, JobWeaponIconOffset);
    JobTable.AddJobHead(builder, JobHeadOffset);
    JobTable.AddJobHalfBody(builder, JobHalfBodyOffset);
    JobTable.AddJobPortrayal(builder, JobPortrayalOffset);
    JobTable.AddJobCreateName(builder, JobCreateNameOffset);
    JobTable.AddToJobGift(builder, ToJobGift);
    JobTable.AddAIKeepDistance(builder, AIKeepDistance);
    JobTable.AddAIConfig3(builder, AIConfig3Offset);
    JobTable.AddAIConfig2(builder, AIConfig2Offset);
    JobTable.AddAIConfig1(builder, AIConfig1Offset);
    JobTable.AddJumpAttackNum(builder, JumpAttackNum);
    JobTable.AddRunAttackID(builder, RunAttackID);
    JobTable.AddJumpAttackID(builder, JumpAttackID);
    JobTable.AddChijiNormalAttackID(builder, ChijiNormalAttackID);
    JobTable.AddNormalAttackID(builder, NormalAttackID);
    JobTable.AddToJob(builder, ToJobOffset);
    JobTable.AddFightID(builder, FightID);
    JobTable.AddPreJobDialogID(builder, PreJobDialogIDOffset);
    JobTable.AddProJobSkills(builder, ProJobSkills);
    JobTable.AddAwakenSkills(builder, AwakenSkillsOffset);
    JobTable.AddMaxSkillPanelIndex(builder, MaxSkillPanelIndex);
    JobTable.AddInitSkills(builder, InitSkillsOffset);
    JobTable.AddInputConfigPath(builder, InputConfigPathOffset);
    JobTable.AddDefaultWeaponLocator(builder, DefaultWeaponLocatorOffset);
    JobTable.AddDefaultWeaponPath(builder, DefaultWeaponPathOffset);
    JobTable.AddDefaultWeaponType(builder, DefaultWeaponType);
    JobTable.AddDefaultWeaponTag(builder, DefaultWeaponTag);
    JobTable.AddDefaultHitSFXID(builder, DefaultHitSFXID);
    JobTable.AddDefaultHitEffect(builder, DefaultHitEffectOffset);
    JobTable.AddDefaultBoxRadius(builder, DefaultBoxRadius);
    JobTable.AddDeadAniName(builder, DeadAniNameOffset);
    JobTable.AddRunAniName(builder, RunAniNameOffset);
    JobTable.AddWalkAniName(builder, WalkAniNameOffset);
    JobTable.AddIdleAniName(builder, IdleAniNameOffset);
    JobTable.AddWeight(builder, Weight);
    JobTable.AddRecWeapon(builder, RecWeaponOffset);
    JobTable.AddRecDefence(builder, RecDefenceOffset);
    JobTable.AddRecProperty(builder, RecPropertyOffset);
    JobTable.AddMode(builder, Mode);
    JobTable.AddComboFactor(builder, ComboFactor);
    JobTable.AddDiffcult(builder, Diffcult);
    JobTable.AddAuctionJob(builder, AuctionJob);
    JobTable.AddCanCreateRole(builder, CanCreateRole);
    JobTable.AddOpen(builder, Open);
    JobTable.AddOppositeSexJob(builder, OppositeSexJob);
    JobTable.AddSex(builder, sex);
    JobTable.AddPrejob(builder, prejob);
    JobTable.AddJobType(builder, JobType);
    JobTable.AddJobAttribute(builder, JobAttribute);
    JobTable.AddAwakenJobName(builder, AwakenJobNameOffset);
    JobTable.AddName(builder, NameOffset);
    JobTable.AddID(builder, ID);
    return JobTable.EndJobTable(builder);
  }

  public static void StartJobTable(FlatBufferBuilder builder) { builder.StartObject(100); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset NameOffset) { builder.AddOffset(1, NameOffset.Value, 0); }
  public static void AddAwakenJobName(FlatBufferBuilder builder, VectorOffset AwakenJobNameOffset) { builder.AddOffset(2, AwakenJobNameOffset.Value, 0); }
  public static VectorOffset CreateAwakenJobNameVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartAwakenJobNameVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddJobAttribute(FlatBufferBuilder builder, int JobAttribute) { builder.AddInt(3, JobAttribute, 0); }
  public static void AddJobType(FlatBufferBuilder builder, int JobType) { builder.AddInt(4, JobType, 0); }
  public static void AddPrejob(FlatBufferBuilder builder, int prejob) { builder.AddInt(5, prejob, 0); }
  public static void AddSex(FlatBufferBuilder builder, ProtoTable.JobTable.esex sex) { builder.AddInt(6, (int)sex, 0); }
  public static void AddOppositeSexJob(FlatBufferBuilder builder, int OppositeSexJob) { builder.AddInt(7, OppositeSexJob, 0); }
  public static void AddOpen(FlatBufferBuilder builder, int Open) { builder.AddInt(8, Open, 0); }
  public static void AddCanCreateRole(FlatBufferBuilder builder, int CanCreateRole) { builder.AddInt(9, CanCreateRole, 0); }
  public static void AddAuctionJob(FlatBufferBuilder builder, int AuctionJob) { builder.AddInt(10, AuctionJob, 0); }
  public static void AddDiffcult(FlatBufferBuilder builder, int Diffcult) { builder.AddInt(11, Diffcult, 0); }
  public static void AddComboFactor(FlatBufferBuilder builder, int ComboFactor) { builder.AddInt(12, ComboFactor, 0); }
  public static void AddMode(FlatBufferBuilder builder, int Mode) { builder.AddInt(13, Mode, 0); }
  public static void AddRecProperty(FlatBufferBuilder builder, StringOffset RecPropertyOffset) { builder.AddOffset(14, RecPropertyOffset.Value, 0); }
  public static void AddRecDefence(FlatBufferBuilder builder, StringOffset RecDefenceOffset) { builder.AddOffset(15, RecDefenceOffset.Value, 0); }
  public static void AddRecWeapon(FlatBufferBuilder builder, StringOffset RecWeaponOffset) { builder.AddOffset(16, RecWeaponOffset.Value, 0); }
  public static void AddWeight(FlatBufferBuilder builder, int Weight) { builder.AddInt(17, Weight, 0); }
  public static void AddIdleAniName(FlatBufferBuilder builder, StringOffset IdleAniNameOffset) { builder.AddOffset(18, IdleAniNameOffset.Value, 0); }
  public static void AddWalkAniName(FlatBufferBuilder builder, StringOffset WalkAniNameOffset) { builder.AddOffset(19, WalkAniNameOffset.Value, 0); }
  public static void AddRunAniName(FlatBufferBuilder builder, StringOffset RunAniNameOffset) { builder.AddOffset(20, RunAniNameOffset.Value, 0); }
  public static void AddDeadAniName(FlatBufferBuilder builder, StringOffset DeadAniNameOffset) { builder.AddOffset(21, DeadAniNameOffset.Value, 0); }
  public static void AddDefaultBoxRadius(FlatBufferBuilder builder, int DefaultBoxRadius) { builder.AddInt(22, DefaultBoxRadius, 0); }
  public static void AddDefaultHitEffect(FlatBufferBuilder builder, StringOffset DefaultHitEffectOffset) { builder.AddOffset(23, DefaultHitEffectOffset.Value, 0); }
  public static void AddDefaultHitSFXID(FlatBufferBuilder builder, int DefaultHitSFXID) { builder.AddInt(24, DefaultHitSFXID, 0); }
  public static void AddDefaultWeaponTag(FlatBufferBuilder builder, int DefaultWeaponTag) { builder.AddInt(25, DefaultWeaponTag, 0); }
  public static void AddDefaultWeaponType(FlatBufferBuilder builder, int DefaultWeaponType) { builder.AddInt(26, DefaultWeaponType, 0); }
  public static void AddDefaultWeaponPath(FlatBufferBuilder builder, StringOffset DefaultWeaponPathOffset) { builder.AddOffset(27, DefaultWeaponPathOffset.Value, 0); }
  public static void AddDefaultWeaponLocator(FlatBufferBuilder builder, StringOffset DefaultWeaponLocatorOffset) { builder.AddOffset(28, DefaultWeaponLocatorOffset.Value, 0); }
  public static void AddInputConfigPath(FlatBufferBuilder builder, StringOffset InputConfigPathOffset) { builder.AddOffset(29, InputConfigPathOffset.Value, 0); }
  public static void AddInitSkills(FlatBufferBuilder builder, VectorOffset InitSkillsOffset) { builder.AddOffset(30, InitSkillsOffset.Value, 0); }
  public static VectorOffset CreateInitSkillsVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartInitSkillsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMaxSkillPanelIndex(FlatBufferBuilder builder, int MaxSkillPanelIndex) { builder.AddInt(31, MaxSkillPanelIndex, 0); }
  public static void AddAwakenSkills(FlatBufferBuilder builder, VectorOffset AwakenSkillsOffset) { builder.AddOffset(32, AwakenSkillsOffset.Value, 0); }
  public static VectorOffset CreateAwakenSkillsVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartAwakenSkillsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddProJobSkills(FlatBufferBuilder builder, int ProJobSkills) { builder.AddInt(33, ProJobSkills, 0); }
  public static void AddPreJobDialogID(FlatBufferBuilder builder, VectorOffset PreJobDialogIDOffset) { builder.AddOffset(34, PreJobDialogIDOffset.Value, 0); }
  public static VectorOffset CreatePreJobDialogIDVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartPreJobDialogIDVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddFightID(FlatBufferBuilder builder, int FightID) { builder.AddInt(35, FightID, 0); }
  public static void AddToJob(FlatBufferBuilder builder, VectorOffset ToJobOffset) { builder.AddOffset(36, ToJobOffset.Value, 0); }
  public static VectorOffset CreateToJobVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartToJobVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddNormalAttackID(FlatBufferBuilder builder, int NormalAttackID) { builder.AddInt(37, NormalAttackID, 0); }
  public static void AddChijiNormalAttackID(FlatBufferBuilder builder, int ChijiNormalAttackID) { builder.AddInt(38, ChijiNormalAttackID, 0); }
  public static void AddJumpAttackID(FlatBufferBuilder builder, int JumpAttackID) { builder.AddInt(39, JumpAttackID, 0); }
  public static void AddRunAttackID(FlatBufferBuilder builder, int RunAttackID) { builder.AddInt(40, RunAttackID, 0); }
  public static void AddJumpAttackNum(FlatBufferBuilder builder, int JumpAttackNum) { builder.AddInt(41, JumpAttackNum, 0); }
  public static void AddAIConfig1(FlatBufferBuilder builder, StringOffset AIConfig1Offset) { builder.AddOffset(42, AIConfig1Offset.Value, 0); }
  public static void AddAIConfig2(FlatBufferBuilder builder, StringOffset AIConfig2Offset) { builder.AddOffset(43, AIConfig2Offset.Value, 0); }
  public static void AddAIConfig3(FlatBufferBuilder builder, StringOffset AIConfig3Offset) { builder.AddOffset(44, AIConfig3Offset.Value, 0); }
  public static void AddAIKeepDistance(FlatBufferBuilder builder, int AIKeepDistance) { builder.AddInt(45, AIKeepDistance, 0); }
  public static void AddToJobGift(FlatBufferBuilder builder, int ToJobGift) { builder.AddInt(46, ToJobGift, 0); }
  public static void AddJobCreateName(FlatBufferBuilder builder, StringOffset JobCreateNameOffset) { builder.AddOffset(47, JobCreateNameOffset.Value, 0); }
  public static void AddJobPortrayal(FlatBufferBuilder builder, StringOffset JobPortrayalOffset) { builder.AddOffset(48, JobPortrayalOffset.Value, 0); }
  public static void AddJobHalfBody(FlatBufferBuilder builder, StringOffset JobHalfBodyOffset) { builder.AddOffset(49, JobHalfBodyOffset.Value, 0); }
  public static void AddJobHead(FlatBufferBuilder builder, StringOffset JobHeadOffset) { builder.AddOffset(50, JobHeadOffset.Value, 0); }
  public static void AddJobWeaponIcon(FlatBufferBuilder builder, StringOffset JobWeaponIconOffset) { builder.AddOffset(51, JobWeaponIconOffset.Value, 0); }
  public static void AddJobBody(FlatBufferBuilder builder, StringOffset JobBodyOffset) { builder.AddOffset(52, JobBodyOffset.Value, 0); }
  public static void AddJobIcon(FlatBufferBuilder builder, StringOffset JobIconOffset) { builder.AddOffset(53, JobIconOffset.Value, 0); }
  public static void AddSkillIcon(FlatBufferBuilder builder, VectorOffset SkillIconOffset) { builder.AddOffset(54, SkillIconOffset.Value, 0); }
  public static VectorOffset CreateSkillIconVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartSkillIconVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddJobDes(FlatBufferBuilder builder, VectorOffset JobDesOffset) { builder.AddOffset(55, JobDesOffset.Value, 0); }
  public static VectorOffset CreateJobDesVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartJobDesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddJobSimpleDes(FlatBufferBuilder builder, StringOffset JobSimpleDesOffset) { builder.AddOffset(56, JobSimpleDesOffset.Value, 0); }
  public static void AddAwakeJobIcon(FlatBufferBuilder builder, StringOffset AwakeJobIconOffset) { builder.AddOffset(57, AwakeJobIconOffset.Value, 0); }
  public static void AddAwakeJobName(FlatBufferBuilder builder, StringOffset AwakeJobNameOffset) { builder.AddOffset(58, AwakeJobNameOffset.Value, 0); }
  public static void AddAwakeSkillName(FlatBufferBuilder builder, StringOffset AwakeSkillNameOffset) { builder.AddOffset(59, AwakeSkillNameOffset.Value, 0); }
  public static void AddJobShowPath(FlatBufferBuilder builder, VectorOffset JobShowPathOffset) { builder.AddOffset(60, JobShowPathOffset.Value, 0); }
  public static VectorOffset CreateJobShowPathVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartJobShowPathVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddFirstPayWeapon(FlatBufferBuilder builder, StringOffset FirstPayWeaponOffset) { builder.AddOffset(61, FirstPayWeaponOffset.Value, 0); }
  public static void AddPayItems(FlatBufferBuilder builder, VectorOffset PayItemsOffset) { builder.AddOffset(62, PayItemsOffset.Value, 0); }
  public static VectorOffset CreatePayItemsVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartPayItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddAbilityChart(FlatBufferBuilder builder, VectorOffset AbilityChartOffset) { builder.AddOffset(63, AbilityChartOffset.Value, 0); }
  public static VectorOffset CreateAbilityChartVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartAbilityChartVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddVideo(FlatBufferBuilder builder, StringOffset VideoOffset) { builder.AddOffset(64, VideoOffset.Value, 0); }
  public static void AddJobImage(FlatBufferBuilder builder, StringOffset JobImageOffset) { builder.AddOffset(65, JobImageOffset.Value, 0); }
  public static void AddOffSetXFriendInfo(FlatBufferBuilder builder, int OffSetXFriendInfo) { builder.AddInt(66, OffSetXFriendInfo, 0); }
  public static void AddSuitArmorType(FlatBufferBuilder builder, int SuitArmorType) { builder.AddInt(67, SuitArmorType, 0); }
  public static void AddJobFashionImage(FlatBufferBuilder builder, StringOffset JobFashionImageOffset) { builder.AddOffset(68, JobFashionImageOffset.Value, 0); }
  public static void AddGoodsRecommendBG(FlatBufferBuilder builder, StringOffset GoodsRecommendBGOffset) { builder.AddOffset(69, GoodsRecommendBGOffset.Value, 0); }
  public static void AddTownStatueFace(FlatBufferBuilder builder, int TownStatueFace) { builder.AddInt(70, TownStatueFace, 0); }
  public static void AddJobXuanjueZhiye(FlatBufferBuilder builder, StringOffset JobXuanjueZhiyeOffset) { builder.AddOffset(71, JobXuanjueZhiyeOffset.Value, 0); }
  public static void AddChangeFinishShowSkills(FlatBufferBuilder builder, VectorOffset changeFinishShowSkillsOffset) { builder.AddOffset(72, changeFinishShowSkillsOffset.Value, 0); }
  public static VectorOffset CreateChangeFinishShowSkillsVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartChangeFinishShowSkillsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddLoadingPrefab(FlatBufferBuilder builder, StringOffset LoadingPrefabOffset) { builder.AddOffset(73, LoadingPrefabOffset.Value, 0); }
  public static void AddPKMatchShowPrefab(FlatBufferBuilder builder, StringOffset PKMatchShowPrefabOffset) { builder.AddOffset(74, PKMatchShowPrefabOffset.Value, 0); }
  public static void AddPKResultPrefab(FlatBufferBuilder builder, StringOffset PKResultPrefabOffset) { builder.AddOffset(75, PKResultPrefabOffset.Value, 0); }
  public static void AddPKMatchResultHeadIconPath(FlatBufferBuilder builder, StringOffset PKMatchResultHeadIconPathOffset) { builder.AddOffset(76, PKMatchResultHeadIconPathOffset.Value, 0); }
  public static void AddChangJobTaskPrompt(FlatBufferBuilder builder, StringOffset ChangJobTaskPromptOffset) { builder.AddOffset(77, ChangJobTaskPromptOffset.Value, 0); }
  public static void AddAppointmentRoleID(FlatBufferBuilder builder, int AppointmentRoleID) { builder.AddInt(78, AppointmentRoleID, 0); }
  public static void AddJobSort(FlatBufferBuilder builder, int JobSort) { builder.AddInt(79, JobSort, 0); }
  public static void AddJobPortrayalPosX(FlatBufferBuilder builder, int JobPortrayalPosX) { builder.AddInt(80, JobPortrayalPosX, 0); }
  public static void AddJobPortrayalPosY(FlatBufferBuilder builder, int JobPortrayalPosY) { builder.AddInt(81, JobPortrayalPosY, 0); }
  public static void AddFirstPayModelTransform(FlatBufferBuilder builder, VectorOffset FirstPayModelTransformOffset) { builder.AddOffset(82, FirstPayModelTransformOffset.Value, 0); }
  public static VectorOffset CreateFirstPayModelTransformVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartFirstPayModelTransformVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddFashionMergeFastBuyID(FlatBufferBuilder builder, int FashionMergeFastBuyID) { builder.AddInt(83, FashionMergeFastBuyID, 0); }
  public static void AddChangJobPromptButtonPos(FlatBufferBuilder builder, StringOffset ChangJobPromptButtonPosOffset) { builder.AddOffset(84, ChangJobPromptButtonPosOffset.Value, 0); }
  public static void AddRecommendedAttribute(FlatBufferBuilder builder, StringOffset RecommendedAttributeOffset) { builder.AddOffset(85, RecommendedAttributeOffset.Value, 0); }
  public static void AddRecommendedAttributeIndex(FlatBufferBuilder builder, VectorOffset RecommendedAttributeIndexOffset) { builder.AddOffset(86, RecommendedAttributeIndexOffset.Value, 0); }
  public static VectorOffset CreateRecommendedAttributeIndexVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartRecommendedAttributeIndexVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddAttachMonsterResID(FlatBufferBuilder builder, int AttachMonsterResID) { builder.AddInt(87, AttachMonsterResID, 0); }
  public static void AddCharacterCollectionPhoto(FlatBufferBuilder builder, StringOffset CharacterCollectionPhotoOffset) { builder.AddOffset(88, CharacterCollectionPhotoOffset.Value, 0); }
  public static void AddCharacterCollectionArtLetting(FlatBufferBuilder builder, StringOffset CharacterCollectionArtLettingOffset) { builder.AddOffset(89, CharacterCollectionArtLettingOffset.Value, 0); }
  public static void AddAppointmentJobImage(FlatBufferBuilder builder, StringOffset AppointmentJobImageOffset) { builder.AddOffset(90, AppointmentJobImageOffset.Value, 0); }
  public static void AddBaseJobSort(FlatBufferBuilder builder, int BaseJobSort) { builder.AddInt(91, BaseJobSort, 0); }
  public static void AddEqualPvPSP(FlatBufferBuilder builder, int EqualPvPSP) { builder.AddInt(92, EqualPvPSP, 0); }
  public static void AddHeight(FlatBufferBuilder builder, int Height) { builder.AddInt(93, Height, 0); }
  public static void AddChiJiOccu(FlatBufferBuilder builder, int ChiJiOccu) { builder.AddInt(94, ChiJiOccu, 0); }
  public static void AddBattleTestUseSkills(FlatBufferBuilder builder, VectorOffset BattleTestUseSkillsOffset) { builder.AddOffset(95, BattleTestUseSkillsOffset.Value, 0); }
  public static VectorOffset CreateBattleTestUseSkillsVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartBattleTestUseSkillsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddJobNameImgPaths(FlatBufferBuilder builder, VectorOffset JobNameImgPathsOffset) { builder.AddOffset(96, JobNameImgPathsOffset.Value, 0); }
  public static VectorOffset CreateJobNameImgPathsVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartJobNameImgPathsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddTips(FlatBufferBuilder builder, StringOffset TipsOffset) { builder.AddOffset(97, TipsOffset.Value, 0); }
  public static void AddChangeOccuSkills(FlatBufferBuilder builder, VectorOffset ChangeOccuSkillsOffset) { builder.AddOffset(98, ChangeOccuSkillsOffset.Value, 0); }
  public static VectorOffset CreateChangeOccuSkillsVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartChangeOccuSkillsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddChangeOccuEquips(FlatBufferBuilder builder, VectorOffset ChangeOccuEquipsOffset) { builder.AddOffset(99, ChangeOccuEquipsOffset.Value, 0); }
  public static VectorOffset CreateChangeOccuEquipsVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartChangeOccuEquipsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<JobTable> EndJobTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<JobTable>(o);
  }
  public static void FinishJobTableBuffer(FlatBufferBuilder builder, Offset<JobTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

