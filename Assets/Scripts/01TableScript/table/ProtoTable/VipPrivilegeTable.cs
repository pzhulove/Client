// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class VipPrivilegeTable : IFlatbufferObject
{
public enum eType : int
{
 None = 0,
 DUNGEON_EXP = 1,
 FREE_REVIVE = 2,
 DUNGEON_DROP_GOLD = 3,
 PK_MONEY_LIMIT = 4,
 GOLDBOX_FREEOPEN_NUM = 5,
 BLACKMARKET_NOBILITY_GOODS = 6,
 WARRIOR_TOWER_REBEGIN_NUM = 7,
 MAGIC_VEIN_NUM = 8,
 MYSTERIOUS_SHOP_REFRESH_NUM = 9,
 GUILD_TICKET_DONATE_DAILY = 10,
 OFFLINE_FIND_FATIGUE_LIMIT = 11,
 GUILD_LUXURY_WORSHIP = 12,
 PERFECT_FIND = 13,
 SIGN_IN_DOUBLE = 14,
 FATIGUE_DRUG_USE_NUM = 15,
 GUILD_PRIVATECOST_REDPACKET = 16,
 TEAM_BOSS_NUM = 17,
 AUTO_EATING = 18,
 WORLD_CHAT_FREE_TIMES = 19,
 AUTION_VIP_COMMISSION_PRIVILEGE = 20,
 BACKPACK_VIP_TITLE = 21,
 BACKPACK_VIP_FASHION = 22,
};

public enum eDataType : int
{
 DataType_None = 0,
 INT = 1,
 FLOAT = 2,
};

public enum eCrypt : int
{
 code = -623361718,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static VipPrivilegeTable GetRootAsVipPrivilegeTable(ByteBuffer _bb) { return GetRootAsVipPrivilegeTable(_bb, new VipPrivilegeTable()); }
  public static VipPrivilegeTable GetRootAsVipPrivilegeTable(ByteBuffer _bb, VipPrivilegeTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public VipPrivilegeTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
  public ProtoTable.VipPrivilegeTable.eType Type { get { int o = __p.__offset(8); return o != 0 ? (ProtoTable.VipPrivilegeTable.eType)__p.bb.GetInt(o + __p.bb_pos) : ProtoTable.VipPrivilegeTable.eType.None; } }
  public string Description { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetDescriptionBytes() { return __p.__vector_as_arraysegment(10); }
  public ProtoTable.VipPrivilegeTable.eDataType DataType { get { int o = __p.__offset(12); return o != 0 ? (ProtoTable.VipPrivilegeTable.eDataType)__p.bb.GetInt(o + __p.bb_pos) : ProtoTable.VipPrivilegeTable.eDataType.DataType_None; } }
  public int VIP0 { get { int o = __p.__offset(14); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int VIP1 { get { int o = __p.__offset(16); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int VIP2 { get { int o = __p.__offset(18); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int VIP3 { get { int o = __p.__offset(20); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int VIP4 { get { int o = __p.__offset(22); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int VIP5 { get { int o = __p.__offset(24); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int VIP6 { get { int o = __p.__offset(26); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int VIP7 { get { int o = __p.__offset(28); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int VIP8 { get { int o = __p.__offset(30); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int VIP9 { get { int o = __p.__offset(32); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int VIP10 { get { int o = __p.__offset(34); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int VIP11 { get { int o = __p.__offset(36); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string IconPath { get { int o = __p.__offset(38); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetIconPathBytes() { return __p.__vector_as_arraysegment(38); }
  public string VIPDisplay { get { int o = __p.__offset(40); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetVIPDisplayBytes() { return __p.__vector_as_arraysegment(40); }
  public int DisplayIndex { get { int o = __p.__offset(42); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }

  public static Offset<VipPrivilegeTable> CreateVipPrivilegeTable(FlatBufferBuilder builder,
      int ID = 0,
      StringOffset NameOffset = default(StringOffset),
      ProtoTable.VipPrivilegeTable.eType Type = ProtoTable.VipPrivilegeTable.eType.None,
      StringOffset DescriptionOffset = default(StringOffset),
      ProtoTable.VipPrivilegeTable.eDataType DataType = ProtoTable.VipPrivilegeTable.eDataType.DataType_None,
      int VIP0 = 0,
      int VIP1 = 0,
      int VIP2 = 0,
      int VIP3 = 0,
      int VIP4 = 0,
      int VIP5 = 0,
      int VIP6 = 0,
      int VIP7 = 0,
      int VIP8 = 0,
      int VIP9 = 0,
      int VIP10 = 0,
      int VIP11 = 0,
      StringOffset IconPathOffset = default(StringOffset),
      StringOffset VIPDisplayOffset = default(StringOffset),
      int DisplayIndex = 0) {
    builder.StartObject(20);
    VipPrivilegeTable.AddDisplayIndex(builder, DisplayIndex);
    VipPrivilegeTable.AddVIPDisplay(builder, VIPDisplayOffset);
    VipPrivilegeTable.AddIconPath(builder, IconPathOffset);
    VipPrivilegeTable.AddVIP11(builder, VIP11);
    VipPrivilegeTable.AddVIP10(builder, VIP10);
    VipPrivilegeTable.AddVIP9(builder, VIP9);
    VipPrivilegeTable.AddVIP8(builder, VIP8);
    VipPrivilegeTable.AddVIP7(builder, VIP7);
    VipPrivilegeTable.AddVIP6(builder, VIP6);
    VipPrivilegeTable.AddVIP5(builder, VIP5);
    VipPrivilegeTable.AddVIP4(builder, VIP4);
    VipPrivilegeTable.AddVIP3(builder, VIP3);
    VipPrivilegeTable.AddVIP2(builder, VIP2);
    VipPrivilegeTable.AddVIP1(builder, VIP1);
    VipPrivilegeTable.AddVIP0(builder, VIP0);
    VipPrivilegeTable.AddDataType(builder, DataType);
    VipPrivilegeTable.AddDescription(builder, DescriptionOffset);
    VipPrivilegeTable.AddType(builder, Type);
    VipPrivilegeTable.AddName(builder, NameOffset);
    VipPrivilegeTable.AddID(builder, ID);
    return VipPrivilegeTable.EndVipPrivilegeTable(builder);
  }

  public static void StartVipPrivilegeTable(FlatBufferBuilder builder) { builder.StartObject(20); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset NameOffset) { builder.AddOffset(1, NameOffset.Value, 0); }
  public static void AddType(FlatBufferBuilder builder, ProtoTable.VipPrivilegeTable.eType Type) { builder.AddInt(2, (int)Type, 0); }
  public static void AddDescription(FlatBufferBuilder builder, StringOffset DescriptionOffset) { builder.AddOffset(3, DescriptionOffset.Value, 0); }
  public static void AddDataType(FlatBufferBuilder builder, ProtoTable.VipPrivilegeTable.eDataType DataType) { builder.AddInt(4, (int)DataType, 0); }
  public static void AddVIP0(FlatBufferBuilder builder, int VIP0) { builder.AddInt(5, VIP0, 0); }
  public static void AddVIP1(FlatBufferBuilder builder, int VIP1) { builder.AddInt(6, VIP1, 0); }
  public static void AddVIP2(FlatBufferBuilder builder, int VIP2) { builder.AddInt(7, VIP2, 0); }
  public static void AddVIP3(FlatBufferBuilder builder, int VIP3) { builder.AddInt(8, VIP3, 0); }
  public static void AddVIP4(FlatBufferBuilder builder, int VIP4) { builder.AddInt(9, VIP4, 0); }
  public static void AddVIP5(FlatBufferBuilder builder, int VIP5) { builder.AddInt(10, VIP5, 0); }
  public static void AddVIP6(FlatBufferBuilder builder, int VIP6) { builder.AddInt(11, VIP6, 0); }
  public static void AddVIP7(FlatBufferBuilder builder, int VIP7) { builder.AddInt(12, VIP7, 0); }
  public static void AddVIP8(FlatBufferBuilder builder, int VIP8) { builder.AddInt(13, VIP8, 0); }
  public static void AddVIP9(FlatBufferBuilder builder, int VIP9) { builder.AddInt(14, VIP9, 0); }
  public static void AddVIP10(FlatBufferBuilder builder, int VIP10) { builder.AddInt(15, VIP10, 0); }
  public static void AddVIP11(FlatBufferBuilder builder, int VIP11) { builder.AddInt(16, VIP11, 0); }
  public static void AddIconPath(FlatBufferBuilder builder, StringOffset IconPathOffset) { builder.AddOffset(17, IconPathOffset.Value, 0); }
  public static void AddVIPDisplay(FlatBufferBuilder builder, StringOffset VIPDisplayOffset) { builder.AddOffset(18, VIPDisplayOffset.Value, 0); }
  public static void AddDisplayIndex(FlatBufferBuilder builder, int DisplayIndex) { builder.AddInt(19, DisplayIndex, 0); }
  public static Offset<VipPrivilegeTable> EndVipPrivilegeTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<VipPrivilegeTable>(o);
  }
  public static void FinishVipPrivilegeTableBuffer(FlatBufferBuilder builder, Offset<VipPrivilegeTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

