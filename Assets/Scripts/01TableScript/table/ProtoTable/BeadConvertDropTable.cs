// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class BeadConvertDropTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = 514040138,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static BeadConvertDropTable GetRootAsBeadConvertDropTable(ByteBuffer _bb) { return GetRootAsBeadConvertDropTable(_bb, new BeadConvertDropTable()); }
  public static BeadConvertDropTable GetRootAsBeadConvertDropTable(ByteBuffer _bb, BeadConvertDropTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public BeadConvertDropTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int DropPackID { get { int o = __p.__offset(6); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ItemID { get { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ItemNum { get { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ItemName { get { int o = __p.__offset(12); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Weight { get { int o = __p.__offset(14); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string Text { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetTextBytes() { return __p.__vector_as_arraysegment(16); }

  public static Offset<BeadConvertDropTable> CreateBeadConvertDropTable(FlatBufferBuilder builder,
      int ID = 0,
      int DropPackID = 0,
      int ItemID = 0,
      int ItemNum = 0,
      int ItemName = 0,
      int Weight = 0,
      StringOffset TextOffset = default(StringOffset)) {
    builder.StartObject(7);
    BeadConvertDropTable.AddText(builder, TextOffset);
    BeadConvertDropTable.AddWeight(builder, Weight);
    BeadConvertDropTable.AddItemName(builder, ItemName);
    BeadConvertDropTable.AddItemNum(builder, ItemNum);
    BeadConvertDropTable.AddItemID(builder, ItemID);
    BeadConvertDropTable.AddDropPackID(builder, DropPackID);
    BeadConvertDropTable.AddID(builder, ID);
    return BeadConvertDropTable.EndBeadConvertDropTable(builder);
  }

  public static void StartBeadConvertDropTable(FlatBufferBuilder builder) { builder.StartObject(7); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddDropPackID(FlatBufferBuilder builder, int DropPackID) { builder.AddInt(1, DropPackID, 0); }
  public static void AddItemID(FlatBufferBuilder builder, int ItemID) { builder.AddInt(2, ItemID, 0); }
  public static void AddItemNum(FlatBufferBuilder builder, int ItemNum) { builder.AddInt(3, ItemNum, 0); }
  public static void AddItemName(FlatBufferBuilder builder, int ItemName) { builder.AddInt(4, ItemName, 0); }
  public static void AddWeight(FlatBufferBuilder builder, int Weight) { builder.AddInt(5, Weight, 0); }
  public static void AddText(FlatBufferBuilder builder, StringOffset TextOffset) { builder.AddOffset(6, TextOffset.Value, 0); }
  public static Offset<BeadConvertDropTable> EndBeadConvertDropTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<BeadConvertDropTable>(o);
  }
  public static void FinishBeadConvertDropTableBuffer(FlatBufferBuilder builder, Offset<BeadConvertDropTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

