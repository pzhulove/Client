// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class BlackMarketTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = 56829445,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static BlackMarketTable GetRootAsBlackMarketTable(ByteBuffer _bb) { return GetRootAsBlackMarketTable(_bb, new BlackMarketTable()); }
  public static BlackMarketTable GetRootAsBlackMarketTable(ByteBuffer _bb, BlackMarketTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public BlackMarketTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int NpcID { get { int o = __p.__offset(6); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string NpcPortrait { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetNpcPortraitBytes() { return __p.__vector_as_arraysegment(8); }
  public string NPCDialogue { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetNPCDialogueBytes() { return __p.__vector_as_arraysegment(10); }
  public string TransactionTypeDescribe { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetTransactionTypeDescribeBytes() { return __p.__vector_as_arraysegment(12); }

  public static Offset<BlackMarketTable> CreateBlackMarketTable(FlatBufferBuilder builder,
      int ID = 0,
      int NpcID = 0,
      StringOffset NpcPortraitOffset = default(StringOffset),
      StringOffset NPCDialogueOffset = default(StringOffset),
      StringOffset TransactionTypeDescribeOffset = default(StringOffset)) {
    builder.StartObject(5);
    BlackMarketTable.AddTransactionTypeDescribe(builder, TransactionTypeDescribeOffset);
    BlackMarketTable.AddNPCDialogue(builder, NPCDialogueOffset);
    BlackMarketTable.AddNpcPortrait(builder, NpcPortraitOffset);
    BlackMarketTable.AddNpcID(builder, NpcID);
    BlackMarketTable.AddID(builder, ID);
    return BlackMarketTable.EndBlackMarketTable(builder);
  }

  public static void StartBlackMarketTable(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddNpcID(FlatBufferBuilder builder, int NpcID) { builder.AddInt(1, NpcID, 0); }
  public static void AddNpcPortrait(FlatBufferBuilder builder, StringOffset NpcPortraitOffset) { builder.AddOffset(2, NpcPortraitOffset.Value, 0); }
  public static void AddNPCDialogue(FlatBufferBuilder builder, StringOffset NPCDialogueOffset) { builder.AddOffset(3, NPCDialogueOffset.Value, 0); }
  public static void AddTransactionTypeDescribe(FlatBufferBuilder builder, StringOffset TransactionTypeDescribeOffset) { builder.AddOffset(4, TransactionTypeDescribeOffset.Value, 0); }
  public static Offset<BlackMarketTable> EndBlackMarketTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<BlackMarketTable>(o);
  }
  public static void FinishBlackMarketTableBuffer(FlatBufferBuilder builder, Offset<BlackMarketTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

