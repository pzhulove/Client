// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class SwitchClientFunctionTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = -1559718353,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static SwitchClientFunctionTable GetRootAsSwitchClientFunctionTable(ByteBuffer _bb) { return GetRootAsSwitchClientFunctionTable(_bb, new SwitchClientFunctionTable()); }
  public static SwitchClientFunctionTable GetRootAsSwitchClientFunctionTable(ByteBuffer _bb, SwitchClientFunctionTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public SwitchClientFunctionTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
  public bool Open { get { int o = __p.__offset(8); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public string DescA { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetDescABytes() { return __p.__vector_as_arraysegment(10); }
  public int ValueA { get { int o = __p.__offset(12); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string DescB { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetDescBBytes() { return __p.__vector_as_arraysegment(14); }
  public int ValueB { get { int o = __p.__offset(16); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string DescC { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetDescCBytes() { return __p.__vector_as_arraysegment(18); }
  public int ValueC { get { int o = __p.__offset(20); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string DescD { get { int o = __p.__offset(22); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetDescDBytes() { return __p.__vector_as_arraysegment(22); }
  public int ValueDArray(int j) { int o = __p.__offset(24); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int ValueDLength { get { int o = __p.__offset(24); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetValueDBytes() { return __p.__vector_as_arraysegment(24); }
 private FlatBufferArray<int> ValueDValue;
 public FlatBufferArray<int>  ValueD
 {
  get{
  if (ValueDValue == null)
  {
    ValueDValue = new FlatBufferArray<int>(this.ValueDArray, this.ValueDLength);
  }
  return ValueDValue;}
 }
  public string DescE { get { int o = __p.__offset(26); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetDescEBytes() { return __p.__vector_as_arraysegment(26); }
  public int ValueE { get { int o = __p.__offset(28); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }

  public static Offset<SwitchClientFunctionTable> CreateSwitchClientFunctionTable(FlatBufferBuilder builder,
      int ID = 0,
      StringOffset NameOffset = default(StringOffset),
      bool Open = false,
      StringOffset DescAOffset = default(StringOffset),
      int ValueA = 0,
      StringOffset DescBOffset = default(StringOffset),
      int ValueB = 0,
      StringOffset DescCOffset = default(StringOffset),
      int ValueC = 0,
      StringOffset DescDOffset = default(StringOffset),
      VectorOffset ValueDOffset = default(VectorOffset),
      StringOffset DescEOffset = default(StringOffset),
      int ValueE = 0) {
    builder.StartObject(13);
    SwitchClientFunctionTable.AddValueE(builder, ValueE);
    SwitchClientFunctionTable.AddDescE(builder, DescEOffset);
    SwitchClientFunctionTable.AddValueD(builder, ValueDOffset);
    SwitchClientFunctionTable.AddDescD(builder, DescDOffset);
    SwitchClientFunctionTable.AddValueC(builder, ValueC);
    SwitchClientFunctionTable.AddDescC(builder, DescCOffset);
    SwitchClientFunctionTable.AddValueB(builder, ValueB);
    SwitchClientFunctionTable.AddDescB(builder, DescBOffset);
    SwitchClientFunctionTable.AddValueA(builder, ValueA);
    SwitchClientFunctionTable.AddDescA(builder, DescAOffset);
    SwitchClientFunctionTable.AddName(builder, NameOffset);
    SwitchClientFunctionTable.AddID(builder, ID);
    SwitchClientFunctionTable.AddOpen(builder, Open);
    return SwitchClientFunctionTable.EndSwitchClientFunctionTable(builder);
  }

  public static void StartSwitchClientFunctionTable(FlatBufferBuilder builder) { builder.StartObject(13); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset NameOffset) { builder.AddOffset(1, NameOffset.Value, 0); }
  public static void AddOpen(FlatBufferBuilder builder, bool Open) { builder.AddBool(2, Open, false); }
  public static void AddDescA(FlatBufferBuilder builder, StringOffset DescAOffset) { builder.AddOffset(3, DescAOffset.Value, 0); }
  public static void AddValueA(FlatBufferBuilder builder, int ValueA) { builder.AddInt(4, ValueA, 0); }
  public static void AddDescB(FlatBufferBuilder builder, StringOffset DescBOffset) { builder.AddOffset(5, DescBOffset.Value, 0); }
  public static void AddValueB(FlatBufferBuilder builder, int ValueB) { builder.AddInt(6, ValueB, 0); }
  public static void AddDescC(FlatBufferBuilder builder, StringOffset DescCOffset) { builder.AddOffset(7, DescCOffset.Value, 0); }
  public static void AddValueC(FlatBufferBuilder builder, int ValueC) { builder.AddInt(8, ValueC, 0); }
  public static void AddDescD(FlatBufferBuilder builder, StringOffset DescDOffset) { builder.AddOffset(9, DescDOffset.Value, 0); }
  public static void AddValueD(FlatBufferBuilder builder, VectorOffset ValueDOffset) { builder.AddOffset(10, ValueDOffset.Value, 0); }
  public static VectorOffset CreateValueDVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartValueDVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddDescE(FlatBufferBuilder builder, StringOffset DescEOffset) { builder.AddOffset(11, DescEOffset.Value, 0); }
  public static void AddValueE(FlatBufferBuilder builder, int ValueE) { builder.AddInt(12, ValueE, 0); }
  public static Offset<SwitchClientFunctionTable> EndSwitchClientFunctionTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<SwitchClientFunctionTable>(o);
  }
  public static void FinishSwitchClientFunctionTableBuffer(FlatBufferBuilder builder, Offset<SwitchClientFunctionTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

