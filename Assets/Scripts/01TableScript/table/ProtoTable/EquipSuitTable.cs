// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class EquipSuitTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = -2077694007,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static EquipSuitTable GetRootAsEquipSuitTable(ByteBuffer _bb) { return GetRootAsEquipSuitTable(_bb, new EquipSuitTable()); }
  public static EquipSuitTable GetRootAsEquipSuitTable(ByteBuffer _bb, EquipSuitTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public EquipSuitTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
  public int SuitsLv { get { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int EquipIDsArray(int j) { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int EquipIDsLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetEquipIDsBytes() { return __p.__vector_as_arraysegment(10); }
 private FlatBufferArray<int> EquipIDsValue;
 public FlatBufferArray<int>  EquipIDs
 {
  get{
  if (EquipIDsValue == null)
  {
    EquipIDsValue = new FlatBufferArray<int>(this.EquipIDsArray, this.EquipIDsLength);
  }
  return EquipIDsValue;}
 }
  public int TwoEquipsAttrID { get { int o = __p.__offset(12); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ThreeEquipsAttrID { get { int o = __p.__offset(14); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int FourEquipsAttrID { get { int o = __p.__offset(16); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int FiveEquipsAttrID { get { int o = __p.__offset(18); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int SixEquipsAttrID { get { int o = __p.__offset(20); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int EightEquipsAttrID { get { int o = __p.__offset(22); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int NineEquipsAttrID { get { int o = __p.__offset(24); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string Description { get { int o = __p.__offset(26); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetDescriptionBytes() { return __p.__vector_as_arraysegment(26); }
  public int Adjust { get { int o = __p.__offset(28); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }

  public static Offset<EquipSuitTable> CreateEquipSuitTable(FlatBufferBuilder builder,
      int ID = 0,
      StringOffset NameOffset = default(StringOffset),
      int SuitsLv = 0,
      VectorOffset EquipIDsOffset = default(VectorOffset),
      int TwoEquipsAttrID = 0,
      int ThreeEquipsAttrID = 0,
      int FourEquipsAttrID = 0,
      int FiveEquipsAttrID = 0,
      int SixEquipsAttrID = 0,
      int EightEquipsAttrID = 0,
      int NineEquipsAttrID = 0,
      StringOffset DescriptionOffset = default(StringOffset),
      int Adjust = 0) {
    builder.StartObject(13);
    EquipSuitTable.AddAdjust(builder, Adjust);
    EquipSuitTable.AddDescription(builder, DescriptionOffset);
    EquipSuitTable.AddNineEquipsAttrID(builder, NineEquipsAttrID);
    EquipSuitTable.AddEightEquipsAttrID(builder, EightEquipsAttrID);
    EquipSuitTable.AddSixEquipsAttrID(builder, SixEquipsAttrID);
    EquipSuitTable.AddFiveEquipsAttrID(builder, FiveEquipsAttrID);
    EquipSuitTable.AddFourEquipsAttrID(builder, FourEquipsAttrID);
    EquipSuitTable.AddThreeEquipsAttrID(builder, ThreeEquipsAttrID);
    EquipSuitTable.AddTwoEquipsAttrID(builder, TwoEquipsAttrID);
    EquipSuitTable.AddEquipIDs(builder, EquipIDsOffset);
    EquipSuitTable.AddSuitsLv(builder, SuitsLv);
    EquipSuitTable.AddName(builder, NameOffset);
    EquipSuitTable.AddID(builder, ID);
    return EquipSuitTable.EndEquipSuitTable(builder);
  }

  public static void StartEquipSuitTable(FlatBufferBuilder builder) { builder.StartObject(13); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset NameOffset) { builder.AddOffset(1, NameOffset.Value, 0); }
  public static void AddSuitsLv(FlatBufferBuilder builder, int SuitsLv) { builder.AddInt(2, SuitsLv, 0); }
  public static void AddEquipIDs(FlatBufferBuilder builder, VectorOffset EquipIDsOffset) { builder.AddOffset(3, EquipIDsOffset.Value, 0); }
  public static VectorOffset CreateEquipIDsVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartEquipIDsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddTwoEquipsAttrID(FlatBufferBuilder builder, int TwoEquipsAttrID) { builder.AddInt(4, TwoEquipsAttrID, 0); }
  public static void AddThreeEquipsAttrID(FlatBufferBuilder builder, int ThreeEquipsAttrID) { builder.AddInt(5, ThreeEquipsAttrID, 0); }
  public static void AddFourEquipsAttrID(FlatBufferBuilder builder, int FourEquipsAttrID) { builder.AddInt(6, FourEquipsAttrID, 0); }
  public static void AddFiveEquipsAttrID(FlatBufferBuilder builder, int FiveEquipsAttrID) { builder.AddInt(7, FiveEquipsAttrID, 0); }
  public static void AddSixEquipsAttrID(FlatBufferBuilder builder, int SixEquipsAttrID) { builder.AddInt(8, SixEquipsAttrID, 0); }
  public static void AddEightEquipsAttrID(FlatBufferBuilder builder, int EightEquipsAttrID) { builder.AddInt(9, EightEquipsAttrID, 0); }
  public static void AddNineEquipsAttrID(FlatBufferBuilder builder, int NineEquipsAttrID) { builder.AddInt(10, NineEquipsAttrID, 0); }
  public static void AddDescription(FlatBufferBuilder builder, StringOffset DescriptionOffset) { builder.AddOffset(11, DescriptionOffset.Value, 0); }
  public static void AddAdjust(FlatBufferBuilder builder, int Adjust) { builder.AddInt(12, Adjust, 0); }
  public static Offset<EquipSuitTable> EndEquipSuitTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<EquipSuitTable>(o);
  }
  public static void FinishEquipSuitTableBuffer(FlatBufferBuilder builder, Offset<EquipSuitTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

