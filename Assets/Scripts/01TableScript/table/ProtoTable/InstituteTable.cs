// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class InstituteTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = 696711107,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static InstituteTable GetRootAsInstituteTable(ByteBuffer _bb) { return GetRootAsInstituteTable(_bb, new InstituteTable()); }
  public static InstituteTable GetRootAsInstituteTable(ByteBuffer _bb, InstituteTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public InstituteTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int JobID { get { int o = __p.__offset(6); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int DifficultyType { get { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Type { get { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string Title { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetTitleBytes() { return __p.__vector_as_arraysegment(12); }
  public int LevelLimit { get { int o = __p.__offset(14); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int MissionID { get { int o = __p.__offset(16); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int DungeonID { get { int o = __p.__offset(18); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int BuffIDArray(int j) { int o = __p.__offset(20); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int BuffIDLength { get { int o = __p.__offset(20); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetBuffIDBytes() { return __p.__vector_as_arraysegment(20); }
 private FlatBufferArray<int> BuffIDValue;
 public FlatBufferArray<int>  BuffID
 {
  get{
  if (BuffIDValue == null)
  {
    BuffIDValue = new FlatBufferArray<int>(this.BuffIDArray, this.BuffIDLength);
  }
  return BuffIDValue;}
 }
  public int EnemyBuffIDArray(int j) { int o = __p.__offset(22); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int EnemyBuffIDLength { get { int o = __p.__offset(22); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetEnemyBuffIDBytes() { return __p.__vector_as_arraysegment(22); }
 private FlatBufferArray<int> EnemyBuffIDValue;
 public FlatBufferArray<int>  EnemyBuffID
 {
  get{
  if (EnemyBuffIDValue == null)
  {
    EnemyBuffIDValue = new FlatBufferArray<int>(this.EnemyBuffIDArray, this.EnemyBuffIDLength);
  }
  return EnemyBuffIDValue;}
 }
  public int EquipmentIDArray(int j) { int o = __p.__offset(24); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int EquipmentIDLength { get { int o = __p.__offset(24); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetEquipmentIDBytes() { return __p.__vector_as_arraysegment(24); }
 private FlatBufferArray<int> EquipmentIDValue;
 public FlatBufferArray<int>  EquipmentID
 {
  get{
  if (EquipmentIDValue == null)
  {
    EquipmentIDValue = new FlatBufferArray<int>(this.EquipmentIDArray, this.EquipmentIDLength);
  }
  return EquipmentIDValue;}
 }
  public string Resource { get { int o = __p.__offset(26); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetResourceBytes() { return __p.__vector_as_arraysegment(26); }
  public string Tip { get { int o = __p.__offset(28); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetTipBytes() { return __p.__vector_as_arraysegment(28); }

  public static Offset<InstituteTable> CreateInstituteTable(FlatBufferBuilder builder,
      int ID = 0,
      int JobID = 0,
      int DifficultyType = 0,
      int Type = 0,
      StringOffset TitleOffset = default(StringOffset),
      int LevelLimit = 0,
      int MissionID = 0,
      int DungeonID = 0,
      VectorOffset BuffIDOffset = default(VectorOffset),
      VectorOffset EnemyBuffIDOffset = default(VectorOffset),
      VectorOffset EquipmentIDOffset = default(VectorOffset),
      StringOffset ResourceOffset = default(StringOffset),
      StringOffset TipOffset = default(StringOffset)) {
    builder.StartObject(13);
    InstituteTable.AddTip(builder, TipOffset);
    InstituteTable.AddResource(builder, ResourceOffset);
    InstituteTable.AddEquipmentID(builder, EquipmentIDOffset);
    InstituteTable.AddEnemyBuffID(builder, EnemyBuffIDOffset);
    InstituteTable.AddBuffID(builder, BuffIDOffset);
    InstituteTable.AddDungeonID(builder, DungeonID);
    InstituteTable.AddMissionID(builder, MissionID);
    InstituteTable.AddLevelLimit(builder, LevelLimit);
    InstituteTable.AddTitle(builder, TitleOffset);
    InstituteTable.AddType(builder, Type);
    InstituteTable.AddDifficultyType(builder, DifficultyType);
    InstituteTable.AddJobID(builder, JobID);
    InstituteTable.AddID(builder, ID);
    return InstituteTable.EndInstituteTable(builder);
  }

  public static void StartInstituteTable(FlatBufferBuilder builder) { builder.StartObject(13); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddJobID(FlatBufferBuilder builder, int JobID) { builder.AddInt(1, JobID, 0); }
  public static void AddDifficultyType(FlatBufferBuilder builder, int DifficultyType) { builder.AddInt(2, DifficultyType, 0); }
  public static void AddType(FlatBufferBuilder builder, int Type) { builder.AddInt(3, Type, 0); }
  public static void AddTitle(FlatBufferBuilder builder, StringOffset TitleOffset) { builder.AddOffset(4, TitleOffset.Value, 0); }
  public static void AddLevelLimit(FlatBufferBuilder builder, int LevelLimit) { builder.AddInt(5, LevelLimit, 0); }
  public static void AddMissionID(FlatBufferBuilder builder, int MissionID) { builder.AddInt(6, MissionID, 0); }
  public static void AddDungeonID(FlatBufferBuilder builder, int DungeonID) { builder.AddInt(7, DungeonID, 0); }
  public static void AddBuffID(FlatBufferBuilder builder, VectorOffset BuffIDOffset) { builder.AddOffset(8, BuffIDOffset.Value, 0); }
  public static VectorOffset CreateBuffIDVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartBuffIDVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddEnemyBuffID(FlatBufferBuilder builder, VectorOffset EnemyBuffIDOffset) { builder.AddOffset(9, EnemyBuffIDOffset.Value, 0); }
  public static VectorOffset CreateEnemyBuffIDVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartEnemyBuffIDVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddEquipmentID(FlatBufferBuilder builder, VectorOffset EquipmentIDOffset) { builder.AddOffset(10, EquipmentIDOffset.Value, 0); }
  public static VectorOffset CreateEquipmentIDVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartEquipmentIDVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddResource(FlatBufferBuilder builder, StringOffset ResourceOffset) { builder.AddOffset(11, ResourceOffset.Value, 0); }
  public static void AddTip(FlatBufferBuilder builder, StringOffset TipOffset) { builder.AddOffset(12, TipOffset.Value, 0); }
  public static Offset<InstituteTable> EndInstituteTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<InstituteTable>(o);
  }
  public static void FinishInstituteTableBuffer(FlatBufferBuilder builder, Offset<InstituteTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

