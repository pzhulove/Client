// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class DefaultAdminServerTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = -1051300737,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static DefaultAdminServerTable GetRootAsDefaultAdminServerTable(ByteBuffer _bb) { return GetRootAsDefaultAdminServerTable(_bb, new DefaultAdminServerTable()); }
  public static DefaultAdminServerTable GetRootAsDefaultAdminServerTable(ByteBuffer _bb, DefaultAdminServerTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public DefaultAdminServerTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string ServerID { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetServerIDBytes() { return __p.__vector_as_arraysegment(6); }
  public string ServerIP { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetServerIPBytes() { return __p.__vector_as_arraysegment(8); }
  public string ServerName { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetServerNameBytes() { return __p.__vector_as_arraysegment(10); }
  public int ServerPort { get { int o = __p.__offset(12); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ServerStaus { get { int o = __p.__offset(14); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }

  public static Offset<DefaultAdminServerTable> CreateDefaultAdminServerTable(FlatBufferBuilder builder,
      int ID = 0,
      StringOffset ServerIDOffset = default(StringOffset),
      StringOffset ServerIPOffset = default(StringOffset),
      StringOffset ServerNameOffset = default(StringOffset),
      int ServerPort = 0,
      int ServerStaus = 0) {
    builder.StartObject(6);
    DefaultAdminServerTable.AddServerStaus(builder, ServerStaus);
    DefaultAdminServerTable.AddServerPort(builder, ServerPort);
    DefaultAdminServerTable.AddServerName(builder, ServerNameOffset);
    DefaultAdminServerTable.AddServerIP(builder, ServerIPOffset);
    DefaultAdminServerTable.AddServerID(builder, ServerIDOffset);
    DefaultAdminServerTable.AddID(builder, ID);
    return DefaultAdminServerTable.EndDefaultAdminServerTable(builder);
  }

  public static void StartDefaultAdminServerTable(FlatBufferBuilder builder) { builder.StartObject(6); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddServerID(FlatBufferBuilder builder, StringOffset ServerIDOffset) { builder.AddOffset(1, ServerIDOffset.Value, 0); }
  public static void AddServerIP(FlatBufferBuilder builder, StringOffset ServerIPOffset) { builder.AddOffset(2, ServerIPOffset.Value, 0); }
  public static void AddServerName(FlatBufferBuilder builder, StringOffset ServerNameOffset) { builder.AddOffset(3, ServerNameOffset.Value, 0); }
  public static void AddServerPort(FlatBufferBuilder builder, int ServerPort) { builder.AddInt(4, ServerPort, 0); }
  public static void AddServerStaus(FlatBufferBuilder builder, int ServerStaus) { builder.AddInt(5, ServerStaus, 0); }
  public static Offset<DefaultAdminServerTable> EndDefaultAdminServerTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<DefaultAdminServerTable>(o);
  }
  public static void FinishDefaultAdminServerTableBuffer(FlatBufferBuilder builder, Offset<DefaultAdminServerTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

