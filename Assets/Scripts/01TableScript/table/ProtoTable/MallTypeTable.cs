// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class MallTypeTable : IFlatbufferObject
{
public enum eFuncType : int
{
 FT_NONE = 0,
 FT_GIFT = 9,
};

public enum eMoneyType : int
{
 MT_NONE = 0,
 MT_TICKET = 1,
 MT_BIND_TICKET = 2,
 MT_MALL_POINT = 3,
};

public enum eMallType : int
{
 MallType_None = 0,
 SN_HOT = 1,
 SN_EQUIP = 2,
 SN_COST = 3,
 SN_FASHION = 4,
 SN_GOLD = 5,
 SN_GIFT = 6,
 SN_ACTIVITY_GIFT = 7,
 SN_FASHION_GIFT = 8,
 SN_NEW_SERVER_GIFT = 9,
 SN_RECOMMEND = 10,
 SN_MATERIAL = 11,
 SN_NATIONAL_DAY = 14,
 SN_ITEM = 15,
 SN_FUNCTION = 16,
 SN_EXCHANGE = 17,
 SN_MEDICINE = 18,
 SN_MALL_POINT_ITEM = 19,
 SN_ASCEND_GIFT = 20,
 SN_GRATITUDE_GIFT = 21,
 SN_GRATITUDE_LUCKYBAG = 22,
 SN_STARSTONE_GIFT = 23,
 SN_VOUCHER = 24,
};

public enum eMallSubType : int
{
 MST_NONE = 0,
 MST_HEAD = 1,
 MST_UPWEAR = 2,
 MST_CHEST = 3,
 MST_DOWNWEAR = 4,
 MST_BELT = 5,
 MST_ALL = 6,
 MST_WEAPON = 7,
};

public enum eCrypt : int
{
 code = -1598275002,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static MallTypeTable GetRootAsMallTypeTable(ByteBuffer _bb) { return GetRootAsMallTypeTable(_bb, new MallTypeTable()); }
  public static MallTypeTable GetRootAsMallTypeTable(ByteBuffer _bb, MallTypeTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public MallTypeTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string MainTypeName { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetMainTypeNameBytes() { return __p.__vector_as_arraysegment(6); }
  public ProtoTable.MallTypeTable.eFuncType FuncType { get { int o = __p.__offset(8); return o != 0 ? (ProtoTable.MallTypeTable.eFuncType)__p.bb.GetInt(o + __p.bb_pos) : ProtoTable.MallTypeTable.eFuncType.FT_NONE; } }
  public ProtoTable.MallTypeTable.eMoneyType MoneyType { get { int o = __p.__offset(10); return o != 0 ? (ProtoTable.MallTypeTable.eMoneyType)__p.bb.GetInt(o + __p.bb_pos) : ProtoTable.MallTypeTable.eMoneyType.MT_NONE; } }
  public int MoneyID { get { int o = __p.__offset(12); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public ProtoTable.MallTypeTable.eMallType MallType { get { int o = __p.__offset(14); return o != 0 ? (ProtoTable.MallTypeTable.eMallType)__p.bb.GetInt(o + __p.bb_pos) : ProtoTable.MallTypeTable.eMallType.MallType_None; } }
  public ProtoTable.MallTypeTable.eMallSubType MallSubTypeArray(int j) { int o = __p.__offset(16); return o != 0 ? (ProtoTable.MallTypeTable.eMallSubType)__p.bb.GetInt(__p.__vector(o) + j * 4) : (ProtoTable.MallTypeTable.eMallSubType)0; }
  public int MallSubTypeLength { get { int o = __p.__offset(16); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetMallSubTypeBytes() { return __p.__vector_as_arraysegment(16); }
 private FlatBufferArray<ProtoTable.MallTypeTable.eMallSubType> MallSubTypeValue;
 public FlatBufferArray<ProtoTable.MallTypeTable.eMallSubType>  MallSubType
 {
  get{
  if (MallSubTypeValue == null)
  {
    MallSubTypeValue = new FlatBufferArray<ProtoTable.MallTypeTable.eMallSubType>(this.MallSubTypeArray, this.MallSubTypeLength);
  }
  return MallSubTypeValue;}
 }
  public int ScrollViewRootIndex { get { int o = __p.__offset(18); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ClassifyJob { get { int o = __p.__offset(20); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Use { get { int o = __p.__offset(22); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int IsForActivity { get { int o = __p.__offset(24); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }

  public static Offset<MallTypeTable> CreateMallTypeTable(FlatBufferBuilder builder,
      int ID = 0,
      StringOffset MainTypeNameOffset = default(StringOffset),
      ProtoTable.MallTypeTable.eFuncType FuncType = ProtoTable.MallTypeTable.eFuncType.FT_NONE,
      ProtoTable.MallTypeTable.eMoneyType MoneyType = ProtoTable.MallTypeTable.eMoneyType.MT_NONE,
      int MoneyID = 0,
      ProtoTable.MallTypeTable.eMallType MallType = ProtoTable.MallTypeTable.eMallType.MallType_None,
      VectorOffset MallSubTypeOffset = default(VectorOffset),
      int ScrollViewRootIndex = 0,
      int ClassifyJob = 0,
      int Use = 0,
      int IsForActivity = 0) {
    builder.StartObject(11);
    MallTypeTable.AddIsForActivity(builder, IsForActivity);
    MallTypeTable.AddUse(builder, Use);
    MallTypeTable.AddClassifyJob(builder, ClassifyJob);
    MallTypeTable.AddScrollViewRootIndex(builder, ScrollViewRootIndex);
    MallTypeTable.AddMallSubType(builder, MallSubTypeOffset);
    MallTypeTable.AddMallType(builder, MallType);
    MallTypeTable.AddMoneyID(builder, MoneyID);
    MallTypeTable.AddMoneyType(builder, MoneyType);
    MallTypeTable.AddFuncType(builder, FuncType);
    MallTypeTable.AddMainTypeName(builder, MainTypeNameOffset);
    MallTypeTable.AddID(builder, ID);
    return MallTypeTable.EndMallTypeTable(builder);
  }

  public static void StartMallTypeTable(FlatBufferBuilder builder) { builder.StartObject(11); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddMainTypeName(FlatBufferBuilder builder, StringOffset MainTypeNameOffset) { builder.AddOffset(1, MainTypeNameOffset.Value, 0); }
  public static void AddFuncType(FlatBufferBuilder builder, ProtoTable.MallTypeTable.eFuncType FuncType) { builder.AddInt(2, (int)FuncType, 0); }
  public static void AddMoneyType(FlatBufferBuilder builder, ProtoTable.MallTypeTable.eMoneyType MoneyType) { builder.AddInt(3, (int)MoneyType, 0); }
  public static void AddMoneyID(FlatBufferBuilder builder, int MoneyID) { builder.AddInt(4, MoneyID, 0); }
  public static void AddMallType(FlatBufferBuilder builder, ProtoTable.MallTypeTable.eMallType MallType) { builder.AddInt(5, (int)MallType, 0); }
  public static void AddMallSubType(FlatBufferBuilder builder, VectorOffset MallSubTypeOffset) { builder.AddOffset(6, MallSubTypeOffset.Value, 0); }
  public static VectorOffset CreateMallSubTypeVector(FlatBufferBuilder builder, ProtoTable.MallTypeTable.eMallSubType[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt((int)data[i]); return builder.EndVector(); }
  public static void StartMallSubTypeVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddScrollViewRootIndex(FlatBufferBuilder builder, int ScrollViewRootIndex) { builder.AddInt(7, ScrollViewRootIndex, 0); }
  public static void AddClassifyJob(FlatBufferBuilder builder, int ClassifyJob) { builder.AddInt(8, ClassifyJob, 0); }
  public static void AddUse(FlatBufferBuilder builder, int Use) { builder.AddInt(9, Use, 0); }
  public static void AddIsForActivity(FlatBufferBuilder builder, int IsForActivity) { builder.AddInt(10, IsForActivity, 0); }
  public static Offset<MallTypeTable> EndMallTypeTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<MallTypeTable>(o);
  }
  public static void FinishMallTypeTableBuffer(FlatBufferBuilder builder, Offset<MallTypeTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

