// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class AntiAddictTimeTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = -2080035546,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static AntiAddictTimeTable GetRootAsAntiAddictTimeTable(ByteBuffer _bb) { return GetRootAsAntiAddictTimeTable(_bb, new AntiAddictTimeTable()); }
  public static AntiAddictTimeTable GetRootAsAntiAddictTimeTable(ByteBuffer _bb, AntiAddictTimeTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public AntiAddictTimeTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int IsHoliday { get { int o = __p.__offset(6); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Age { get { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int GameTime { get { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }

  public static Offset<AntiAddictTimeTable> CreateAntiAddictTimeTable(FlatBufferBuilder builder,
      int ID = 0,
      int IsHoliday = 0,
      int Age = 0,
      int GameTime = 0) {
    builder.StartObject(4);
    AntiAddictTimeTable.AddGameTime(builder, GameTime);
    AntiAddictTimeTable.AddAge(builder, Age);
    AntiAddictTimeTable.AddIsHoliday(builder, IsHoliday);
    AntiAddictTimeTable.AddID(builder, ID);
    return AntiAddictTimeTable.EndAntiAddictTimeTable(builder);
  }

  public static void StartAntiAddictTimeTable(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddIsHoliday(FlatBufferBuilder builder, int IsHoliday) { builder.AddInt(1, IsHoliday, 0); }
  public static void AddAge(FlatBufferBuilder builder, int Age) { builder.AddInt(2, Age, 0); }
  public static void AddGameTime(FlatBufferBuilder builder, int GameTime) { builder.AddInt(3, GameTime, 0); }
  public static Offset<AntiAddictTimeTable> EndAntiAddictTimeTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<AntiAddictTimeTable>(o);
  }
  public static void FinishAntiAddictTimeTableBuffer(FlatBufferBuilder builder, Offset<AntiAddictTimeTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

