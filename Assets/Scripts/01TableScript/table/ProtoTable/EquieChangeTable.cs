// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class EquieChangeTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = -2015942963,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static EquieChangeTable GetRootAsEquieChangeTable(ByteBuffer _bb) { return GetRootAsEquieChangeTable(_bb, new EquieChangeTable()); }
  public static EquieChangeTable GetRootAsEquieChangeTable(ByteBuffer _bb, EquieChangeTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public EquieChangeTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
  public int JobIDArray(int j) { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int JobIDLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetJobIDBytes() { return __p.__vector_as_arraysegment(8); }
 private FlatBufferArray<int> JobIDValue;
 public FlatBufferArray<int>  JobID
 {
  get{
  if (JobIDValue == null)
  {
    JobIDValue = new FlatBufferArray<int>(this.JobIDArray, this.JobIDLength);
  }
  return JobIDValue;}
 }
  public int ConvertType { get { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int UseEquipSuitArray(int j) { int o = __p.__offset(12); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int UseEquipSuitLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetUseEquipSuitBytes() { return __p.__vector_as_arraysegment(12); }
 private FlatBufferArray<int> UseEquipSuitValue;
 public FlatBufferArray<int>  UseEquipSuit
 {
  get{
  if (UseEquipSuitValue == null)
  {
    UseEquipSuitValue = new FlatBufferArray<int>(this.UseEquipSuitArray, this.UseEquipSuitLength);
  }
  return UseEquipSuitValue;}
 }
  public int LevelArray(int j) { int o = __p.__offset(14); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int LevelLength { get { int o = __p.__offset(14); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetLevelBytes() { return __p.__vector_as_arraysegment(14); }
 private FlatBufferArray<int> LevelValue;
 public FlatBufferArray<int>  Level
 {
  get{
  if (LevelValue == null)
  {
    LevelValue = new FlatBufferArray<int>(this.LevelArray, this.LevelLength);
  }
  return LevelValue;}
 }

  public static Offset<EquieChangeTable> CreateEquieChangeTable(FlatBufferBuilder builder,
      int ID = 0,
      StringOffset NameOffset = default(StringOffset),
      VectorOffset JobIDOffset = default(VectorOffset),
      int ConvertType = 0,
      VectorOffset UseEquipSuitOffset = default(VectorOffset),
      VectorOffset LevelOffset = default(VectorOffset)) {
    builder.StartObject(6);
    EquieChangeTable.AddLevel(builder, LevelOffset);
    EquieChangeTable.AddUseEquipSuit(builder, UseEquipSuitOffset);
    EquieChangeTable.AddConvertType(builder, ConvertType);
    EquieChangeTable.AddJobID(builder, JobIDOffset);
    EquieChangeTable.AddName(builder, NameOffset);
    EquieChangeTable.AddID(builder, ID);
    return EquieChangeTable.EndEquieChangeTable(builder);
  }

  public static void StartEquieChangeTable(FlatBufferBuilder builder) { builder.StartObject(6); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset NameOffset) { builder.AddOffset(1, NameOffset.Value, 0); }
  public static void AddJobID(FlatBufferBuilder builder, VectorOffset JobIDOffset) { builder.AddOffset(2, JobIDOffset.Value, 0); }
  public static VectorOffset CreateJobIDVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartJobIDVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddConvertType(FlatBufferBuilder builder, int ConvertType) { builder.AddInt(3, ConvertType, 0); }
  public static void AddUseEquipSuit(FlatBufferBuilder builder, VectorOffset UseEquipSuitOffset) { builder.AddOffset(4, UseEquipSuitOffset.Value, 0); }
  public static VectorOffset CreateUseEquipSuitVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartUseEquipSuitVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddLevel(FlatBufferBuilder builder, VectorOffset LevelOffset) { builder.AddOffset(5, LevelOffset.Value, 0); }
  public static VectorOffset CreateLevelVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartLevelVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<EquieChangeTable> EndEquieChangeTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<EquieChangeTable>(o);
  }
  public static void FinishEquieChangeTableBuffer(FlatBufferBuilder builder, Offset<EquieChangeTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

