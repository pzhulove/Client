// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class BuffDrugConfigInfoTable : IFlatbufferObject
{
public enum eValueType : int
{
 Value = 0,
 Rate100 = 1,
 Rate1000 = 2,
};

public enum eCrypt : int
{
 code = 1618238745,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static BuffDrugConfigInfoTable GetRootAsBuffDrugConfigInfoTable(ByteBuffer _bb) { return GetRootAsBuffDrugConfigInfoTable(_bb, new BuffDrugConfigInfoTable()); }
  public static BuffDrugConfigInfoTable GetRootAsBuffDrugConfigInfoTable(ByteBuffer _bb, BuffDrugConfigInfoTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public BuffDrugConfigInfoTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string Filed { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetFiledBytes() { return __p.__vector_as_arraysegment(6); }
  public ProtoTable.BuffDrugConfigInfoTable.eValueType ValueType { get { int o = __p.__offset(8); return o != 0 ? (ProtoTable.BuffDrugConfigInfoTable.eValueType)__p.bb.GetInt(o + __p.bb_pos) : ProtoTable.BuffDrugConfigInfoTable.eValueType.Value; } }

  public static Offset<BuffDrugConfigInfoTable> CreateBuffDrugConfigInfoTable(FlatBufferBuilder builder,
      int ID = 0,
      StringOffset FiledOffset = default(StringOffset),
      ProtoTable.BuffDrugConfigInfoTable.eValueType ValueType = ProtoTable.BuffDrugConfigInfoTable.eValueType.Value) {
    builder.StartObject(3);
    BuffDrugConfigInfoTable.AddValueType(builder, ValueType);
    BuffDrugConfigInfoTable.AddFiled(builder, FiledOffset);
    BuffDrugConfigInfoTable.AddID(builder, ID);
    return BuffDrugConfigInfoTable.EndBuffDrugConfigInfoTable(builder);
  }

  public static void StartBuffDrugConfigInfoTable(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddFiled(FlatBufferBuilder builder, StringOffset FiledOffset) { builder.AddOffset(1, FiledOffset.Value, 0); }
  public static void AddValueType(FlatBufferBuilder builder, ProtoTable.BuffDrugConfigInfoTable.eValueType ValueType) { builder.AddInt(2, (int)ValueType, 0); }
  public static Offset<BuffDrugConfigInfoTable> EndBuffDrugConfigInfoTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<BuffDrugConfigInfoTable>(o);
  }
  public static void FinishBuffDrugConfigInfoTableBuffer(FlatBufferBuilder builder, Offset<BuffDrugConfigInfoTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

