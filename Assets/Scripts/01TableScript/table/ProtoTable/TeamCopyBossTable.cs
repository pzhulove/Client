// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class TeamCopyBossTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = -1989788737,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static TeamCopyBossTable GetRootAsTeamCopyBossTable(ByteBuffer _bb) { return GetRootAsTeamCopyBossTable(_bb, new TeamCopyBossTable()); }
  public static TeamCopyBossTable GetRootAsTeamCopyBossTable(ByteBuffer _bb, TeamCopyBossTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public TeamCopyBossTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int teamCopyID { get { int o = __p.__offset(6); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int teamGrade { get { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int stage { get { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int appearField { get { int o = __p.__offset(12); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int closeField { get { int o = __p.__offset(14); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }

  public static Offset<TeamCopyBossTable> CreateTeamCopyBossTable(FlatBufferBuilder builder,
      int ID = 0,
      int teamCopyID = 0,
      int teamGrade = 0,
      int stage = 0,
      int appearField = 0,
      int closeField = 0) {
    builder.StartObject(6);
    TeamCopyBossTable.AddCloseField(builder, closeField);
    TeamCopyBossTable.AddAppearField(builder, appearField);
    TeamCopyBossTable.AddStage(builder, stage);
    TeamCopyBossTable.AddTeamGrade(builder, teamGrade);
    TeamCopyBossTable.AddTeamCopyID(builder, teamCopyID);
    TeamCopyBossTable.AddID(builder, ID);
    return TeamCopyBossTable.EndTeamCopyBossTable(builder);
  }

  public static void StartTeamCopyBossTable(FlatBufferBuilder builder) { builder.StartObject(6); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddTeamCopyID(FlatBufferBuilder builder, int teamCopyID) { builder.AddInt(1, teamCopyID, 0); }
  public static void AddTeamGrade(FlatBufferBuilder builder, int teamGrade) { builder.AddInt(2, teamGrade, 0); }
  public static void AddStage(FlatBufferBuilder builder, int stage) { builder.AddInt(3, stage, 0); }
  public static void AddAppearField(FlatBufferBuilder builder, int appearField) { builder.AddInt(4, appearField, 0); }
  public static void AddCloseField(FlatBufferBuilder builder, int closeField) { builder.AddInt(5, closeField, 0); }
  public static Offset<TeamCopyBossTable> EndTeamCopyBossTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<TeamCopyBossTable>(o);
  }
  public static void FinishTeamCopyBossTableBuffer(FlatBufferBuilder builder, Offset<TeamCopyBossTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

