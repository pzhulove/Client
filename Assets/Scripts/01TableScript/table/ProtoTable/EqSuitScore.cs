// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class EqSuitScore : IFlatbufferObject
{
public enum eCrypt : int
{
 code = 2140979931,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static EqSuitScore GetRootAsEqSuitScore(ByteBuffer _bb) { return GetRootAsEqSuitScore(_bb, new EqSuitScore()); }
  public static EqSuitScore GetRootAsEqSuitScore(ByteBuffer _bb, EqSuitScore obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public EqSuitScore __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Type { get { int o = __p.__offset(6); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int SuitNum { get { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Level { get { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int EquipsAttrID { get { int o = __p.__offset(12); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }

  public static Offset<EqSuitScore> CreateEqSuitScore(FlatBufferBuilder builder,
      int ID = 0,
      int Type = 0,
      int SuitNum = 0,
      int Level = 0,
      int EquipsAttrID = 0) {
    builder.StartObject(5);
    EqSuitScore.AddEquipsAttrID(builder, EquipsAttrID);
    EqSuitScore.AddLevel(builder, Level);
    EqSuitScore.AddSuitNum(builder, SuitNum);
    EqSuitScore.AddType(builder, Type);
    EqSuitScore.AddID(builder, ID);
    return EqSuitScore.EndEqSuitScore(builder);
  }

  public static void StartEqSuitScore(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddType(FlatBufferBuilder builder, int Type) { builder.AddInt(1, Type, 0); }
  public static void AddSuitNum(FlatBufferBuilder builder, int SuitNum) { builder.AddInt(2, SuitNum, 0); }
  public static void AddLevel(FlatBufferBuilder builder, int Level) { builder.AddInt(3, Level, 0); }
  public static void AddEquipsAttrID(FlatBufferBuilder builder, int EquipsAttrID) { builder.AddInt(4, EquipsAttrID, 0); }
  public static Offset<EqSuitScore> EndEqSuitScore(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<EqSuitScore>(o);
  }
  public static void FinishEqSuitScoreBuffer(FlatBufferBuilder builder, Offset<EqSuitScore> offset) { builder.Finish(offset.Value); }
};


}


#endif

