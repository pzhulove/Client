// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class AntiAddictHolidayTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = -491144707,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static AntiAddictHolidayTable GetRootAsAntiAddictHolidayTable(ByteBuffer _bb) { return GetRootAsAntiAddictHolidayTable(_bb, new AntiAddictHolidayTable()); }
  public static AntiAddictHolidayTable GetRootAsAntiAddictHolidayTable(ByteBuffer _bb, AntiAddictHolidayTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public AntiAddictHolidayTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int HolidayDate { get { int o = __p.__offset(6); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }

  public static Offset<AntiAddictHolidayTable> CreateAntiAddictHolidayTable(FlatBufferBuilder builder,
      int ID = 0,
      int HolidayDate = 0) {
    builder.StartObject(2);
    AntiAddictHolidayTable.AddHolidayDate(builder, HolidayDate);
    AntiAddictHolidayTable.AddID(builder, ID);
    return AntiAddictHolidayTable.EndAntiAddictHolidayTable(builder);
  }

  public static void StartAntiAddictHolidayTable(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddHolidayDate(FlatBufferBuilder builder, int HolidayDate) { builder.AddInt(1, HolidayDate, 0); }
  public static Offset<AntiAddictHolidayTable> EndAntiAddictHolidayTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<AntiAddictHolidayTable>(o);
  }
  public static void FinishAntiAddictHolidayTableBuffer(FlatBufferBuilder builder, Offset<AntiAddictHolidayTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

