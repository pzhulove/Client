// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class GiftPackTable : IFlatbufferObject
{
public enum eFilterType : int
{
 None = 0,
 Job = 1,
 Random = 2,
 Custom = 3,
 CustomWithJob = 4,
};

public enum eShowAvatarModelType : int
{
 None = 0,
 Single = 1,
 Complete = 2,
 Enumeration = 3,
 Combination = 4,
 Matching = 5,
 CompleteEnumeration = 6,
};

public enum eCrypt : int
{
 code = -783545605,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static GiftPackTable GetRootAsGiftPackTable(ByteBuffer _bb) { return GetRootAsGiftPackTable(_bb, new GiftPackTable()); }
  public static GiftPackTable GetRootAsGiftPackTable(ByteBuffer _bb, GiftPackTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public GiftPackTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public ProtoTable.GiftPackTable.eFilterType FilterType { get { int o = __p.__offset(6); return o != 0 ? (ProtoTable.GiftPackTable.eFilterType)__p.bb.GetInt(o + __p.bb_pos) : ProtoTable.GiftPackTable.eFilterType.None; } }
  public int FilterCount { get { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int UIType { get { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public ProtoTable.GiftPackTable.eShowAvatarModelType ShowAvatarModelType { get { int o = __p.__offset(12); return o != 0 ? (ProtoTable.GiftPackTable.eShowAvatarModelType)__p.bb.GetInt(o + __p.bb_pos) : ProtoTable.GiftPackTable.eShowAvatarModelType.None; } }

  public static Offset<GiftPackTable> CreateGiftPackTable(FlatBufferBuilder builder,
      int ID = 0,
      ProtoTable.GiftPackTable.eFilterType FilterType = ProtoTable.GiftPackTable.eFilterType.None,
      int FilterCount = 0,
      int UIType = 0,
      ProtoTable.GiftPackTable.eShowAvatarModelType ShowAvatarModelType = ProtoTable.GiftPackTable.eShowAvatarModelType.None) {
    builder.StartObject(5);
    GiftPackTable.AddShowAvatarModelType(builder, ShowAvatarModelType);
    GiftPackTable.AddUIType(builder, UIType);
    GiftPackTable.AddFilterCount(builder, FilterCount);
    GiftPackTable.AddFilterType(builder, FilterType);
    GiftPackTable.AddID(builder, ID);
    return GiftPackTable.EndGiftPackTable(builder);
  }

  public static void StartGiftPackTable(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddFilterType(FlatBufferBuilder builder, ProtoTable.GiftPackTable.eFilterType FilterType) { builder.AddInt(1, (int)FilterType, 0); }
  public static void AddFilterCount(FlatBufferBuilder builder, int FilterCount) { builder.AddInt(2, FilterCount, 0); }
  public static void AddUIType(FlatBufferBuilder builder, int UIType) { builder.AddInt(3, UIType, 0); }
  public static void AddShowAvatarModelType(FlatBufferBuilder builder, ProtoTable.GiftPackTable.eShowAvatarModelType ShowAvatarModelType) { builder.AddInt(4, (int)ShowAvatarModelType, 0); }
  public static Offset<GiftPackTable> EndGiftPackTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<GiftPackTable>(o);
  }
  public static void FinishGiftPackTableBuffer(FlatBufferBuilder builder, Offset<GiftPackTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

