// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class BeadConvertCostTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = 494545148,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static BeadConvertCostTable GetRootAsBeadConvertCostTable(ByteBuffer _bb) { return GetRootAsBeadConvertCostTable(_bb, new BeadConvertCostTable()); }
  public static BeadConvertCostTable GetRootAsBeadConvertCostTable(ByteBuffer _bb, BeadConvertCostTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public BeadConvertCostTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Colour { get { int o = __p.__offset(6); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int MoneyCostId { get { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int MoneyCostNum { get { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int BeadCost { get { int o = __p.__offset(12); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int BeadCostNum { get { int o = __p.__offset(14); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int DropId { get { int o = __p.__offset(16); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int BindDropId { get { int o = __p.__offset(18); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ProduceBeadPreview { get { int o = __p.__offset(20); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }

  public static Offset<BeadConvertCostTable> CreateBeadConvertCostTable(FlatBufferBuilder builder,
      int ID = 0,
      int Colour = 0,
      int MoneyCostId = 0,
      int MoneyCostNum = 0,
      int BeadCost = 0,
      int BeadCostNum = 0,
      int DropId = 0,
      int BindDropId = 0,
      int ProduceBeadPreview = 0) {
    builder.StartObject(9);
    BeadConvertCostTable.AddProduceBeadPreview(builder, ProduceBeadPreview);
    BeadConvertCostTable.AddBindDropId(builder, BindDropId);
    BeadConvertCostTable.AddDropId(builder, DropId);
    BeadConvertCostTable.AddBeadCostNum(builder, BeadCostNum);
    BeadConvertCostTable.AddBeadCost(builder, BeadCost);
    BeadConvertCostTable.AddMoneyCostNum(builder, MoneyCostNum);
    BeadConvertCostTable.AddMoneyCostId(builder, MoneyCostId);
    BeadConvertCostTable.AddColour(builder, Colour);
    BeadConvertCostTable.AddID(builder, ID);
    return BeadConvertCostTable.EndBeadConvertCostTable(builder);
  }

  public static void StartBeadConvertCostTable(FlatBufferBuilder builder) { builder.StartObject(9); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddColour(FlatBufferBuilder builder, int Colour) { builder.AddInt(1, Colour, 0); }
  public static void AddMoneyCostId(FlatBufferBuilder builder, int MoneyCostId) { builder.AddInt(2, MoneyCostId, 0); }
  public static void AddMoneyCostNum(FlatBufferBuilder builder, int MoneyCostNum) { builder.AddInt(3, MoneyCostNum, 0); }
  public static void AddBeadCost(FlatBufferBuilder builder, int BeadCost) { builder.AddInt(4, BeadCost, 0); }
  public static void AddBeadCostNum(FlatBufferBuilder builder, int BeadCostNum) { builder.AddInt(5, BeadCostNum, 0); }
  public static void AddDropId(FlatBufferBuilder builder, int DropId) { builder.AddInt(6, DropId, 0); }
  public static void AddBindDropId(FlatBufferBuilder builder, int BindDropId) { builder.AddInt(7, BindDropId, 0); }
  public static void AddProduceBeadPreview(FlatBufferBuilder builder, int ProduceBeadPreview) { builder.AddInt(8, ProduceBeadPreview, 0); }
  public static Offset<BeadConvertCostTable> EndBeadConvertCostTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<BeadConvertCostTable>(o);
  }
  public static void FinishBeadConvertCostTableBuffer(FlatBufferBuilder builder, Offset<BeadConvertCostTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

