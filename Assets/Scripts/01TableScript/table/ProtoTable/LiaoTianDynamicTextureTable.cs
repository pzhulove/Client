// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class LiaoTianDynamicTextureTable : IFlatbufferObject
{
public enum eType : int
{
 Image = 0,
 FrameSprite = 1,
};

public enum eCrypt : int
{
 code = -437325895,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static LiaoTianDynamicTextureTable GetRootAsLiaoTianDynamicTextureTable(ByteBuffer _bb) { return GetRootAsLiaoTianDynamicTextureTable(_bb, new LiaoTianDynamicTextureTable()); }
  public static LiaoTianDynamicTextureTable GetRootAsLiaoTianDynamicTextureTable(ByteBuffer _bb, LiaoTianDynamicTextureTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public LiaoTianDynamicTextureTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string Icon { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetIconBytes() { return __p.__vector_as_arraysegment(6); }
  public int Width { get { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Height { get { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Size { get { int o = __p.__offset(12); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public ProtoTable.LiaoTianDynamicTextureTable.eType Type { get { int o = __p.__offset(14); return o != 0 ? (ProtoTable.LiaoTianDynamicTextureTable.eType)__p.bb.GetInt(o + __p.bb_pos) : ProtoTable.LiaoTianDynamicTextureTable.eType.Image; } }
  public string ParamArray(int j) { int o = __p.__offset(16); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : FlatBufferConstants.DefaultString; }
  public int ParamLength { get { int o = __p.__offset(16); return o != 0 ? __p.__vector_len(o) : 0; } }
 private FlatBufferArray<string> ParamValue;
 public FlatBufferArray<string>  Param
 {
  get{
  if (ParamValue == null)
  {
    ParamValue = new FlatBufferArray<string>(this.ParamArray, this.ParamLength);
  }
  return ParamValue;}
 }

  public static Offset<LiaoTianDynamicTextureTable> CreateLiaoTianDynamicTextureTable(FlatBufferBuilder builder,
      int ID = 0,
      StringOffset IconOffset = default(StringOffset),
      int Width = 0,
      int Height = 0,
      int Size = 0,
      ProtoTable.LiaoTianDynamicTextureTable.eType Type = ProtoTable.LiaoTianDynamicTextureTable.eType.Image,
      VectorOffset ParamOffset = default(VectorOffset)) {
    builder.StartObject(7);
    LiaoTianDynamicTextureTable.AddParam(builder, ParamOffset);
    LiaoTianDynamicTextureTable.AddType(builder, Type);
    LiaoTianDynamicTextureTable.AddSize(builder, Size);
    LiaoTianDynamicTextureTable.AddHeight(builder, Height);
    LiaoTianDynamicTextureTable.AddWidth(builder, Width);
    LiaoTianDynamicTextureTable.AddIcon(builder, IconOffset);
    LiaoTianDynamicTextureTable.AddID(builder, ID);
    return LiaoTianDynamicTextureTable.EndLiaoTianDynamicTextureTable(builder);
  }

  public static void StartLiaoTianDynamicTextureTable(FlatBufferBuilder builder) { builder.StartObject(7); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddIcon(FlatBufferBuilder builder, StringOffset IconOffset) { builder.AddOffset(1, IconOffset.Value, 0); }
  public static void AddWidth(FlatBufferBuilder builder, int Width) { builder.AddInt(2, Width, 0); }
  public static void AddHeight(FlatBufferBuilder builder, int Height) { builder.AddInt(3, Height, 0); }
  public static void AddSize(FlatBufferBuilder builder, int Size) { builder.AddInt(4, Size, 0); }
  public static void AddType(FlatBufferBuilder builder, ProtoTable.LiaoTianDynamicTextureTable.eType Type) { builder.AddInt(5, (int)Type, 0); }
  public static void AddParam(FlatBufferBuilder builder, VectorOffset ParamOffset) { builder.AddOffset(6, ParamOffset.Value, 0); }
  public static VectorOffset CreateParamVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartParamVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<LiaoTianDynamicTextureTable> EndLiaoTianDynamicTextureTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<LiaoTianDynamicTextureTable>(o);
  }
  public static void FinishLiaoTianDynamicTextureTableBuffer(FlatBufferBuilder builder, Offset<LiaoTianDynamicTextureTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

