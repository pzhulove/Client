// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class MonthSignCollectAward : IFlatbufferObject
{
public enum eCrypt : int
{
 code = 764791480,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static MonthSignCollectAward GetRootAsMonthSignCollectAward(ByteBuffer _bb) { return GetRootAsMonthSignCollectAward(_bb, new MonthSignCollectAward()); }
  public static MonthSignCollectAward GetRootAsMonthSignCollectAward(ByteBuffer _bb, MonthSignCollectAward obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public MonthSignCollectAward __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ItemID { get { int o = __p.__offset(6); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ItemNum { get { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }

  public static Offset<MonthSignCollectAward> CreateMonthSignCollectAward(FlatBufferBuilder builder,
      int ID = 0,
      int ItemID = 0,
      int ItemNum = 0) {
    builder.StartObject(3);
    MonthSignCollectAward.AddItemNum(builder, ItemNum);
    MonthSignCollectAward.AddItemID(builder, ItemID);
    MonthSignCollectAward.AddID(builder, ID);
    return MonthSignCollectAward.EndMonthSignCollectAward(builder);
  }

  public static void StartMonthSignCollectAward(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddItemID(FlatBufferBuilder builder, int ItemID) { builder.AddInt(1, ItemID, 0); }
  public static void AddItemNum(FlatBufferBuilder builder, int ItemNum) { builder.AddInt(2, ItemNum, 0); }
  public static Offset<MonthSignCollectAward> EndMonthSignCollectAward(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<MonthSignCollectAward>(o);
  }
  public static void FinishMonthSignCollectAwardBuffer(FlatBufferBuilder builder, Offset<MonthSignCollectAward> offset) { builder.Finish(offset.Value); }
};


}


#endif

