// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class ChangeFashionActiveMergeTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = 1144610400,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ChangeFashionActiveMergeTable GetRootAsChangeFashionActiveMergeTable(ByteBuffer _bb) { return GetRootAsChangeFashionActiveMergeTable(_bb, new ChangeFashionActiveMergeTable()); }
  public static ChangeFashionActiveMergeTable GetRootAsChangeFashionActiveMergeTable(ByteBuffer _bb, ChangeFashionActiveMergeTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ChangeFashionActiveMergeTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int AdvanceId { get { int o = __p.__offset(6); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Prob { get { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string GoldConsume { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetGoldConsumeBytes() { return __p.__vector_as_arraysegment(10); }
  public string TicketConsume { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetTicketConsumeBytes() { return __p.__vector_as_arraysegment(12); }

  public static Offset<ChangeFashionActiveMergeTable> CreateChangeFashionActiveMergeTable(FlatBufferBuilder builder,
      int ID = 0,
      int AdvanceId = 0,
      int Prob = 0,
      StringOffset GoldConsumeOffset = default(StringOffset),
      StringOffset TicketConsumeOffset = default(StringOffset)) {
    builder.StartObject(5);
    ChangeFashionActiveMergeTable.AddTicketConsume(builder, TicketConsumeOffset);
    ChangeFashionActiveMergeTable.AddGoldConsume(builder, GoldConsumeOffset);
    ChangeFashionActiveMergeTable.AddProb(builder, Prob);
    ChangeFashionActiveMergeTable.AddAdvanceId(builder, AdvanceId);
    ChangeFashionActiveMergeTable.AddID(builder, ID);
    return ChangeFashionActiveMergeTable.EndChangeFashionActiveMergeTable(builder);
  }

  public static void StartChangeFashionActiveMergeTable(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddAdvanceId(FlatBufferBuilder builder, int AdvanceId) { builder.AddInt(1, AdvanceId, 0); }
  public static void AddProb(FlatBufferBuilder builder, int Prob) { builder.AddInt(2, Prob, 0); }
  public static void AddGoldConsume(FlatBufferBuilder builder, StringOffset GoldConsumeOffset) { builder.AddOffset(3, GoldConsumeOffset.Value, 0); }
  public static void AddTicketConsume(FlatBufferBuilder builder, StringOffset TicketConsumeOffset) { builder.AddOffset(4, TicketConsumeOffset.Value, 0); }
  public static Offset<ChangeFashionActiveMergeTable> EndChangeFashionActiveMergeTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ChangeFashionActiveMergeTable>(o);
  }
  public static void FinishChangeFashionActiveMergeTableBuffer(FlatBufferBuilder builder, Offset<ChangeFashionActiveMergeTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

