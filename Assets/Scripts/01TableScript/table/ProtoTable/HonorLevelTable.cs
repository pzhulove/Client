// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class HonorLevelTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = -1857185564,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static HonorLevelTable GetRootAsHonorLevelTable(ByteBuffer _bb) { return GetRootAsHonorLevelTable(_bb, new HonorLevelTable()); }
  public static HonorLevelTable GetRootAsHonorLevelTable(ByteBuffer _bb, HonorLevelTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public HonorLevelTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
  public int HonorLvlGrade { get { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int NeedExp { get { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int WeekAddLimit { get { int o = __p.__offset(12); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string ShopDiscountArray(int j) { int o = __p.__offset(14); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : FlatBufferConstants.DefaultString; }
  public int ShopDiscountLength { get { int o = __p.__offset(14); return o != 0 ? __p.__vector_len(o) : 0; } }
 private FlatBufferArray<string> ShopDiscountValue;
 public FlatBufferArray<string>  ShopDiscount
 {
  get{
  if (ShopDiscountValue == null)
  {
    ShopDiscountValue = new FlatBufferArray<string>(this.ShopDiscountArray, this.ShopDiscountLength);
  }
  return ShopDiscountValue;}
 }
  public int LvlNeedRankRate { get { int o = __p.__offset(16); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int RankLeastNum { get { int o = __p.__offset(18); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Title { get { int o = __p.__offset(20); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int TitleDueTime { get { int o = __p.__offset(22); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string TitleFlag { get { int o = __p.__offset(24); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetTitleFlagBytes() { return __p.__vector_as_arraysegment(24); }
  public string UnlockItem { get { int o = __p.__offset(26); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetUnlockItemBytes() { return __p.__vector_as_arraysegment(26); }

  public static Offset<HonorLevelTable> CreateHonorLevelTable(FlatBufferBuilder builder,
      int ID = 0,
      StringOffset nameOffset = default(StringOffset),
      int HonorLvlGrade = 0,
      int NeedExp = 0,
      int WeekAddLimit = 0,
      VectorOffset ShopDiscountOffset = default(VectorOffset),
      int LvlNeedRankRate = 0,
      int RankLeastNum = 0,
      int Title = 0,
      int TitleDueTime = 0,
      StringOffset TitleFlagOffset = default(StringOffset),
      StringOffset UnlockItemOffset = default(StringOffset)) {
    builder.StartObject(12);
    HonorLevelTable.AddUnlockItem(builder, UnlockItemOffset);
    HonorLevelTable.AddTitleFlag(builder, TitleFlagOffset);
    HonorLevelTable.AddTitleDueTime(builder, TitleDueTime);
    HonorLevelTable.AddTitle(builder, Title);
    HonorLevelTable.AddRankLeastNum(builder, RankLeastNum);
    HonorLevelTable.AddLvlNeedRankRate(builder, LvlNeedRankRate);
    HonorLevelTable.AddShopDiscount(builder, ShopDiscountOffset);
    HonorLevelTable.AddWeekAddLimit(builder, WeekAddLimit);
    HonorLevelTable.AddNeedExp(builder, NeedExp);
    HonorLevelTable.AddHonorLvlGrade(builder, HonorLvlGrade);
    HonorLevelTable.AddName(builder, nameOffset);
    HonorLevelTable.AddID(builder, ID);
    return HonorLevelTable.EndHonorLevelTable(builder);
  }

  public static void StartHonorLevelTable(FlatBufferBuilder builder) { builder.StartObject(12); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(1, nameOffset.Value, 0); }
  public static void AddHonorLvlGrade(FlatBufferBuilder builder, int HonorLvlGrade) { builder.AddInt(2, HonorLvlGrade, 0); }
  public static void AddNeedExp(FlatBufferBuilder builder, int NeedExp) { builder.AddInt(3, NeedExp, 0); }
  public static void AddWeekAddLimit(FlatBufferBuilder builder, int WeekAddLimit) { builder.AddInt(4, WeekAddLimit, 0); }
  public static void AddShopDiscount(FlatBufferBuilder builder, VectorOffset ShopDiscountOffset) { builder.AddOffset(5, ShopDiscountOffset.Value, 0); }
  public static VectorOffset CreateShopDiscountVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartShopDiscountVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddLvlNeedRankRate(FlatBufferBuilder builder, int LvlNeedRankRate) { builder.AddInt(6, LvlNeedRankRate, 0); }
  public static void AddRankLeastNum(FlatBufferBuilder builder, int RankLeastNum) { builder.AddInt(7, RankLeastNum, 0); }
  public static void AddTitle(FlatBufferBuilder builder, int Title) { builder.AddInt(8, Title, 0); }
  public static void AddTitleDueTime(FlatBufferBuilder builder, int TitleDueTime) { builder.AddInt(9, TitleDueTime, 0); }
  public static void AddTitleFlag(FlatBufferBuilder builder, StringOffset TitleFlagOffset) { builder.AddOffset(10, TitleFlagOffset.Value, 0); }
  public static void AddUnlockItem(FlatBufferBuilder builder, StringOffset UnlockItemOffset) { builder.AddOffset(11, UnlockItemOffset.Value, 0); }
  public static Offset<HonorLevelTable> EndHonorLevelTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<HonorLevelTable>(o);
  }
  public static void FinishHonorLevelTableBuffer(FlatBufferBuilder builder, Offset<HonorLevelTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

