// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class BuffRandomTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = 2130836854,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static BuffRandomTable GetRootAsBuffRandomTable(ByteBuffer _bb) { return GetRootAsBuffRandomTable(_bb, new BuffRandomTable()); }
  public static BuffRandomTable GetRootAsBuffRandomTable(ByteBuffer _bb, BuffRandomTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public BuffRandomTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int BuffId { get { int o = __p.__offset(6); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Weight { get { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }

  public static Offset<BuffRandomTable> CreateBuffRandomTable(FlatBufferBuilder builder,
      int ID = 0,
      int BuffId = 0,
      int Weight = 0) {
    builder.StartObject(3);
    BuffRandomTable.AddWeight(builder, Weight);
    BuffRandomTable.AddBuffId(builder, BuffId);
    BuffRandomTable.AddID(builder, ID);
    return BuffRandomTable.EndBuffRandomTable(builder);
  }

  public static void StartBuffRandomTable(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddBuffId(FlatBufferBuilder builder, int BuffId) { builder.AddInt(1, BuffId, 0); }
  public static void AddWeight(FlatBufferBuilder builder, int Weight) { builder.AddInt(2, Weight, 0); }
  public static Offset<BuffRandomTable> EndBuffRandomTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<BuffRandomTable>(o);
  }
  public static void FinishBuffRandomTableBuffer(FlatBufferBuilder builder, Offset<BuffRandomTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

