// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class CitySceneTable : IFlatbufferObject
{
public enum eSceneType : int
{
 SceneType_None = 0,
 NORMAL = 1,
 SINGLE = 9,
 DUNGEON_ENTRY = 10,
 PK_PREPARE = 11,
 PK = 12,
 ACTIVITY = 13,
 BATTLE = 4,
 BATTLEPEPARE = 14,
 TEAMDUPLICATION = 15,
};

public enum eSceneSubType : int
{
 NULL = 0,
 TRADITION = 1,
 BUDO = 2,
 GuildBattle = 3,
 MoneyRewards = 4,
 Pk3v3 = 5,
 CrossGuildBattle = 6,
 CrossPk3v3 = 7,
 Guild = 8,
 Battle = 9,
 BattlePrepare = 10,
 FairDuelPrepare = 11,
 TeamDuplicationBuid = 12,
 TeamDuplicationFight = 13,
 Melee2v2Cross = 14,
};

public enum eCrypt : int
{
 code = 1787894359,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static CitySceneTable GetRootAsCitySceneTable(ByteBuffer _bb) { return GetRootAsCitySceneTable(_bb, new CitySceneTable()); }
  public static CitySceneTable GetRootAsCitySceneTable(ByteBuffer _bb, CitySceneTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public CitySceneTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
  public string Desc { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetDescBytes() { return __p.__vector_as_arraysegment(8); }
  public int AreaID { get { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int TownID { get { int o = __p.__offset(12); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int BirthCity { get { int o = __p.__offset(14); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int TraditionSceneID { get { int o = __p.__offset(16); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int BudoSceneID { get { int o = __p.__offset(18); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string ResPath { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetResPathBytes() { return __p.__vector_as_arraysegment(20); }
  public ProtoTable.CitySceneTable.eSceneType SceneType { get { int o = __p.__offset(22); return o != 0 ? (ProtoTable.CitySceneTable.eSceneType)__p.bb.GetInt(o + __p.bb_pos) : ProtoTable.CitySceneTable.eSceneType.SceneType_None; } }
  public ProtoTable.CitySceneTable.eSceneSubType SceneSubType { get { int o = __p.__offset(24); return o != 0 ? (ProtoTable.CitySceneTable.eSceneSubType)__p.bb.GetInt(o + __p.bb_pos) : ProtoTable.CitySceneTable.eSceneSubType.NULL; } }
  public int SyncRange { get { int o = __p.__offset(26); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string ChapterDataArray(int j) { int o = __p.__offset(28); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : FlatBufferConstants.DefaultString; }
  public int ChapterDataLength { get { int o = __p.__offset(28); return o != 0 ? __p.__vector_len(o) : 0; } }
 private FlatBufferArray<string> ChapterDataValue;
 public FlatBufferArray<string>  ChapterData
 {
  get{
  if (ChapterDataValue == null)
  {
    ChapterDataValue = new FlatBufferArray<string>(this.ChapterDataArray, this.ChapterDataLength);
  }
  return ChapterDataValue;}
 }
  public string BGMPath { get { int o = __p.__offset(30); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetBGMPathBytes() { return __p.__vector_as_arraysegment(30); }
  public string EnvironmenBGMtPath { get { int o = __p.__offset(32); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetEnvironmenBGMtPathBytes() { return __p.__vector_as_arraysegment(32); }
  public int LevelLimit { get { int o = __p.__offset(34); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string ExchangeStoreEntrance { get { int o = __p.__offset(36); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetExchangeStoreEntranceBytes() { return __p.__vector_as_arraysegment(36); }

  public static Offset<CitySceneTable> CreateCitySceneTable(FlatBufferBuilder builder,
      int ID = 0,
      StringOffset NameOffset = default(StringOffset),
      StringOffset DescOffset = default(StringOffset),
      int AreaID = 0,
      int TownID = 0,
      int BirthCity = 0,
      int TraditionSceneID = 0,
      int BudoSceneID = 0,
      StringOffset ResPathOffset = default(StringOffset),
      ProtoTable.CitySceneTable.eSceneType SceneType = ProtoTable.CitySceneTable.eSceneType.SceneType_None,
      ProtoTable.CitySceneTable.eSceneSubType SceneSubType = ProtoTable.CitySceneTable.eSceneSubType.NULL,
      int SyncRange = 0,
      VectorOffset ChapterDataOffset = default(VectorOffset),
      StringOffset BGMPathOffset = default(StringOffset),
      StringOffset EnvironmenBGMtPathOffset = default(StringOffset),
      int LevelLimit = 0,
      StringOffset ExchangeStoreEntranceOffset = default(StringOffset)) {
    builder.StartObject(17);
    CitySceneTable.AddExchangeStoreEntrance(builder, ExchangeStoreEntranceOffset);
    CitySceneTable.AddLevelLimit(builder, LevelLimit);
    CitySceneTable.AddEnvironmenBGMtPath(builder, EnvironmenBGMtPathOffset);
    CitySceneTable.AddBGMPath(builder, BGMPathOffset);
    CitySceneTable.AddChapterData(builder, ChapterDataOffset);
    CitySceneTable.AddSyncRange(builder, SyncRange);
    CitySceneTable.AddSceneSubType(builder, SceneSubType);
    CitySceneTable.AddSceneType(builder, SceneType);
    CitySceneTable.AddResPath(builder, ResPathOffset);
    CitySceneTable.AddBudoSceneID(builder, BudoSceneID);
    CitySceneTable.AddTraditionSceneID(builder, TraditionSceneID);
    CitySceneTable.AddBirthCity(builder, BirthCity);
    CitySceneTable.AddTownID(builder, TownID);
    CitySceneTable.AddAreaID(builder, AreaID);
    CitySceneTable.AddDesc(builder, DescOffset);
    CitySceneTable.AddName(builder, NameOffset);
    CitySceneTable.AddID(builder, ID);
    return CitySceneTable.EndCitySceneTable(builder);
  }

  public static void StartCitySceneTable(FlatBufferBuilder builder) { builder.StartObject(17); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset NameOffset) { builder.AddOffset(1, NameOffset.Value, 0); }
  public static void AddDesc(FlatBufferBuilder builder, StringOffset DescOffset) { builder.AddOffset(2, DescOffset.Value, 0); }
  public static void AddAreaID(FlatBufferBuilder builder, int AreaID) { builder.AddInt(3, AreaID, 0); }
  public static void AddTownID(FlatBufferBuilder builder, int TownID) { builder.AddInt(4, TownID, 0); }
  public static void AddBirthCity(FlatBufferBuilder builder, int BirthCity) { builder.AddInt(5, BirthCity, 0); }
  public static void AddTraditionSceneID(FlatBufferBuilder builder, int TraditionSceneID) { builder.AddInt(6, TraditionSceneID, 0); }
  public static void AddBudoSceneID(FlatBufferBuilder builder, int BudoSceneID) { builder.AddInt(7, BudoSceneID, 0); }
  public static void AddResPath(FlatBufferBuilder builder, StringOffset ResPathOffset) { builder.AddOffset(8, ResPathOffset.Value, 0); }
  public static void AddSceneType(FlatBufferBuilder builder, ProtoTable.CitySceneTable.eSceneType SceneType) { builder.AddInt(9, (int)SceneType, 0); }
  public static void AddSceneSubType(FlatBufferBuilder builder, ProtoTable.CitySceneTable.eSceneSubType SceneSubType) { builder.AddInt(10, (int)SceneSubType, 0); }
  public static void AddSyncRange(FlatBufferBuilder builder, int SyncRange) { builder.AddInt(11, SyncRange, 0); }
  public static void AddChapterData(FlatBufferBuilder builder, VectorOffset ChapterDataOffset) { builder.AddOffset(12, ChapterDataOffset.Value, 0); }
  public static VectorOffset CreateChapterDataVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartChapterDataVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddBGMPath(FlatBufferBuilder builder, StringOffset BGMPathOffset) { builder.AddOffset(13, BGMPathOffset.Value, 0); }
  public static void AddEnvironmenBGMtPath(FlatBufferBuilder builder, StringOffset EnvironmenBGMtPathOffset) { builder.AddOffset(14, EnvironmenBGMtPathOffset.Value, 0); }
  public static void AddLevelLimit(FlatBufferBuilder builder, int LevelLimit) { builder.AddInt(15, LevelLimit, 0); }
  public static void AddExchangeStoreEntrance(FlatBufferBuilder builder, StringOffset ExchangeStoreEntranceOffset) { builder.AddOffset(16, ExchangeStoreEntranceOffset.Value, 0); }
  public static Offset<CitySceneTable> EndCitySceneTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<CitySceneTable>(o);
  }
  public static void FinishCitySceneTableBuffer(FlatBufferBuilder builder, Offset<CitySceneTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

