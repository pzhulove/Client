// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class PremiumLeagueTimeTable : IFlatbufferObject
{
public enum eStatus : int
{
 PLS_INIT = 0,
 PLS_ENROLL = 1,
 PLS_PRELIMINAY = 2,
 PLS_FINAL_EIGHT_PREPARE = 3,
 PLS_FINAL_EIGHT = 4,
 PLS_FINAL_FOUR = 5,
 PLS_FINAL = 6,
 PLS_FINAL_END = 7,
};

public enum eCrypt : int
{
 code = 1851077999,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static PremiumLeagueTimeTable GetRootAsPremiumLeagueTimeTable(ByteBuffer _bb) { return GetRootAsPremiumLeagueTimeTable(_bb, new PremiumLeagueTimeTable()); }
  public static PremiumLeagueTimeTable GetRootAsPremiumLeagueTimeTable(ByteBuffer _bb, PremiumLeagueTimeTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public PremiumLeagueTimeTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string Desc { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetDescBytes() { return __p.__vector_as_arraysegment(6); }
  public ProtoTable.PremiumLeagueTimeTable.eStatus Status { get { int o = __p.__offset(8); return o != 0 ? (ProtoTable.PremiumLeagueTimeTable.eStatus)__p.bb.GetInt(o + __p.bb_pos) : ProtoTable.PremiumLeagueTimeTable.eStatus.PLS_INIT; } }
  public int Week { get { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string Time { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetTimeBytes() { return __p.__vector_as_arraysegment(12); }
  public int DurningTime { get { int o = __p.__offset(14); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }

  public static Offset<PremiumLeagueTimeTable> CreatePremiumLeagueTimeTable(FlatBufferBuilder builder,
      int ID = 0,
      StringOffset DescOffset = default(StringOffset),
      ProtoTable.PremiumLeagueTimeTable.eStatus Status = ProtoTable.PremiumLeagueTimeTable.eStatus.PLS_INIT,
      int Week = 0,
      StringOffset TimeOffset = default(StringOffset),
      int DurningTime = 0) {
    builder.StartObject(6);
    PremiumLeagueTimeTable.AddDurningTime(builder, DurningTime);
    PremiumLeagueTimeTable.AddTime(builder, TimeOffset);
    PremiumLeagueTimeTable.AddWeek(builder, Week);
    PremiumLeagueTimeTable.AddStatus(builder, Status);
    PremiumLeagueTimeTable.AddDesc(builder, DescOffset);
    PremiumLeagueTimeTable.AddID(builder, ID);
    return PremiumLeagueTimeTable.EndPremiumLeagueTimeTable(builder);
  }

  public static void StartPremiumLeagueTimeTable(FlatBufferBuilder builder) { builder.StartObject(6); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddDesc(FlatBufferBuilder builder, StringOffset DescOffset) { builder.AddOffset(1, DescOffset.Value, 0); }
  public static void AddStatus(FlatBufferBuilder builder, ProtoTable.PremiumLeagueTimeTable.eStatus Status) { builder.AddInt(2, (int)Status, 0); }
  public static void AddWeek(FlatBufferBuilder builder, int Week) { builder.AddInt(3, Week, 0); }
  public static void AddTime(FlatBufferBuilder builder, StringOffset TimeOffset) { builder.AddOffset(4, TimeOffset.Value, 0); }
  public static void AddDurningTime(FlatBufferBuilder builder, int DurningTime) { builder.AddInt(5, DurningTime, 0); }
  public static Offset<PremiumLeagueTimeTable> EndPremiumLeagueTimeTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<PremiumLeagueTimeTable>(o);
  }
  public static void FinishPremiumLeagueTimeTableBuffer(FlatBufferBuilder builder, Offset<PremiumLeagueTimeTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

