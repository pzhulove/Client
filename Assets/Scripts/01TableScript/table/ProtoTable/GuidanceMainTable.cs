// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class GuidanceMainTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = 1525016923,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static GuidanceMainTable GetRootAsGuidanceMainTable(ByteBuffer _bb) { return GetRootAsGuidanceMainTable(_bb, new GuidanceMainTable()); }
  public static GuidanceMainTable GetRootAsGuidanceMainTable(ByteBuffer _bb, GuidanceMainTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public GuidanceMainTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string Desc { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetDescBytes() { return __p.__vector_as_arraysegment(6); }
  public int LinkItemsArray(int j) { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int LinkItemsLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetLinkItemsBytes() { return __p.__vector_as_arraysegment(8); }
 private FlatBufferArray<int> LinkItemsValue;
 public FlatBufferArray<int>  LinkItems
 {
  get{
  if (LinkItemsValue == null)
  {
    LinkItemsValue = new FlatBufferArray<int>(this.LinkItemsArray, this.LinkItemsLength);
  }
  return LinkItemsValue;}
 }
  public int UnLockLevel { get { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }

  public static Offset<GuidanceMainTable> CreateGuidanceMainTable(FlatBufferBuilder builder,
      int ID = 0,
      StringOffset DescOffset = default(StringOffset),
      VectorOffset LinkItemsOffset = default(VectorOffset),
      int UnLockLevel = 0) {
    builder.StartObject(4);
    GuidanceMainTable.AddUnLockLevel(builder, UnLockLevel);
    GuidanceMainTable.AddLinkItems(builder, LinkItemsOffset);
    GuidanceMainTable.AddDesc(builder, DescOffset);
    GuidanceMainTable.AddID(builder, ID);
    return GuidanceMainTable.EndGuidanceMainTable(builder);
  }

  public static void StartGuidanceMainTable(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddDesc(FlatBufferBuilder builder, StringOffset DescOffset) { builder.AddOffset(1, DescOffset.Value, 0); }
  public static void AddLinkItems(FlatBufferBuilder builder, VectorOffset LinkItemsOffset) { builder.AddOffset(2, LinkItemsOffset.Value, 0); }
  public static VectorOffset CreateLinkItemsVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartLinkItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddUnLockLevel(FlatBufferBuilder builder, int UnLockLevel) { builder.AddInt(3, UnLockLevel, 0); }
  public static Offset<GuidanceMainTable> EndGuidanceMainTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<GuidanceMainTable>(o);
  }
  public static void FinishGuidanceMainTableBuffer(FlatBufferBuilder builder, Offset<GuidanceMainTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

