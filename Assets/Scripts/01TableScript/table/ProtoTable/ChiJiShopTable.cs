// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class ChiJiShopTable : IFlatbufferObject
{
public enum eShopKind : int
{
 SK_Ancient = 0,
 SK_Mystery = 1,
 SK_Forge = 2,
 SK_Brave = 3,
 SK_Fight = 4,
 SK_Guild = 5,
 SK_Magic = 6,
 SK_Gold = 7,
 SK_Abyss = 8,
 SK_Warehouse = 9,
 SK_Activity = 10,
 SK_Master = 12,
 SK_Lease = 13,
 SK_BlessCrystal = 14,
 SK_BindCoin = 17,
 SK_AdventureCoin = 18,
};

public enum eFilter : int
{
 SF_NONE = 0,
 SF_OCCU = 1,
 SF_ARMOR = 2,
 SF_OCCU2 = 3,
 SF_PLAY_OCCU = 4,
 SF_LEVEL = 5,
 SF_COUNT = 6,
};

public enum eSubType : int
{
 ST_NONE = 0,
 ST_MATERIAL = 1,
 ST_WEAPON = 2,
 ST_ARMOR = 3,
 ST_JEWELRY = 4,
 ST_COST = 5,
 ST_VALUABLE = 6,
 ST_RETINUE = 7,
 ST_TITLE = 8,
 ST_ENERGY = 9,
 ST_FASHION = 10,
 ST_ORDINARY = 11,
 ST_DAILY = 12,
 ST_GOODS = 13,
 ST_EQUIP = 14,
 ST_EXP = 15,
 ST_GOLDJAR = 16,
};

public enum eRefreshCycle : int
{
 REFRESH_CYCLE_NONE = 0,
 REFRESH_CYCLE_DAILY = 1,
 REFRESH_CYCLE_WEEK = 2,
 REFRESH_CYCLE_MONTH = 3,
 REFRESH_CYCLE_ACTIVITY = 4,
};

public enum eSubTypeOrder : int
{
 STO_NONE = 0,
 STO_EQUIP = 1,
 STO_EXPENDABLE = 2,
 STO_MATERIAL = 3,
 STO_TASK = 4,
 STO_FASHION = 5,
};

public enum eBindType : int
{
 ROLE_BIND = 0,
 ACCOUNT_BIND = 1,
};

public enum eCrypt : int
{
 code = 634594983,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ChiJiShopTable GetRootAsChiJiShopTable(ByteBuffer _bb) { return GetRootAsChiJiShopTable(_bb, new ChiJiShopTable()); }
  public static ChiJiShopTable GetRootAsChiJiShopTable(ByteBuffer _bb, ChiJiShopTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ChiJiShopTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string ShopName { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetShopNameBytes() { return __p.__vector_as_arraysegment(6); }
  public string ShopNamePath { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetShopNamePathBytes() { return __p.__vector_as_arraysegment(8); }
  public string ShopMallIcon { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetShopMallIconBytes() { return __p.__vector_as_arraysegment(10); }
  public string ShopSimpleName { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetShopSimpleNameBytes() { return __p.__vector_as_arraysegment(12); }
  public string Link { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetLinkBytes() { return __p.__vector_as_arraysegment(14); }
  public ProtoTable.ChiJiShopTable.eShopKind ShopKind { get { int o = __p.__offset(16); return o != 0 ? (ProtoTable.ChiJiShopTable.eShopKind)__p.bb.GetInt(o + __p.bb_pos) : ProtoTable.ChiJiShopTable.eShopKind.SK_Ancient; } }
  public int HelpID { get { int o = __p.__offset(18); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Param1 { get { int o = __p.__offset(20); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int IsGuildShop { get { int o = __p.__offset(22); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ChildrenArray(int j) { int o = __p.__offset(24); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int ChildrenLength { get { int o = __p.__offset(24); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetChildrenBytes() { return __p.__vector_as_arraysegment(24); }
 private FlatBufferArray<int> ChildrenValue;
 public FlatBufferArray<int>  Children
 {
  get{
  if (ChildrenValue == null)
  {
    ChildrenValue = new FlatBufferArray<int>(this.ChildrenArray, this.ChildrenLength);
  }
  return ChildrenValue;}
 }
  public ProtoTable.ChiJiShopTable.eFilter FilterArray(int j) { int o = __p.__offset(26); return o != 0 ? (ProtoTable.ChiJiShopTable.eFilter)__p.bb.GetInt(__p.__vector(o) + j * 4) : (ProtoTable.ChiJiShopTable.eFilter)0; }
  public int FilterLength { get { int o = __p.__offset(26); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetFilterBytes() { return __p.__vector_as_arraysegment(26); }
 private FlatBufferArray<ProtoTable.ChiJiShopTable.eFilter> FilterValue;
 public FlatBufferArray<ProtoTable.ChiJiShopTable.eFilter>  Filter
 {
  get{
  if (FilterValue == null)
  {
    FilterValue = new FlatBufferArray<ProtoTable.ChiJiShopTable.eFilter>(this.FilterArray, this.FilterLength);
  }
  return FilterValue;}
 }
  public int Filter2Array(int j) { int o = __p.__offset(28); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int Filter2Length { get { int o = __p.__offset(28); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetFilter2Bytes() { return __p.__vector_as_arraysegment(28); }
 private FlatBufferArray<int> Filter2Value;
 public FlatBufferArray<int>  Filter2
 {
  get{
  if (Filter2Value == null)
  {
    Filter2Value = new FlatBufferArray<int>(this.Filter2Array, this.Filter2Length);
  }
  return Filter2Value;}
 }
  public int HideFilterItemArray(int j) { int o = __p.__offset(30); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int HideFilterItemLength { get { int o = __p.__offset(30); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetHideFilterItemBytes() { return __p.__vector_as_arraysegment(30); }
 private FlatBufferArray<int> HideFilterItemValue;
 public FlatBufferArray<int>  HideFilterItem
 {
  get{
  if (HideFilterItemValue == null)
  {
    HideFilterItemValue = new FlatBufferArray<int>(this.HideFilterItemArray, this.HideFilterItemLength);
  }
  return HideFilterItemValue;}
 }
  public int IsShowFilterTitleArray(int j) { int o = __p.__offset(32); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int IsShowFilterTitleLength { get { int o = __p.__offset(32); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetIsShowFilterTitleBytes() { return __p.__vector_as_arraysegment(32); }
 private FlatBufferArray<int> IsShowFilterTitleValue;
 public FlatBufferArray<int>  IsShowFilterTitle
 {
  get{
  if (IsShowFilterTitleValue == null)
  {
    IsShowFilterTitleValue = new FlatBufferArray<int>(this.IsShowFilterTitleArray, this.IsShowFilterTitleLength);
  }
  return IsShowFilterTitleValue;}
 }
  public ProtoTable.ChiJiShopTable.eSubType SubTypeArray(int j) { int o = __p.__offset(34); return o != 0 ? (ProtoTable.ChiJiShopTable.eSubType)__p.bb.GetInt(__p.__vector(o) + j * 4) : (ProtoTable.ChiJiShopTable.eSubType)0; }
  public int SubTypeLength { get { int o = __p.__offset(34); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetSubTypeBytes() { return __p.__vector_as_arraysegment(34); }
 private FlatBufferArray<ProtoTable.ChiJiShopTable.eSubType> SubTypeValue;
 public FlatBufferArray<ProtoTable.ChiJiShopTable.eSubType>  SubType
 {
  get{
  if (SubTypeValue == null)
  {
    SubTypeValue = new FlatBufferArray<ProtoTable.ChiJiShopTable.eSubType>(this.SubTypeArray, this.SubTypeLength);
  }
  return SubTypeValue;}
 }
  public string ExtraShowMoneys { get { int o = __p.__offset(36); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetExtraShowMoneysBytes() { return __p.__vector_as_arraysegment(36); }
  public int NeedRefreshTabsArray(int j) { int o = __p.__offset(38); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int NeedRefreshTabsLength { get { int o = __p.__offset(38); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetNeedRefreshTabsBytes() { return __p.__vector_as_arraysegment(38); }
 private FlatBufferArray<int> NeedRefreshTabsValue;
 public FlatBufferArray<int>  NeedRefreshTabs
 {
  get{
  if (NeedRefreshTabsValue == null)
  {
    NeedRefreshTabsValue = new FlatBufferArray<int>(this.NeedRefreshTabsArray, this.NeedRefreshTabsLength);
  }
  return NeedRefreshTabsValue;}
 }
  public int Refresh { get { int o = __p.__offset(40); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public ProtoTable.ChiJiShopTable.eRefreshCycle RefreshCycleArray(int j) { int o = __p.__offset(42); return o != 0 ? (ProtoTable.ChiJiShopTable.eRefreshCycle)__p.bb.GetInt(__p.__vector(o) + j * 4) : (ProtoTable.ChiJiShopTable.eRefreshCycle)0; }
  public int RefreshCycleLength { get { int o = __p.__offset(42); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetRefreshCycleBytes() { return __p.__vector_as_arraysegment(42); }
 private FlatBufferArray<ProtoTable.ChiJiShopTable.eRefreshCycle> RefreshCycleValue;
 public FlatBufferArray<ProtoTable.ChiJiShopTable.eRefreshCycle>  RefreshCycle
 {
  get{
  if (RefreshCycleValue == null)
  {
    RefreshCycleValue = new FlatBufferArray<ProtoTable.ChiJiShopTable.eRefreshCycle>(this.RefreshCycleArray, this.RefreshCycleLength);
  }
  return RefreshCycleValue;}
 }
  public int OpenLevel { get { int o = __p.__offset(44); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int RefreshCostArray(int j) { int o = __p.__offset(46); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int RefreshCostLength { get { int o = __p.__offset(46); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetRefreshCostBytes() { return __p.__vector_as_arraysegment(46); }
 private FlatBufferArray<int> RefreshCostValue;
 public FlatBufferArray<int>  RefreshCost
 {
  get{
  if (RefreshCostValue == null)
  {
    RefreshCostValue = new FlatBufferArray<int>(this.RefreshCostArray, this.RefreshCostLength);
  }
  return RefreshCostValue;}
 }
  public int RefreshTimeArray(int j) { int o = __p.__offset(48); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int RefreshTimeLength { get { int o = __p.__offset(48); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetRefreshTimeBytes() { return __p.__vector_as_arraysegment(48); }
 private FlatBufferArray<int> RefreshTimeValue;
 public FlatBufferArray<int>  RefreshTime
 {
  get{
  if (RefreshTimeValue == null)
  {
    RefreshTimeValue = new FlatBufferArray<int>(this.RefreshTimeArray, this.RefreshTimeLength);
  }
  return RefreshTimeValue;}
 }
  public int OnSaleNum { get { int o = __p.__offset(50); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public ProtoTable.ChiJiShopTable.eSubTypeOrder SubTypeOrderArray(int j) { int o = __p.__offset(52); return o != 0 ? (ProtoTable.ChiJiShopTable.eSubTypeOrder)__p.bb.GetInt(__p.__vector(o) + j * 4) : (ProtoTable.ChiJiShopTable.eSubTypeOrder)0; }
  public int SubTypeOrderLength { get { int o = __p.__offset(52); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetSubTypeOrderBytes() { return __p.__vector_as_arraysegment(52); }
 private FlatBufferArray<ProtoTable.ChiJiShopTable.eSubTypeOrder> SubTypeOrderValue;
 public FlatBufferArray<ProtoTable.ChiJiShopTable.eSubTypeOrder>  SubTypeOrder
 {
  get{
  if (SubTypeOrderValue == null)
  {
    SubTypeOrderValue = new FlatBufferArray<ProtoTable.ChiJiShopTable.eSubTypeOrder>(this.SubTypeOrderArray, this.SubTypeOrderLength);
  }
  return SubTypeOrderValue;}
 }
  public int LimitGood1 { get { int o = __p.__offset(54); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int LimitGood2 { get { int o = __p.__offset(56); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int VIPLvArray(int j) { int o = __p.__offset(58); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int VIPLvLength { get { int o = __p.__offset(58); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetVIPLvBytes() { return __p.__vector_as_arraysegment(58); }
 private FlatBufferArray<int> VIPLvValue;
 public FlatBufferArray<int>  VIPLv
 {
  get{
  if (VIPLvValue == null)
  {
    VIPLvValue = new FlatBufferArray<int>(this.VIPLvArray, this.VIPLvLength);
  }
  return VIPLvValue;}
 }
  public int VIPDiscountArray(int j) { int o = __p.__offset(60); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int VIPDiscountLength { get { int o = __p.__offset(60); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetVIPDiscountBytes() { return __p.__vector_as_arraysegment(60); }
 private FlatBufferArray<int> VIPDiscountValue;
 public FlatBufferArray<int>  VIPDiscount
 {
  get{
  if (VIPDiscountValue == null)
  {
    VIPDiscountValue = new FlatBufferArray<int>(this.VIPDiscountArray, this.VIPDiscountLength);
  }
  return VIPDiscountValue;}
 }
  public int Version { get { int o = __p.__offset(62); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string ShopNpcBody { get { int o = __p.__offset(64); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetShopNpcBodyBytes() { return __p.__vector_as_arraysegment(64); }
  public int RareControlType { get { int o = __p.__offset(66); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int IsExchangeShopShow { get { int o = __p.__offset(68); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ExchangeShopOrder { get { int o = __p.__offset(70); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string ExchangeShopShowImage { get { int o = __p.__offset(72); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetExchangeShopShowImageBytes() { return __p.__vector_as_arraysegment(72); }
  public string ExchangeShopNameImage { get { int o = __p.__offset(74); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetExchangeShopNameImageBytes() { return __p.__vector_as_arraysegment(74); }
  public ProtoTable.ChiJiShopTable.eBindType BindType { get { int o = __p.__offset(76); return o != 0 ? (ProtoTable.ChiJiShopTable.eBindType)__p.bb.GetInt(o + __p.bb_pos) : ProtoTable.ChiJiShopTable.eBindType.ROLE_BIND; } }
  public int HonorDiscount { get { int o = __p.__offset(78); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string ShopItemRefreshDesc { get { int o = __p.__offset(80); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetShopItemRefreshDescBytes() { return __p.__vector_as_arraysegment(80); }
  public int CurrencyShowType { get { int o = __p.__offset(82); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string CurrencyExtraItemArray(int j) { int o = __p.__offset(84); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : FlatBufferConstants.DefaultString; }
  public int CurrencyExtraItemLength { get { int o = __p.__offset(84); return o != 0 ? __p.__vector_len(o) : 0; } }
 private FlatBufferArray<string> CurrencyExtraItemValue;
 public FlatBufferArray<string>  CurrencyExtraItem
 {
  get{
  if (CurrencyExtraItemValue == null)
  {
    CurrencyExtraItemValue = new FlatBufferArray<string>(this.CurrencyExtraItemArray, this.CurrencyExtraItemLength);
  }
  return CurrencyExtraItemValue;}
 }

  public static Offset<ChiJiShopTable> CreateChiJiShopTable(FlatBufferBuilder builder,
      int ID = 0,
      StringOffset ShopNameOffset = default(StringOffset),
      StringOffset ShopNamePathOffset = default(StringOffset),
      StringOffset ShopMallIconOffset = default(StringOffset),
      StringOffset ShopSimpleNameOffset = default(StringOffset),
      StringOffset LinkOffset = default(StringOffset),
      ProtoTable.ChiJiShopTable.eShopKind ShopKind = ProtoTable.ChiJiShopTable.eShopKind.SK_Ancient,
      int HelpID = 0,
      int Param1 = 0,
      int IsGuildShop = 0,
      VectorOffset ChildrenOffset = default(VectorOffset),
      VectorOffset FilterOffset = default(VectorOffset),
      VectorOffset Filter2Offset = default(VectorOffset),
      VectorOffset HideFilterItemOffset = default(VectorOffset),
      VectorOffset IsShowFilterTitleOffset = default(VectorOffset),
      VectorOffset SubTypeOffset = default(VectorOffset),
      StringOffset ExtraShowMoneysOffset = default(StringOffset),
      VectorOffset NeedRefreshTabsOffset = default(VectorOffset),
      int Refresh = 0,
      VectorOffset RefreshCycleOffset = default(VectorOffset),
      int OpenLevel = 0,
      VectorOffset RefreshCostOffset = default(VectorOffset),
      VectorOffset RefreshTimeOffset = default(VectorOffset),
      int OnSaleNum = 0,
      VectorOffset SubTypeOrderOffset = default(VectorOffset),
      int LimitGood1 = 0,
      int LimitGood2 = 0,
      VectorOffset VIPLvOffset = default(VectorOffset),
      VectorOffset VIPDiscountOffset = default(VectorOffset),
      int Version = 0,
      StringOffset ShopNpcBodyOffset = default(StringOffset),
      int RareControlType = 0,
      int IsExchangeShopShow = 0,
      int ExchangeShopOrder = 0,
      StringOffset ExchangeShopShowImageOffset = default(StringOffset),
      StringOffset ExchangeShopNameImageOffset = default(StringOffset),
      ProtoTable.ChiJiShopTable.eBindType BindType = ProtoTable.ChiJiShopTable.eBindType.ROLE_BIND,
      int HonorDiscount = 0,
      StringOffset ShopItemRefreshDescOffset = default(StringOffset),
      int CurrencyShowType = 0,
      VectorOffset CurrencyExtraItemOffset = default(VectorOffset)) {
    builder.StartObject(41);
    ChiJiShopTable.AddCurrencyExtraItem(builder, CurrencyExtraItemOffset);
    ChiJiShopTable.AddCurrencyShowType(builder, CurrencyShowType);
    ChiJiShopTable.AddShopItemRefreshDesc(builder, ShopItemRefreshDescOffset);
    ChiJiShopTable.AddHonorDiscount(builder, HonorDiscount);
    ChiJiShopTable.AddBindType(builder, BindType);
    ChiJiShopTable.AddExchangeShopNameImage(builder, ExchangeShopNameImageOffset);
    ChiJiShopTable.AddExchangeShopShowImage(builder, ExchangeShopShowImageOffset);
    ChiJiShopTable.AddExchangeShopOrder(builder, ExchangeShopOrder);
    ChiJiShopTable.AddIsExchangeShopShow(builder, IsExchangeShopShow);
    ChiJiShopTable.AddRareControlType(builder, RareControlType);
    ChiJiShopTable.AddShopNpcBody(builder, ShopNpcBodyOffset);
    ChiJiShopTable.AddVersion(builder, Version);
    ChiJiShopTable.AddVIPDiscount(builder, VIPDiscountOffset);
    ChiJiShopTable.AddVIPLv(builder, VIPLvOffset);
    ChiJiShopTable.AddLimitGood2(builder, LimitGood2);
    ChiJiShopTable.AddLimitGood1(builder, LimitGood1);
    ChiJiShopTable.AddSubTypeOrder(builder, SubTypeOrderOffset);
    ChiJiShopTable.AddOnSaleNum(builder, OnSaleNum);
    ChiJiShopTable.AddRefreshTime(builder, RefreshTimeOffset);
    ChiJiShopTable.AddRefreshCost(builder, RefreshCostOffset);
    ChiJiShopTable.AddOpenLevel(builder, OpenLevel);
    ChiJiShopTable.AddRefreshCycle(builder, RefreshCycleOffset);
    ChiJiShopTable.AddRefresh(builder, Refresh);
    ChiJiShopTable.AddNeedRefreshTabs(builder, NeedRefreshTabsOffset);
    ChiJiShopTable.AddExtraShowMoneys(builder, ExtraShowMoneysOffset);
    ChiJiShopTable.AddSubType(builder, SubTypeOffset);
    ChiJiShopTable.AddIsShowFilterTitle(builder, IsShowFilterTitleOffset);
    ChiJiShopTable.AddHideFilterItem(builder, HideFilterItemOffset);
    ChiJiShopTable.AddFilter2(builder, Filter2Offset);
    ChiJiShopTable.AddFilter(builder, FilterOffset);
    ChiJiShopTable.AddChildren(builder, ChildrenOffset);
    ChiJiShopTable.AddIsGuildShop(builder, IsGuildShop);
    ChiJiShopTable.AddParam1(builder, Param1);
    ChiJiShopTable.AddHelpID(builder, HelpID);
    ChiJiShopTable.AddShopKind(builder, ShopKind);
    ChiJiShopTable.AddLink(builder, LinkOffset);
    ChiJiShopTable.AddShopSimpleName(builder, ShopSimpleNameOffset);
    ChiJiShopTable.AddShopMallIcon(builder, ShopMallIconOffset);
    ChiJiShopTable.AddShopNamePath(builder, ShopNamePathOffset);
    ChiJiShopTable.AddShopName(builder, ShopNameOffset);
    ChiJiShopTable.AddID(builder, ID);
    return ChiJiShopTable.EndChiJiShopTable(builder);
  }

  public static void StartChiJiShopTable(FlatBufferBuilder builder) { builder.StartObject(41); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddShopName(FlatBufferBuilder builder, StringOffset ShopNameOffset) { builder.AddOffset(1, ShopNameOffset.Value, 0); }
  public static void AddShopNamePath(FlatBufferBuilder builder, StringOffset ShopNamePathOffset) { builder.AddOffset(2, ShopNamePathOffset.Value, 0); }
  public static void AddShopMallIcon(FlatBufferBuilder builder, StringOffset ShopMallIconOffset) { builder.AddOffset(3, ShopMallIconOffset.Value, 0); }
  public static void AddShopSimpleName(FlatBufferBuilder builder, StringOffset ShopSimpleNameOffset) { builder.AddOffset(4, ShopSimpleNameOffset.Value, 0); }
  public static void AddLink(FlatBufferBuilder builder, StringOffset LinkOffset) { builder.AddOffset(5, LinkOffset.Value, 0); }
  public static void AddShopKind(FlatBufferBuilder builder, ProtoTable.ChiJiShopTable.eShopKind ShopKind) { builder.AddInt(6, (int)ShopKind, 0); }
  public static void AddHelpID(FlatBufferBuilder builder, int HelpID) { builder.AddInt(7, HelpID, 0); }
  public static void AddParam1(FlatBufferBuilder builder, int Param1) { builder.AddInt(8, Param1, 0); }
  public static void AddIsGuildShop(FlatBufferBuilder builder, int IsGuildShop) { builder.AddInt(9, IsGuildShop, 0); }
  public static void AddChildren(FlatBufferBuilder builder, VectorOffset ChildrenOffset) { builder.AddOffset(10, ChildrenOffset.Value, 0); }
  public static VectorOffset CreateChildrenVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartChildrenVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddFilter(FlatBufferBuilder builder, VectorOffset FilterOffset) { builder.AddOffset(11, FilterOffset.Value, 0); }
  public static VectorOffset CreateFilterVector(FlatBufferBuilder builder, ProtoTable.ChiJiShopTable.eFilter[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt((int)data[i]); return builder.EndVector(); }
  public static void StartFilterVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddFilter2(FlatBufferBuilder builder, VectorOffset Filter2Offset) { builder.AddOffset(12, Filter2Offset.Value, 0); }
  public static VectorOffset CreateFilter2Vector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartFilter2Vector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddHideFilterItem(FlatBufferBuilder builder, VectorOffset HideFilterItemOffset) { builder.AddOffset(13, HideFilterItemOffset.Value, 0); }
  public static VectorOffset CreateHideFilterItemVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartHideFilterItemVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddIsShowFilterTitle(FlatBufferBuilder builder, VectorOffset IsShowFilterTitleOffset) { builder.AddOffset(14, IsShowFilterTitleOffset.Value, 0); }
  public static VectorOffset CreateIsShowFilterTitleVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartIsShowFilterTitleVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddSubType(FlatBufferBuilder builder, VectorOffset SubTypeOffset) { builder.AddOffset(15, SubTypeOffset.Value, 0); }
  public static VectorOffset CreateSubTypeVector(FlatBufferBuilder builder, ProtoTable.ChiJiShopTable.eSubType[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt((int)data[i]); return builder.EndVector(); }
  public static void StartSubTypeVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddExtraShowMoneys(FlatBufferBuilder builder, StringOffset ExtraShowMoneysOffset) { builder.AddOffset(16, ExtraShowMoneysOffset.Value, 0); }
  public static void AddNeedRefreshTabs(FlatBufferBuilder builder, VectorOffset NeedRefreshTabsOffset) { builder.AddOffset(17, NeedRefreshTabsOffset.Value, 0); }
  public static VectorOffset CreateNeedRefreshTabsVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartNeedRefreshTabsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddRefresh(FlatBufferBuilder builder, int Refresh) { builder.AddInt(18, Refresh, 0); }
  public static void AddRefreshCycle(FlatBufferBuilder builder, VectorOffset RefreshCycleOffset) { builder.AddOffset(19, RefreshCycleOffset.Value, 0); }
  public static VectorOffset CreateRefreshCycleVector(FlatBufferBuilder builder, ProtoTable.ChiJiShopTable.eRefreshCycle[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt((int)data[i]); return builder.EndVector(); }
  public static void StartRefreshCycleVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddOpenLevel(FlatBufferBuilder builder, int OpenLevel) { builder.AddInt(20, OpenLevel, 0); }
  public static void AddRefreshCost(FlatBufferBuilder builder, VectorOffset RefreshCostOffset) { builder.AddOffset(21, RefreshCostOffset.Value, 0); }
  public static VectorOffset CreateRefreshCostVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartRefreshCostVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddRefreshTime(FlatBufferBuilder builder, VectorOffset RefreshTimeOffset) { builder.AddOffset(22, RefreshTimeOffset.Value, 0); }
  public static VectorOffset CreateRefreshTimeVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartRefreshTimeVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddOnSaleNum(FlatBufferBuilder builder, int OnSaleNum) { builder.AddInt(23, OnSaleNum, 0); }
  public static void AddSubTypeOrder(FlatBufferBuilder builder, VectorOffset SubTypeOrderOffset) { builder.AddOffset(24, SubTypeOrderOffset.Value, 0); }
  public static VectorOffset CreateSubTypeOrderVector(FlatBufferBuilder builder, ProtoTable.ChiJiShopTable.eSubTypeOrder[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt((int)data[i]); return builder.EndVector(); }
  public static void StartSubTypeOrderVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddLimitGood1(FlatBufferBuilder builder, int LimitGood1) { builder.AddInt(25, LimitGood1, 0); }
  public static void AddLimitGood2(FlatBufferBuilder builder, int LimitGood2) { builder.AddInt(26, LimitGood2, 0); }
  public static void AddVIPLv(FlatBufferBuilder builder, VectorOffset VIPLvOffset) { builder.AddOffset(27, VIPLvOffset.Value, 0); }
  public static VectorOffset CreateVIPLvVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartVIPLvVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddVIPDiscount(FlatBufferBuilder builder, VectorOffset VIPDiscountOffset) { builder.AddOffset(28, VIPDiscountOffset.Value, 0); }
  public static VectorOffset CreateVIPDiscountVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartVIPDiscountVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddVersion(FlatBufferBuilder builder, int Version) { builder.AddInt(29, Version, 0); }
  public static void AddShopNpcBody(FlatBufferBuilder builder, StringOffset ShopNpcBodyOffset) { builder.AddOffset(30, ShopNpcBodyOffset.Value, 0); }
  public static void AddRareControlType(FlatBufferBuilder builder, int RareControlType) { builder.AddInt(31, RareControlType, 0); }
  public static void AddIsExchangeShopShow(FlatBufferBuilder builder, int IsExchangeShopShow) { builder.AddInt(32, IsExchangeShopShow, 0); }
  public static void AddExchangeShopOrder(FlatBufferBuilder builder, int ExchangeShopOrder) { builder.AddInt(33, ExchangeShopOrder, 0); }
  public static void AddExchangeShopShowImage(FlatBufferBuilder builder, StringOffset ExchangeShopShowImageOffset) { builder.AddOffset(34, ExchangeShopShowImageOffset.Value, 0); }
  public static void AddExchangeShopNameImage(FlatBufferBuilder builder, StringOffset ExchangeShopNameImageOffset) { builder.AddOffset(35, ExchangeShopNameImageOffset.Value, 0); }
  public static void AddBindType(FlatBufferBuilder builder, ProtoTable.ChiJiShopTable.eBindType BindType) { builder.AddInt(36, (int)BindType, 0); }
  public static void AddHonorDiscount(FlatBufferBuilder builder, int HonorDiscount) { builder.AddInt(37, HonorDiscount, 0); }
  public static void AddShopItemRefreshDesc(FlatBufferBuilder builder, StringOffset ShopItemRefreshDescOffset) { builder.AddOffset(38, ShopItemRefreshDescOffset.Value, 0); }
  public static void AddCurrencyShowType(FlatBufferBuilder builder, int CurrencyShowType) { builder.AddInt(39, CurrencyShowType, 0); }
  public static void AddCurrencyExtraItem(FlatBufferBuilder builder, VectorOffset CurrencyExtraItemOffset) { builder.AddOffset(40, CurrencyExtraItemOffset.Value, 0); }
  public static VectorOffset CreateCurrencyExtraItemVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartCurrencyExtraItemVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ChiJiShopTable> EndChiJiShopTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ChiJiShopTable>(o);
  }
  public static void FinishChiJiShopTableBuffer(FlatBufferBuilder builder, Offset<ChiJiShopTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

