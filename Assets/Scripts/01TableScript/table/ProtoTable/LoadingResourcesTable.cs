// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class LoadingResourcesTable : IFlatbufferObject
{
public enum eType : int
{
 AT_NONE = 0,
 AT_EQUIP = 1,
 AT_DEFENCE = 2,
};

public enum eCrypt : int
{
 code = 654184969,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static LoadingResourcesTable GetRootAsLoadingResourcesTable(ByteBuffer _bb) { return GetRootAsLoadingResourcesTable(_bb, new LoadingResourcesTable()); }
  public static LoadingResourcesTable GetRootAsLoadingResourcesTable(ByteBuffer _bb, LoadingResourcesTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public LoadingResourcesTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
  public ProtoTable.LoadingResourcesTable.eType Type { get { int o = __p.__offset(8); return o != 0 ? (ProtoTable.LoadingResourcesTable.eType)__p.bb.GetInt(o + __p.bb_pos) : ProtoTable.LoadingResourcesTable.eType.AT_NONE; } }
  public int Level { get { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string Resources { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetResourcesBytes() { return __p.__vector_as_arraysegment(12); }
  public string Text { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetTextBytes() { return __p.__vector_as_arraysegment(14); }

  public static Offset<LoadingResourcesTable> CreateLoadingResourcesTable(FlatBufferBuilder builder,
      int ID = 0,
      StringOffset NameOffset = default(StringOffset),
      ProtoTable.LoadingResourcesTable.eType Type = ProtoTable.LoadingResourcesTable.eType.AT_NONE,
      int Level = 0,
      StringOffset ResourcesOffset = default(StringOffset),
      StringOffset TextOffset = default(StringOffset)) {
    builder.StartObject(6);
    LoadingResourcesTable.AddText(builder, TextOffset);
    LoadingResourcesTable.AddResources(builder, ResourcesOffset);
    LoadingResourcesTable.AddLevel(builder, Level);
    LoadingResourcesTable.AddType(builder, Type);
    LoadingResourcesTable.AddName(builder, NameOffset);
    LoadingResourcesTable.AddID(builder, ID);
    return LoadingResourcesTable.EndLoadingResourcesTable(builder);
  }

  public static void StartLoadingResourcesTable(FlatBufferBuilder builder) { builder.StartObject(6); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset NameOffset) { builder.AddOffset(1, NameOffset.Value, 0); }
  public static void AddType(FlatBufferBuilder builder, ProtoTable.LoadingResourcesTable.eType Type) { builder.AddInt(2, (int)Type, 0); }
  public static void AddLevel(FlatBufferBuilder builder, int Level) { builder.AddInt(3, Level, 0); }
  public static void AddResources(FlatBufferBuilder builder, StringOffset ResourcesOffset) { builder.AddOffset(4, ResourcesOffset.Value, 0); }
  public static void AddText(FlatBufferBuilder builder, StringOffset TextOffset) { builder.AddOffset(5, TextOffset.Value, 0); }
  public static Offset<LoadingResourcesTable> EndLoadingResourcesTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<LoadingResourcesTable>(o);
  }
  public static void FinishLoadingResourcesTableBuffer(FlatBufferBuilder builder, Offset<LoadingResourcesTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

