// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class GuildProsperityTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = -1869684804,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static GuildProsperityTable GetRootAsGuildProsperityTable(ByteBuffer _bb) { return GetRootAsGuildProsperityTable(_bb, new GuildProsperityTable()); }
  public static GuildProsperityTable GetRootAsGuildProsperityTable(ByteBuffer _bb, GuildProsperityTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public GuildProsperityTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int DismissLevel { get { int o = __p.__offset(6); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int MidLevel { get { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int HighLevel { get { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }

  public static Offset<GuildProsperityTable> CreateGuildProsperityTable(FlatBufferBuilder builder,
      int ID = 0,
      int DismissLevel = 0,
      int MidLevel = 0,
      int HighLevel = 0) {
    builder.StartObject(4);
    GuildProsperityTable.AddHighLevel(builder, HighLevel);
    GuildProsperityTable.AddMidLevel(builder, MidLevel);
    GuildProsperityTable.AddDismissLevel(builder, DismissLevel);
    GuildProsperityTable.AddID(builder, ID);
    return GuildProsperityTable.EndGuildProsperityTable(builder);
  }

  public static void StartGuildProsperityTable(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddDismissLevel(FlatBufferBuilder builder, int DismissLevel) { builder.AddInt(1, DismissLevel, 0); }
  public static void AddMidLevel(FlatBufferBuilder builder, int MidLevel) { builder.AddInt(2, MidLevel, 0); }
  public static void AddHighLevel(FlatBufferBuilder builder, int HighLevel) { builder.AddInt(3, HighLevel, 0); }
  public static Offset<GuildProsperityTable> EndGuildProsperityTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<GuildProsperityTable>(o);
  }
  public static void FinishGuildProsperityTableBuffer(FlatBufferBuilder builder, Offset<GuildProsperityTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

