// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class LostDungeonFloorTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = -1652106902,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static LostDungeonFloorTable GetRootAsLostDungeonFloorTable(ByteBuffer _bb) { return GetRootAsLostDungeonFloorTable(_bb, new LostDungeonFloorTable()); }
  public static LostDungeonFloorTable GetRootAsLostDungeonFloorTable(ByteBuffer _bb, LostDungeonFloorTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public LostDungeonFloorTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Floor { get { int o = __p.__offset(6); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string Name { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(8); }
  public string Desc { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetDescBytes() { return __p.__vector_as_arraysegment(10); }
  public string Battles { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetBattlesBytes() { return __p.__vector_as_arraysegment(12); }
  public int FailHandle { get { int o = __p.__offset(14); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int FailDecScore { get { int o = __p.__offset(16); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ArtifactItemID { get { int o = __p.__offset(18); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string ArtifactItemDesc { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetArtifactItemDescBytes() { return __p.__vector_as_arraysegment(20); }
  public int ExistMysticShop { get { int o = __p.__offset(22); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int NodeNumm { get { int o = __p.__offset(24); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string HardBattle { get { int o = __p.__offset(26); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetHardBattleBytes() { return __p.__vector_as_arraysegment(26); }
  public string TreasChest { get { int o = __p.__offset(28); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetTreasChestBytes() { return __p.__vector_as_arraysegment(28); }
  public string TreasChestIds { get { int o = __p.__offset(30); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetTreasChestIdsBytes() { return __p.__vector_as_arraysegment(30); }
  public int NotFallItemId { get { int o = __p.__offset(32); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int AgainItemId { get { int o = __p.__offset(34); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }

  public static Offset<LostDungeonFloorTable> CreateLostDungeonFloorTable(FlatBufferBuilder builder,
      int ID = 0,
      int Floor = 0,
      StringOffset NameOffset = default(StringOffset),
      StringOffset DescOffset = default(StringOffset),
      StringOffset BattlesOffset = default(StringOffset),
      int FailHandle = 0,
      int FailDecScore = 0,
      int ArtifactItemID = 0,
      StringOffset ArtifactItemDescOffset = default(StringOffset),
      int ExistMysticShop = 0,
      int NodeNumm = 0,
      StringOffset HardBattleOffset = default(StringOffset),
      StringOffset TreasChestOffset = default(StringOffset),
      StringOffset TreasChestIdsOffset = default(StringOffset),
      int NotFallItemId = 0,
      int AgainItemId = 0) {
    builder.StartObject(16);
    LostDungeonFloorTable.AddAgainItemId(builder, AgainItemId);
    LostDungeonFloorTable.AddNotFallItemId(builder, NotFallItemId);
    LostDungeonFloorTable.AddTreasChestIds(builder, TreasChestIdsOffset);
    LostDungeonFloorTable.AddTreasChest(builder, TreasChestOffset);
    LostDungeonFloorTable.AddHardBattle(builder, HardBattleOffset);
    LostDungeonFloorTable.AddNodeNumm(builder, NodeNumm);
    LostDungeonFloorTable.AddExistMysticShop(builder, ExistMysticShop);
    LostDungeonFloorTable.AddArtifactItemDesc(builder, ArtifactItemDescOffset);
    LostDungeonFloorTable.AddArtifactItemID(builder, ArtifactItemID);
    LostDungeonFloorTable.AddFailDecScore(builder, FailDecScore);
    LostDungeonFloorTable.AddFailHandle(builder, FailHandle);
    LostDungeonFloorTable.AddBattles(builder, BattlesOffset);
    LostDungeonFloorTable.AddDesc(builder, DescOffset);
    LostDungeonFloorTable.AddName(builder, NameOffset);
    LostDungeonFloorTable.AddFloor(builder, Floor);
    LostDungeonFloorTable.AddID(builder, ID);
    return LostDungeonFloorTable.EndLostDungeonFloorTable(builder);
  }

  public static void StartLostDungeonFloorTable(FlatBufferBuilder builder) { builder.StartObject(16); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddFloor(FlatBufferBuilder builder, int Floor) { builder.AddInt(1, Floor, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset NameOffset) { builder.AddOffset(2, NameOffset.Value, 0); }
  public static void AddDesc(FlatBufferBuilder builder, StringOffset DescOffset) { builder.AddOffset(3, DescOffset.Value, 0); }
  public static void AddBattles(FlatBufferBuilder builder, StringOffset BattlesOffset) { builder.AddOffset(4, BattlesOffset.Value, 0); }
  public static void AddFailHandle(FlatBufferBuilder builder, int FailHandle) { builder.AddInt(5, FailHandle, 0); }
  public static void AddFailDecScore(FlatBufferBuilder builder, int FailDecScore) { builder.AddInt(6, FailDecScore, 0); }
  public static void AddArtifactItemID(FlatBufferBuilder builder, int ArtifactItemID) { builder.AddInt(7, ArtifactItemID, 0); }
  public static void AddArtifactItemDesc(FlatBufferBuilder builder, StringOffset ArtifactItemDescOffset) { builder.AddOffset(8, ArtifactItemDescOffset.Value, 0); }
  public static void AddExistMysticShop(FlatBufferBuilder builder, int ExistMysticShop) { builder.AddInt(9, ExistMysticShop, 0); }
  public static void AddNodeNumm(FlatBufferBuilder builder, int NodeNumm) { builder.AddInt(10, NodeNumm, 0); }
  public static void AddHardBattle(FlatBufferBuilder builder, StringOffset HardBattleOffset) { builder.AddOffset(11, HardBattleOffset.Value, 0); }
  public static void AddTreasChest(FlatBufferBuilder builder, StringOffset TreasChestOffset) { builder.AddOffset(12, TreasChestOffset.Value, 0); }
  public static void AddTreasChestIds(FlatBufferBuilder builder, StringOffset TreasChestIdsOffset) { builder.AddOffset(13, TreasChestIdsOffset.Value, 0); }
  public static void AddNotFallItemId(FlatBufferBuilder builder, int NotFallItemId) { builder.AddInt(14, NotFallItemId, 0); }
  public static void AddAgainItemId(FlatBufferBuilder builder, int AgainItemId) { builder.AddInt(15, AgainItemId, 0); }
  public static Offset<LostDungeonFloorTable> EndLostDungeonFloorTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<LostDungeonFloorTable>(o);
  }
  public static void FinishLostDungeonFloorTableBuffer(FlatBufferBuilder builder, Offset<LostDungeonFloorTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

