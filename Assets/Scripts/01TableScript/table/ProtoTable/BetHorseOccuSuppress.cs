// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class BetHorseOccuSuppress : IFlatbufferObject
{
public enum eCrypt : int
{
 code = 1614518943,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static BetHorseOccuSuppress GetRootAsBetHorseOccuSuppress(ByteBuffer _bb) { return GetRootAsBetHorseOccuSuppress(_bb, new BetHorseOccuSuppress()); }
  public static BetHorseOccuSuppress GetRootAsBetHorseOccuSuppress(ByteBuffer _bb, BetHorseOccuSuppress obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public BetHorseOccuSuppress __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int OccupationType1 { get { int o = __p.__offset(6); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int OccupationType2 { get { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int WinRate { get { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }

  public static Offset<BetHorseOccuSuppress> CreateBetHorseOccuSuppress(FlatBufferBuilder builder,
      int ID = 0,
      int OccupationType1 = 0,
      int OccupationType2 = 0,
      int WinRate = 0) {
    builder.StartObject(4);
    BetHorseOccuSuppress.AddWinRate(builder, WinRate);
    BetHorseOccuSuppress.AddOccupationType2(builder, OccupationType2);
    BetHorseOccuSuppress.AddOccupationType1(builder, OccupationType1);
    BetHorseOccuSuppress.AddID(builder, ID);
    return BetHorseOccuSuppress.EndBetHorseOccuSuppress(builder);
  }

  public static void StartBetHorseOccuSuppress(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddOccupationType1(FlatBufferBuilder builder, int OccupationType1) { builder.AddInt(1, OccupationType1, 0); }
  public static void AddOccupationType2(FlatBufferBuilder builder, int OccupationType2) { builder.AddInt(2, OccupationType2, 0); }
  public static void AddWinRate(FlatBufferBuilder builder, int WinRate) { builder.AddInt(3, WinRate, 0); }
  public static Offset<BetHorseOccuSuppress> EndBetHorseOccuSuppress(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<BetHorseOccuSuppress>(o);
  }
  public static void FinishBetHorseOccuSuppressBuffer(FlatBufferBuilder builder, Offset<BetHorseOccuSuppress> offset) { builder.Finish(offset.Value); }
};


}


#endif

