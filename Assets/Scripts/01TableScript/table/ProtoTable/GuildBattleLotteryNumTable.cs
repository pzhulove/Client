// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class GuildBattleLotteryNumTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = 1295388832,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static GuildBattleLotteryNumTable GetRootAsGuildBattleLotteryNumTable(ByteBuffer _bb) { return GetRootAsGuildBattleLotteryNumTable(_bb, new GuildBattleLotteryNumTable()); }
  public static GuildBattleLotteryNumTable GetRootAsGuildBattleLotteryNumTable(ByteBuffer _bb, GuildBattleLotteryNumTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public GuildBattleLotteryNumTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Num { get { int o = __p.__offset(6); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }

  public static Offset<GuildBattleLotteryNumTable> CreateGuildBattleLotteryNumTable(FlatBufferBuilder builder,
      int ID = 0,
      int Num = 0) {
    builder.StartObject(2);
    GuildBattleLotteryNumTable.AddNum(builder, Num);
    GuildBattleLotteryNumTable.AddID(builder, ID);
    return GuildBattleLotteryNumTable.EndGuildBattleLotteryNumTable(builder);
  }

  public static void StartGuildBattleLotteryNumTable(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddNum(FlatBufferBuilder builder, int Num) { builder.AddInt(1, Num, 0); }
  public static Offset<GuildBattleLotteryNumTable> EndGuildBattleLotteryNumTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<GuildBattleLotteryNumTable>(o);
  }
  public static void FinishGuildBattleLotteryNumTableBuffer(FlatBufferBuilder builder, Offset<GuildBattleLotteryNumTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

