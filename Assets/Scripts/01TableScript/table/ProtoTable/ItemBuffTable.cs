// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class ItemBuffTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = -983801236,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ItemBuffTable GetRootAsItemBuffTable(ByteBuffer _bb) { return GetRootAsItemBuffTable(_bb, new ItemBuffTable()); }
  public static ItemBuffTable GetRootAsItemBuffTable(ByteBuffer _bb, ItemBuffTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ItemBuffTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string buffName { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetBuffNameBytes() { return __p.__vector_as_arraysegment(6); }
  public int buffId { get { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int buffMaxLvl { get { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }

  public static Offset<ItemBuffTable> CreateItemBuffTable(FlatBufferBuilder builder,
      int ID = 0,
      StringOffset buffNameOffset = default(StringOffset),
      int buffId = 0,
      int buffMaxLvl = 0) {
    builder.StartObject(4);
    ItemBuffTable.AddBuffMaxLvl(builder, buffMaxLvl);
    ItemBuffTable.AddBuffId(builder, buffId);
    ItemBuffTable.AddBuffName(builder, buffNameOffset);
    ItemBuffTable.AddID(builder, ID);
    return ItemBuffTable.EndItemBuffTable(builder);
  }

  public static void StartItemBuffTable(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddBuffName(FlatBufferBuilder builder, StringOffset buffNameOffset) { builder.AddOffset(1, buffNameOffset.Value, 0); }
  public static void AddBuffId(FlatBufferBuilder builder, int buffId) { builder.AddInt(2, buffId, 0); }
  public static void AddBuffMaxLvl(FlatBufferBuilder builder, int buffMaxLvl) { builder.AddInt(3, buffMaxLvl, 0); }
  public static Offset<ItemBuffTable> EndItemBuffTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ItemBuffTable>(o);
  }
  public static void FinishItemBuffTableBuffer(FlatBufferBuilder builder, Offset<ItemBuffTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

