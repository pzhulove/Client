// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class HonorRankExpTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = 368717801,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static HonorRankExpTable GetRootAsHonorRankExpTable(ByteBuffer _bb) { return GetRootAsHonorRankExpTable(_bb, new HonorRankExpTable()); }
  public static HonorRankExpTable GetRootAsHonorRankExpTable(ByteBuffer _bb, HonorRankExpTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public HonorRankExpTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Rank { get { int o = __p.__offset(6); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int RewardExp { get { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int RankLvl { get { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }

  public static Offset<HonorRankExpTable> CreateHonorRankExpTable(FlatBufferBuilder builder,
      int ID = 0,
      int Rank = 0,
      int RewardExp = 0,
      int RankLvl = 0) {
    builder.StartObject(4);
    HonorRankExpTable.AddRankLvl(builder, RankLvl);
    HonorRankExpTable.AddRewardExp(builder, RewardExp);
    HonorRankExpTable.AddRank(builder, Rank);
    HonorRankExpTable.AddID(builder, ID);
    return HonorRankExpTable.EndHonorRankExpTable(builder);
  }

  public static void StartHonorRankExpTable(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddRank(FlatBufferBuilder builder, int Rank) { builder.AddInt(1, Rank, 0); }
  public static void AddRewardExp(FlatBufferBuilder builder, int RewardExp) { builder.AddInt(2, RewardExp, 0); }
  public static void AddRankLvl(FlatBufferBuilder builder, int RankLvl) { builder.AddInt(3, RankLvl, 0); }
  public static Offset<HonorRankExpTable> EndHonorRankExpTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<HonorRankExpTable>(o);
  }
  public static void FinishHonorRankExpTableBuffer(FlatBufferBuilder builder, Offset<HonorRankExpTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

