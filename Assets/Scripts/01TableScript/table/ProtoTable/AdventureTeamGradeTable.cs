// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class AdventureTeamGradeTable : IFlatbufferObject
{
public enum eGradeEnum : int
{
 GradeEnum_None = 0,
 C = 1,
 B = 2,
 A = 3,
 S = 4,
 SS = 5,
 SSS = 6,
};

public enum eCrypt : int
{
 code = -204914404,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static AdventureTeamGradeTable GetRootAsAdventureTeamGradeTable(ByteBuffer _bb) { return GetRootAsAdventureTeamGradeTable(_bb, new AdventureTeamGradeTable()); }
  public static AdventureTeamGradeTable GetRootAsAdventureTeamGradeTable(ByteBuffer _bb, AdventureTeamGradeTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public AdventureTeamGradeTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string AdventureTeamGrade { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetAdventureTeamGradeBytes() { return __p.__vector_as_arraysegment(6); }
  public string RoleValueTotalScore { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetRoleValueTotalScoreBytes() { return __p.__vector_as_arraysegment(8); }
  public int SingleServerRanking { get { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int CanJoinSortList { get { int o = __p.__offset(12); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string OptionalTasks { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetOptionalTasksBytes() { return __p.__vector_as_arraysegment(14); }
  public string NameColor { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetNameColorBytes() { return __p.__vector_as_arraysegment(16); }
  public ProtoTable.AdventureTeamGradeTable.eGradeEnum GradeEnum { get { int o = __p.__offset(18); return o != 0 ? (ProtoTable.AdventureTeamGradeTable.eGradeEnum)__p.bb.GetInt(o + __p.bb_pos) : ProtoTable.AdventureTeamGradeTable.eGradeEnum.GradeEnum_None; } }

  public static Offset<AdventureTeamGradeTable> CreateAdventureTeamGradeTable(FlatBufferBuilder builder,
      int ID = 0,
      StringOffset AdventureTeamGradeOffset = default(StringOffset),
      StringOffset RoleValueTotalScoreOffset = default(StringOffset),
      int SingleServerRanking = 0,
      int CanJoinSortList = 0,
      StringOffset OptionalTasksOffset = default(StringOffset),
      StringOffset NameColorOffset = default(StringOffset),
      ProtoTable.AdventureTeamGradeTable.eGradeEnum GradeEnum = ProtoTable.AdventureTeamGradeTable.eGradeEnum.GradeEnum_None) {
    builder.StartObject(8);
    AdventureTeamGradeTable.AddGradeEnum(builder, GradeEnum);
    AdventureTeamGradeTable.AddNameColor(builder, NameColorOffset);
    AdventureTeamGradeTable.AddOptionalTasks(builder, OptionalTasksOffset);
    AdventureTeamGradeTable.AddCanJoinSortList(builder, CanJoinSortList);
    AdventureTeamGradeTable.AddSingleServerRanking(builder, SingleServerRanking);
    AdventureTeamGradeTable.AddRoleValueTotalScore(builder, RoleValueTotalScoreOffset);
    AdventureTeamGradeTable.AddAdventureTeamGrade(builder, AdventureTeamGradeOffset);
    AdventureTeamGradeTable.AddID(builder, ID);
    return AdventureTeamGradeTable.EndAdventureTeamGradeTable(builder);
  }

  public static void StartAdventureTeamGradeTable(FlatBufferBuilder builder) { builder.StartObject(8); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddAdventureTeamGrade(FlatBufferBuilder builder, StringOffset AdventureTeamGradeOffset) { builder.AddOffset(1, AdventureTeamGradeOffset.Value, 0); }
  public static void AddRoleValueTotalScore(FlatBufferBuilder builder, StringOffset RoleValueTotalScoreOffset) { builder.AddOffset(2, RoleValueTotalScoreOffset.Value, 0); }
  public static void AddSingleServerRanking(FlatBufferBuilder builder, int SingleServerRanking) { builder.AddInt(3, SingleServerRanking, 0); }
  public static void AddCanJoinSortList(FlatBufferBuilder builder, int CanJoinSortList) { builder.AddInt(4, CanJoinSortList, 0); }
  public static void AddOptionalTasks(FlatBufferBuilder builder, StringOffset OptionalTasksOffset) { builder.AddOffset(5, OptionalTasksOffset.Value, 0); }
  public static void AddNameColor(FlatBufferBuilder builder, StringOffset NameColorOffset) { builder.AddOffset(6, NameColorOffset.Value, 0); }
  public static void AddGradeEnum(FlatBufferBuilder builder, ProtoTable.AdventureTeamGradeTable.eGradeEnum GradeEnum) { builder.AddInt(7, (int)GradeEnum, 0); }
  public static Offset<AdventureTeamGradeTable> EndAdventureTeamGradeTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<AdventureTeamGradeTable>(o);
  }
  public static void FinishAdventureTeamGradeTableBuffer(FlatBufferBuilder builder, Offset<AdventureTeamGradeTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

