// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class ChiJiGiftTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = 595813643,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ChiJiGiftTable GetRootAsChiJiGiftTable(ByteBuffer _bb) { return GetRootAsChiJiGiftTable(_bb, new ChiJiGiftTable()); }
  public static ChiJiGiftTable GetRootAsChiJiGiftTable(ByteBuffer _bb, ChiJiGiftTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ChiJiGiftTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ItemID { get { int o = __p.__offset(6); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int GiftPackID { get { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ItemCount { get { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int RecommendJobsArray(int j) { int o = __p.__offset(12); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int RecommendJobsLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetRecommendJobsBytes() { return __p.__vector_as_arraysegment(12); }
 private FlatBufferArray<int> RecommendJobsValue;
 public FlatBufferArray<int>  RecommendJobs
 {
  get{
  if (RecommendJobsValue == null)
  {
    RecommendJobsValue = new FlatBufferArray<int>(this.RecommendJobsArray, this.RecommendJobsLength);
  }
  return RecommendJobsValue;}
 }
  public int Weight { get { int o = __p.__offset(14); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int LevelsArray(int j) { int o = __p.__offset(16); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int LevelsLength { get { int o = __p.__offset(16); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetLevelsBytes() { return __p.__vector_as_arraysegment(16); }
 private FlatBufferArray<int> LevelsValue;
 public FlatBufferArray<int>  Levels
 {
  get{
  if (LevelsValue == null)
  {
    LevelsValue = new FlatBufferArray<int>(this.LevelsArray, this.LevelsLength);
  }
  return LevelsValue;}
 }
  public int EquipType { get { int o = __p.__offset(18); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Strengthen { get { int o = __p.__offset(20); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }

  public static Offset<ChiJiGiftTable> CreateChiJiGiftTable(FlatBufferBuilder builder,
      int ID = 0,
      int ItemID = 0,
      int GiftPackID = 0,
      int ItemCount = 0,
      VectorOffset RecommendJobsOffset = default(VectorOffset),
      int Weight = 0,
      VectorOffset LevelsOffset = default(VectorOffset),
      int EquipType = 0,
      int Strengthen = 0) {
    builder.StartObject(9);
    ChiJiGiftTable.AddStrengthen(builder, Strengthen);
    ChiJiGiftTable.AddEquipType(builder, EquipType);
    ChiJiGiftTable.AddLevels(builder, LevelsOffset);
    ChiJiGiftTable.AddWeight(builder, Weight);
    ChiJiGiftTable.AddRecommendJobs(builder, RecommendJobsOffset);
    ChiJiGiftTable.AddItemCount(builder, ItemCount);
    ChiJiGiftTable.AddGiftPackID(builder, GiftPackID);
    ChiJiGiftTable.AddItemID(builder, ItemID);
    ChiJiGiftTable.AddID(builder, ID);
    return ChiJiGiftTable.EndChiJiGiftTable(builder);
  }

  public static void StartChiJiGiftTable(FlatBufferBuilder builder) { builder.StartObject(9); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddItemID(FlatBufferBuilder builder, int ItemID) { builder.AddInt(1, ItemID, 0); }
  public static void AddGiftPackID(FlatBufferBuilder builder, int GiftPackID) { builder.AddInt(2, GiftPackID, 0); }
  public static void AddItemCount(FlatBufferBuilder builder, int ItemCount) { builder.AddInt(3, ItemCount, 0); }
  public static void AddRecommendJobs(FlatBufferBuilder builder, VectorOffset RecommendJobsOffset) { builder.AddOffset(4, RecommendJobsOffset.Value, 0); }
  public static VectorOffset CreateRecommendJobsVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartRecommendJobsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddWeight(FlatBufferBuilder builder, int Weight) { builder.AddInt(5, Weight, 0); }
  public static void AddLevels(FlatBufferBuilder builder, VectorOffset LevelsOffset) { builder.AddOffset(6, LevelsOffset.Value, 0); }
  public static VectorOffset CreateLevelsVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartLevelsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddEquipType(FlatBufferBuilder builder, int EquipType) { builder.AddInt(7, EquipType, 0); }
  public static void AddStrengthen(FlatBufferBuilder builder, int Strengthen) { builder.AddInt(8, Strengthen, 0); }
  public static Offset<ChiJiGiftTable> EndChiJiGiftTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ChiJiGiftTable>(o);
  }
  public static void FinishChiJiGiftTableBuffer(FlatBufferBuilder builder, Offset<ChiJiGiftTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

