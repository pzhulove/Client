// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class EquipScoreTable : IFlatbufferObject
{
public enum eType : int
{
 None = 0,
 STR = 1,
 INT = 2,
 STAM = 3,
 SPR = 4,
 HP = 5,
 MP = 6,
 HPRECVR = 7,
 MPRECVR = 8,
 PHYATK = 9,
 MAGATK = 10,
 PHYDEF = 11,
 MAGDEF = 12,
 DISPHYATK = 13,
 DISMAGATK = 14,
 PHYDMGRDC = 15,
 MAGDMGRDC = 16,
 ATKSPD = 17,
 MAGSPD = 18,
 MVSPD = 19,
 PHYCRT = 20,
 MAGCRT = 21,
 CRTDMG = 22,
 HIT = 23,
 MISS = 24,
 JZ = 25,
 YZ = 26,
 Light = 27,
 Fire = 28,
 Ice = 29,
 Dark = 30,
 LightAttack = 31,
 FireAttack = 32,
 IceAttack = 33,
 DarkAttack = 34,
 LightDefence = 35,
 FireDefence = 36,
 IceDefence = 37,
 DarkDefence = 38,
 GDKX = 39,
 CXKX = 40,
 ZSKX = 41,
 ZDKX = 42,
 SMKX = 43,
 XYKX = 44,
 SHKX = 45,
 BDKX = 46,
 SLKX = 47,
 HLKX = 48,
 SFKX = 49,
 JSKX = 50,
 ZZKX = 51,
 HSWORD = 100,
 TD = 101,
 ZL = 102,
 SP = 103,
 FZ = 104,
 MZ = 105,
 BJ = 106,
 PJ = 107,
 DJ = 108,
 QJ = 109,
 ZJ = 110,
 BA = 111,
 OFG = 112,
 EAST_STICK = 113,
 GLOVE = 114,
 BIKAI = 115,
 CLAW = 116,
 NUJIAN = 117,
 BUQIANG = 118,
 GUANGJIAN = 119,
 SICKLE = 120,
 TOTEM = 121,
 AXE = 122,
 BEADS = 123,
 CROSS = 124,
 SPEAR = 125,
 STICK = 126,
 ATTACK = 200,
 POWER = 201,
 REDUCE = 202,
 DISPHYATTACK = 203,
 DISPHYREDUCE = 204,
 FUJIA = 205,
 Independent = 206,
};

public enum eCrypt : int
{
 code = 265134066,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static EquipScoreTable GetRootAsEquipScoreTable(ByteBuffer _bb) { return GetRootAsEquipScoreTable(_bb, new EquipScoreTable()); }
  public static EquipScoreTable GetRootAsEquipScoreTable(ByteBuffer _bb, EquipScoreTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public EquipScoreTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public ProtoTable.EquipScoreTable.eType Type { get { int o = __p.__offset(6); return o != 0 ? (ProtoTable.EquipScoreTable.eType)__p.bb.GetInt(o + __p.bb_pos) : ProtoTable.EquipScoreTable.eType.None; } }
  public int Value { get { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }

  public static Offset<EquipScoreTable> CreateEquipScoreTable(FlatBufferBuilder builder,
      int ID = 0,
      ProtoTable.EquipScoreTable.eType Type = ProtoTable.EquipScoreTable.eType.None,
      int Value = 0) {
    builder.StartObject(3);
    EquipScoreTable.AddValue(builder, Value);
    EquipScoreTable.AddType(builder, Type);
    EquipScoreTable.AddID(builder, ID);
    return EquipScoreTable.EndEquipScoreTable(builder);
  }

  public static void StartEquipScoreTable(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddType(FlatBufferBuilder builder, ProtoTable.EquipScoreTable.eType Type) { builder.AddInt(1, (int)Type, 0); }
  public static void AddValue(FlatBufferBuilder builder, int Value) { builder.AddInt(2, Value, 0); }
  public static Offset<EquipScoreTable> EndEquipScoreTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<EquipScoreTable>(o);
  }
  public static void FinishEquipScoreTableBuffer(FlatBufferBuilder builder, Offset<EquipScoreTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

