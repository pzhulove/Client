// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class ReplacejewelsTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = 1471005552,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ReplacejewelsTable GetRootAsReplacejewelsTable(ByteBuffer _bb) { return GetRootAsReplacejewelsTable(_bb, new ReplacejewelsTable()); }
  public static ReplacejewelsTable GetRootAsReplacejewelsTable(ByteBuffer _bb, ReplacejewelsTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ReplacejewelsTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Colour { get { int o = __p.__offset(6); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Grades { get { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int BeadType { get { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int CostItem { get { int o = __p.__offset(12); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int CostNum { get { int o = __p.__offset(14); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ReplaceNum { get { int o = __p.__offset(16); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }

  public static Offset<ReplacejewelsTable> CreateReplacejewelsTable(FlatBufferBuilder builder,
      int ID = 0,
      int Colour = 0,
      int Grades = 0,
      int BeadType = 0,
      int CostItem = 0,
      int CostNum = 0,
      int ReplaceNum = 0) {
    builder.StartObject(7);
    ReplacejewelsTable.AddReplaceNum(builder, ReplaceNum);
    ReplacejewelsTable.AddCostNum(builder, CostNum);
    ReplacejewelsTable.AddCostItem(builder, CostItem);
    ReplacejewelsTable.AddBeadType(builder, BeadType);
    ReplacejewelsTable.AddGrades(builder, Grades);
    ReplacejewelsTable.AddColour(builder, Colour);
    ReplacejewelsTable.AddID(builder, ID);
    return ReplacejewelsTable.EndReplacejewelsTable(builder);
  }

  public static void StartReplacejewelsTable(FlatBufferBuilder builder) { builder.StartObject(7); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddColour(FlatBufferBuilder builder, int Colour) { builder.AddInt(1, Colour, 0); }
  public static void AddGrades(FlatBufferBuilder builder, int Grades) { builder.AddInt(2, Grades, 0); }
  public static void AddBeadType(FlatBufferBuilder builder, int BeadType) { builder.AddInt(3, BeadType, 0); }
  public static void AddCostItem(FlatBufferBuilder builder, int CostItem) { builder.AddInt(4, CostItem, 0); }
  public static void AddCostNum(FlatBufferBuilder builder, int CostNum) { builder.AddInt(5, CostNum, 0); }
  public static void AddReplaceNum(FlatBufferBuilder builder, int ReplaceNum) { builder.AddInt(6, ReplaceNum, 0); }
  public static Offset<ReplacejewelsTable> EndReplacejewelsTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ReplacejewelsTable>(o);
  }
  public static void FinishReplacejewelsTableBuffer(FlatBufferBuilder builder, Offset<ReplacejewelsTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

