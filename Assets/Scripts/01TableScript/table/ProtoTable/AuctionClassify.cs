// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class AuctionClassify : IFlatbufferObject
{
public enum eType : int
{
 AT_NONE = 0,
 AT_EQUIP = 1,
 AT_DEFENCE = 2,
 AT_JEWELRY = 3,
 AT_ARMOR = 4,
 AT_QUALITY = 5,
 AT_EXPENDABLE = 6,
 AT_MATERIAL = 7,
};

public enum eSubType : int
{
 AST_NONE = 0,
 AST_WEAPON = 1,
 AST_HEAD = 2,
 AST_CHEST = 3,
 AST_BELT = 4,
 AST_LEG = 5,
 AST_BOOT = 6,
 AST_RING = 7,
 AST_NECKLASE = 8,
 AST_BRACELET = 9,
 AST_TITLE = 10,
 AST_EXP = 19,
 AST_EnchantmentCard = 25,
 AST_HP_DRUG = 50,
 AST_MP_DRUG = 51,
 AST_BeadCard = 54,
 AttributeDrug = 62,
};

public enum eThirdType : int
{
 ATT_NONE = 0,
 ATT_HUGESWORD = 1,
 ATT_KATANA = 2,
 ATT_SHORTSWORD = 3,
 ATT_BEAMSWORD = 4,
 ATT_BLUNT = 5,
 ATT_REVOLVER = 6,
 ATT_CROSSBOW = 7,
 ATT_HANDCANNON = 8,
 ATT_RIFLE = 9,
 ATT_PISTOL = 10,
 ATT_STAFF = 11,
 ATT_WAND = 12,
 ATT_SPEAR = 13,
 ATT_STICK = 14,
 ATT_BESOM = 15,
 ATT_GLOVE = 16,
 ATT_BIKAI = 17,
 ATT_CLAW = 18,
 ATT_OFG = 19,
 ATT_EAST_STICK = 20,
 ATT_CLOTH = 51,
 ATT_SKIN = 52,
 ATT_LIGHT = 53,
 ATT_HEAVY = 54,
 ATT_PLATE = 55,
 ATT_BatteDrug = 401,
};

public enum eJob : int
{
 AC_JIANSHI = 0,
 AC_QIANGSHOU = 1,
 AC_FASHI = 2,
 AC_GEDOU = 3,
 AC_JOB_ALL = 4,
};

public enum eQuality : int
{
 QL_NONE = 0,
 QL_WHITE = 1,
 QL_BLUE = 2,
 QL_PURPLE = 3,
 QL_GREEN = 4,
 QL_PINK = 5,
 QL_YELLOW = 6,
 QL__ALL = 7,
};

public enum eSum : int
{
 SUM_SINGLE = 0,
 SUM_ALL = 1,
};

public enum eCrypt : int
{
 code = -1389355257,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static AuctionClassify GetRootAsAuctionClassify(ByteBuffer _bb) { return GetRootAsAuctionClassify(_bb, new AuctionClassify()); }
  public static AuctionClassify GetRootAsAuctionClassify(ByteBuffer _bb, AuctionClassify obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public AuctionClassify __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
  public ProtoTable.AuctionClassify.eType Type { get { int o = __p.__offset(8); return o != 0 ? (ProtoTable.AuctionClassify.eType)__p.bb.GetInt(o + __p.bb_pos) : ProtoTable.AuctionClassify.eType.AT_NONE; } }
  public int IsFirstNode { get { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public ProtoTable.AuctionClassify.eSubType SubType { get { int o = __p.__offset(12); return o != 0 ? (ProtoTable.AuctionClassify.eSubType)__p.bb.GetInt(o + __p.bb_pos) : ProtoTable.AuctionClassify.eSubType.AST_NONE; } }
  public ProtoTable.AuctionClassify.eThirdType ThirdType { get { int o = __p.__offset(14); return o != 0 ? (ProtoTable.AuctionClassify.eThirdType)__p.bb.GetInt(o + __p.bb_pos) : ProtoTable.AuctionClassify.eThirdType.ATT_NONE; } }
  public ProtoTable.AuctionClassify.eJob Job { get { int o = __p.__offset(16); return o != 0 ? (ProtoTable.AuctionClassify.eJob)__p.bb.GetInt(o + __p.bb_pos) : ProtoTable.AuctionClassify.eJob.AC_JIANSHI; } }
  public ProtoTable.AuctionClassify.eQuality Quality { get { int o = __p.__offset(18); return o != 0 ? (ProtoTable.AuctionClassify.eQuality)__p.bb.GetInt(o + __p.bb_pos) : ProtoTable.AuctionClassify.eQuality.QL_NONE; } }
  public ProtoTable.AuctionClassify.eSum Sum { get { int o = __p.__offset(20); return o != 0 ? (ProtoTable.AuctionClassify.eSum)__p.bb.GetInt(o + __p.bb_pos) : ProtoTable.AuctionClassify.eSum.SUM_SINGLE; } }
  public int ChildrenIDsArray(int j) { int o = __p.__offset(22); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int ChildrenIDsLength { get { int o = __p.__offset(22); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetChildrenIDsBytes() { return __p.__vector_as_arraysegment(22); }
 private FlatBufferArray<int> ChildrenIDsValue;
 public FlatBufferArray<int>  ChildrenIDs
 {
  get{
  if (ChildrenIDsValue == null)
  {
    ChildrenIDsValue = new FlatBufferArray<int>(this.ChildrenIDsArray, this.ChildrenIDsLength);
  }
  return ChildrenIDsValue;}
 }

  public static Offset<AuctionClassify> CreateAuctionClassify(FlatBufferBuilder builder,
      int ID = 0,
      StringOffset NameOffset = default(StringOffset),
      ProtoTable.AuctionClassify.eType Type = ProtoTable.AuctionClassify.eType.AT_NONE,
      int IsFirstNode = 0,
      ProtoTable.AuctionClassify.eSubType SubType = ProtoTable.AuctionClassify.eSubType.AST_NONE,
      ProtoTable.AuctionClassify.eThirdType ThirdType = ProtoTable.AuctionClassify.eThirdType.ATT_NONE,
      ProtoTable.AuctionClassify.eJob Job = ProtoTable.AuctionClassify.eJob.AC_JIANSHI,
      ProtoTable.AuctionClassify.eQuality Quality = ProtoTable.AuctionClassify.eQuality.QL_NONE,
      ProtoTable.AuctionClassify.eSum Sum = ProtoTable.AuctionClassify.eSum.SUM_SINGLE,
      VectorOffset ChildrenIDsOffset = default(VectorOffset)) {
    builder.StartObject(10);
    AuctionClassify.AddChildrenIDs(builder, ChildrenIDsOffset);
    AuctionClassify.AddSum(builder, Sum);
    AuctionClassify.AddQuality(builder, Quality);
    AuctionClassify.AddJob(builder, Job);
    AuctionClassify.AddThirdType(builder, ThirdType);
    AuctionClassify.AddSubType(builder, SubType);
    AuctionClassify.AddIsFirstNode(builder, IsFirstNode);
    AuctionClassify.AddType(builder, Type);
    AuctionClassify.AddName(builder, NameOffset);
    AuctionClassify.AddID(builder, ID);
    return AuctionClassify.EndAuctionClassify(builder);
  }

  public static void StartAuctionClassify(FlatBufferBuilder builder) { builder.StartObject(10); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset NameOffset) { builder.AddOffset(1, NameOffset.Value, 0); }
  public static void AddType(FlatBufferBuilder builder, ProtoTable.AuctionClassify.eType Type) { builder.AddInt(2, (int)Type, 0); }
  public static void AddIsFirstNode(FlatBufferBuilder builder, int IsFirstNode) { builder.AddInt(3, IsFirstNode, 0); }
  public static void AddSubType(FlatBufferBuilder builder, ProtoTable.AuctionClassify.eSubType SubType) { builder.AddInt(4, (int)SubType, 0); }
  public static void AddThirdType(FlatBufferBuilder builder, ProtoTable.AuctionClassify.eThirdType ThirdType) { builder.AddInt(5, (int)ThirdType, 0); }
  public static void AddJob(FlatBufferBuilder builder, ProtoTable.AuctionClassify.eJob Job) { builder.AddInt(6, (int)Job, 0); }
  public static void AddQuality(FlatBufferBuilder builder, ProtoTable.AuctionClassify.eQuality Quality) { builder.AddInt(7, (int)Quality, 0); }
  public static void AddSum(FlatBufferBuilder builder, ProtoTable.AuctionClassify.eSum Sum) { builder.AddInt(8, (int)Sum, 0); }
  public static void AddChildrenIDs(FlatBufferBuilder builder, VectorOffset ChildrenIDsOffset) { builder.AddOffset(9, ChildrenIDsOffset.Value, 0); }
  public static VectorOffset CreateChildrenIDsVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartChildrenIDsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<AuctionClassify> EndAuctionClassify(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<AuctionClassify>(o);
  }
  public static void FinishAuctionClassifyBuffer(FlatBufferBuilder builder, Offset<AuctionClassify> offset) { builder.Finish(offset.Value); }
};


}


#endif

