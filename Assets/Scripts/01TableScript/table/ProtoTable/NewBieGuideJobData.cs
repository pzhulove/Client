// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class NewBieGuideJobData : IFlatbufferObject
{
public enum eCrypt : int
{
 code = 1083542827,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static NewBieGuideJobData GetRootAsNewBieGuideJobData(ByteBuffer _bb) { return GetRootAsNewBieGuideJobData(_bb, new NewBieGuideJobData()); }
  public static NewBieGuideJobData GetRootAsNewBieGuideJobData(ByteBuffer _bb, NewBieGuideJobData obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public NewBieGuideJobData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
  public int CDReduceRate { get { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int AttackSpped { get { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int SpellSpeed { get { int o = __p.__offset(12); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int WalkSpeed { get { int o = __p.__offset(14); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int SkillLevel { get { int o = __p.__offset(16); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int SkillListArray(int j) { int o = __p.__offset(18); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int SkillListLength { get { int o = __p.__offset(18); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetSkillListBytes() { return __p.__vector_as_arraysegment(18); }
 private FlatBufferArray<int> SkillListValue;
 public FlatBufferArray<int>  SkillList
 {
  get{
  if (SkillListValue == null)
  {
    SkillListValue = new FlatBufferArray<int>(this.SkillListArray, this.SkillListLength);
  }
  return SkillListValue;}
 }
  public int EquipmentIDArray(int j) { int o = __p.__offset(20); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int EquipmentIDLength { get { int o = __p.__offset(20); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetEquipmentIDBytes() { return __p.__vector_as_arraysegment(20); }
 private FlatBufferArray<int> EquipmentIDValue;
 public FlatBufferArray<int>  EquipmentID
 {
  get{
  if (EquipmentIDValue == null)
  {
    EquipmentIDValue = new FlatBufferArray<int>(this.EquipmentIDArray, this.EquipmentIDLength);
  }
  return EquipmentIDValue;}
 }
  public int SecondComboSkillArray(int j) { int o = __p.__offset(22); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int SecondComboSkillLength { get { int o = __p.__offset(22); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetSecondComboSkillBytes() { return __p.__vector_as_arraysegment(22); }
 private FlatBufferArray<int> SecondComboSkillValue;
 public FlatBufferArray<int>  SecondComboSkill
 {
  get{
  if (SecondComboSkillValue == null)
  {
    SecondComboSkillValue = new FlatBufferArray<int>(this.SecondComboSkillArray, this.SecondComboSkillLength);
  }
  return SecondComboSkillValue;}
 }
  public int ThirdComboSkillArray(int j) { int o = __p.__offset(24); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int ThirdComboSkillLength { get { int o = __p.__offset(24); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetThirdComboSkillBytes() { return __p.__vector_as_arraysegment(24); }
 private FlatBufferArray<int> ThirdComboSkillValue;
 public FlatBufferArray<int>  ThirdComboSkill
 {
  get{
  if (ThirdComboSkillValue == null)
  {
    ThirdComboSkillValue = new FlatBufferArray<int>(this.ThirdComboSkillArray, this.ThirdComboSkillLength);
  }
  return ThirdComboSkillValue;}
 }

  public static Offset<NewBieGuideJobData> CreateNewBieGuideJobData(FlatBufferBuilder builder,
      int ID = 0,
      StringOffset NameOffset = default(StringOffset),
      int CDReduceRate = 0,
      int AttackSpped = 0,
      int SpellSpeed = 0,
      int WalkSpeed = 0,
      int SkillLevel = 0,
      VectorOffset SkillListOffset = default(VectorOffset),
      VectorOffset EquipmentIDOffset = default(VectorOffset),
      VectorOffset SecondComboSkillOffset = default(VectorOffset),
      VectorOffset ThirdComboSkillOffset = default(VectorOffset)) {
    builder.StartObject(11);
    NewBieGuideJobData.AddThirdComboSkill(builder, ThirdComboSkillOffset);
    NewBieGuideJobData.AddSecondComboSkill(builder, SecondComboSkillOffset);
    NewBieGuideJobData.AddEquipmentID(builder, EquipmentIDOffset);
    NewBieGuideJobData.AddSkillList(builder, SkillListOffset);
    NewBieGuideJobData.AddSkillLevel(builder, SkillLevel);
    NewBieGuideJobData.AddWalkSpeed(builder, WalkSpeed);
    NewBieGuideJobData.AddSpellSpeed(builder, SpellSpeed);
    NewBieGuideJobData.AddAttackSpped(builder, AttackSpped);
    NewBieGuideJobData.AddCDReduceRate(builder, CDReduceRate);
    NewBieGuideJobData.AddName(builder, NameOffset);
    NewBieGuideJobData.AddID(builder, ID);
    return NewBieGuideJobData.EndNewBieGuideJobData(builder);
  }

  public static void StartNewBieGuideJobData(FlatBufferBuilder builder) { builder.StartObject(11); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset NameOffset) { builder.AddOffset(1, NameOffset.Value, 0); }
  public static void AddCDReduceRate(FlatBufferBuilder builder, int CDReduceRate) { builder.AddInt(2, CDReduceRate, 0); }
  public static void AddAttackSpped(FlatBufferBuilder builder, int AttackSpped) { builder.AddInt(3, AttackSpped, 0); }
  public static void AddSpellSpeed(FlatBufferBuilder builder, int SpellSpeed) { builder.AddInt(4, SpellSpeed, 0); }
  public static void AddWalkSpeed(FlatBufferBuilder builder, int WalkSpeed) { builder.AddInt(5, WalkSpeed, 0); }
  public static void AddSkillLevel(FlatBufferBuilder builder, int SkillLevel) { builder.AddInt(6, SkillLevel, 0); }
  public static void AddSkillList(FlatBufferBuilder builder, VectorOffset SkillListOffset) { builder.AddOffset(7, SkillListOffset.Value, 0); }
  public static VectorOffset CreateSkillListVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartSkillListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddEquipmentID(FlatBufferBuilder builder, VectorOffset EquipmentIDOffset) { builder.AddOffset(8, EquipmentIDOffset.Value, 0); }
  public static VectorOffset CreateEquipmentIDVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartEquipmentIDVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddSecondComboSkill(FlatBufferBuilder builder, VectorOffset SecondComboSkillOffset) { builder.AddOffset(9, SecondComboSkillOffset.Value, 0); }
  public static VectorOffset CreateSecondComboSkillVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartSecondComboSkillVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddThirdComboSkill(FlatBufferBuilder builder, VectorOffset ThirdComboSkillOffset) { builder.AddOffset(10, ThirdComboSkillOffset.Value, 0); }
  public static VectorOffset CreateThirdComboSkillVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartThirdComboSkillVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<NewBieGuideJobData> EndNewBieGuideJobData(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<NewBieGuideJobData>(o);
  }
  public static void FinishNewBieGuideJobDataBuffer(FlatBufferBuilder builder, Offset<NewBieGuideJobData> offset) { builder.Finish(offset.Value); }
};


}


#endif

