// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class GuildSkillTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = -1186932208,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static GuildSkillTable GetRootAsGuildSkillTable(ByteBuffer _bb) { return GetRootAsGuildSkillTable(_bb, new GuildSkillTable()); }
  public static GuildSkillTable GetRootAsGuildSkillTable(ByteBuffer _bb, GuildSkillTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public GuildSkillTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int SkillID { get { int o = __p.__offset(6); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string Desc { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetDescBytes() { return __p.__vector_as_arraysegment(8); }
  public int SkillLevel { get { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int NeedBattleLevel { get { int o = __p.__offset(12); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ContriCost { get { int o = __p.__offset(14); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int GoldCost { get { int o = __p.__offset(16); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }

  public static Offset<GuildSkillTable> CreateGuildSkillTable(FlatBufferBuilder builder,
      int ID = 0,
      int SkillID = 0,
      StringOffset DescOffset = default(StringOffset),
      int SkillLevel = 0,
      int NeedBattleLevel = 0,
      int ContriCost = 0,
      int GoldCost = 0) {
    builder.StartObject(7);
    GuildSkillTable.AddGoldCost(builder, GoldCost);
    GuildSkillTable.AddContriCost(builder, ContriCost);
    GuildSkillTable.AddNeedBattleLevel(builder, NeedBattleLevel);
    GuildSkillTable.AddSkillLevel(builder, SkillLevel);
    GuildSkillTable.AddDesc(builder, DescOffset);
    GuildSkillTable.AddSkillID(builder, SkillID);
    GuildSkillTable.AddID(builder, ID);
    return GuildSkillTable.EndGuildSkillTable(builder);
  }

  public static void StartGuildSkillTable(FlatBufferBuilder builder) { builder.StartObject(7); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddSkillID(FlatBufferBuilder builder, int SkillID) { builder.AddInt(1, SkillID, 0); }
  public static void AddDesc(FlatBufferBuilder builder, StringOffset DescOffset) { builder.AddOffset(2, DescOffset.Value, 0); }
  public static void AddSkillLevel(FlatBufferBuilder builder, int SkillLevel) { builder.AddInt(3, SkillLevel, 0); }
  public static void AddNeedBattleLevel(FlatBufferBuilder builder, int NeedBattleLevel) { builder.AddInt(4, NeedBattleLevel, 0); }
  public static void AddContriCost(FlatBufferBuilder builder, int ContriCost) { builder.AddInt(5, ContriCost, 0); }
  public static void AddGoldCost(FlatBufferBuilder builder, int GoldCost) { builder.AddInt(6, GoldCost, 0); }
  public static Offset<GuildSkillTable> EndGuildSkillTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<GuildSkillTable>(o);
  }
  public static void FinishGuildSkillTableBuffer(FlatBufferBuilder builder, Offset<GuildSkillTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

