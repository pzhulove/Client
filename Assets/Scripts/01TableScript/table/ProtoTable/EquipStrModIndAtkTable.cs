// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class EquipStrModIndAtkTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = 8120504,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static EquipStrModIndAtkTable GetRootAsEquipStrModIndAtkTable(ByteBuffer _bb) { return GetRootAsEquipStrModIndAtkTable(_bb, new EquipStrModIndAtkTable()); }
  public static EquipStrModIndAtkTable GetRootAsEquipStrModIndAtkTable(ByteBuffer _bb, EquipStrModIndAtkTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public EquipStrModIndAtkTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int WpStrenthMod_1Array(int j) { int o = __p.__offset(6); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int WpStrenthMod_1Length { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetWpStrenthMod1Bytes() { return __p.__vector_as_arraysegment(6); }
 private FlatBufferArray<int> WpStrenthMod_1Value;
 public FlatBufferArray<int>  WpStrenthMod_1
 {
  get{
  if (WpStrenthMod_1Value == null)
  {
    WpStrenthMod_1Value = new FlatBufferArray<int>(this.WpStrenthMod_1Array, this.WpStrenthMod_1Length);
  }
  return WpStrenthMod_1Value;}
 }
  public int WpColorQaMod_1Array(int j) { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int WpColorQaMod_1Length { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetWpColorQaMod1Bytes() { return __p.__vector_as_arraysegment(8); }
 private FlatBufferArray<int> WpColorQaMod_1Value;
 public FlatBufferArray<int>  WpColorQaMod_1
 {
  get{
  if (WpColorQaMod_1Value == null)
  {
    WpColorQaMod_1Value = new FlatBufferArray<int>(this.WpColorQaMod_1Array, this.WpColorQaMod_1Length);
  }
  return WpColorQaMod_1Value;}
 }
  public int WpColorQbMod_1Array(int j) { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int WpColorQbMod_1Length { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetWpColorQbMod1Bytes() { return __p.__vector_as_arraysegment(10); }
 private FlatBufferArray<int> WpColorQbMod_1Value;
 public FlatBufferArray<int>  WpColorQbMod_1
 {
  get{
  if (WpColorQbMod_1Value == null)
  {
    WpColorQbMod_1Value = new FlatBufferArray<int>(this.WpColorQbMod_1Array, this.WpColorQbMod_1Length);
  }
  return WpColorQbMod_1Value;}
 }
  public int EquipModArray(int j) { int o = __p.__offset(12); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int EquipModLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetEquipModBytes() { return __p.__vector_as_arraysegment(12); }
 private FlatBufferArray<int> EquipModValue;
 public FlatBufferArray<int>  EquipMod
 {
  get{
  if (EquipModValue == null)
  {
    EquipModValue = new FlatBufferArray<int>(this.EquipModArray, this.EquipModLength);
  }
  return EquipModValue;}
 }

  public static Offset<EquipStrModIndAtkTable> CreateEquipStrModIndAtkTable(FlatBufferBuilder builder,
      int ID = 0,
      VectorOffset WpStrenthMod_1Offset = default(VectorOffset),
      VectorOffset WpColorQaMod_1Offset = default(VectorOffset),
      VectorOffset WpColorQbMod_1Offset = default(VectorOffset),
      VectorOffset EquipModOffset = default(VectorOffset)) {
    builder.StartObject(5);
    EquipStrModIndAtkTable.AddEquipMod(builder, EquipModOffset);
    EquipStrModIndAtkTable.AddWpColorQbMod1(builder, WpColorQbMod_1Offset);
    EquipStrModIndAtkTable.AddWpColorQaMod1(builder, WpColorQaMod_1Offset);
    EquipStrModIndAtkTable.AddWpStrenthMod1(builder, WpStrenthMod_1Offset);
    EquipStrModIndAtkTable.AddID(builder, ID);
    return EquipStrModIndAtkTable.EndEquipStrModIndAtkTable(builder);
  }

  public static void StartEquipStrModIndAtkTable(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddWpStrenthMod1(FlatBufferBuilder builder, VectorOffset WpStrenthMod1Offset) { builder.AddOffset(1, WpStrenthMod1Offset.Value, 0); }
  public static VectorOffset CreateWpStrenthMod1Vector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartWpStrenthMod1Vector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddWpColorQaMod1(FlatBufferBuilder builder, VectorOffset WpColorQaMod1Offset) { builder.AddOffset(2, WpColorQaMod1Offset.Value, 0); }
  public static VectorOffset CreateWpColorQaMod1Vector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartWpColorQaMod1Vector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddWpColorQbMod1(FlatBufferBuilder builder, VectorOffset WpColorQbMod1Offset) { builder.AddOffset(3, WpColorQbMod1Offset.Value, 0); }
  public static VectorOffset CreateWpColorQbMod1Vector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartWpColorQbMod1Vector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddEquipMod(FlatBufferBuilder builder, VectorOffset EquipModOffset) { builder.AddOffset(4, EquipModOffset.Value, 0); }
  public static VectorOffset CreateEquipModVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartEquipModVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<EquipStrModIndAtkTable> EndEquipStrModIndAtkTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<EquipStrModIndAtkTable>(o);
  }
  public static void FinishEquipStrModIndAtkTableBuffer(FlatBufferBuilder builder, Offset<EquipStrModIndAtkTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

