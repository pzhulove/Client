// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class ArtifactJarLotteryTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = 1803631640,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ArtifactJarLotteryTable GetRootAsArtifactJarLotteryTable(ByteBuffer _bb) { return GetRootAsArtifactJarLotteryTable(_bb, new ArtifactJarLotteryTable()); }
  public static ArtifactJarLotteryTable GetRootAsArtifactJarLotteryTable(ByteBuffer _bb, ArtifactJarLotteryTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ArtifactJarLotteryTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int JarId { get { int o = __p.__offset(6); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int rewardItemId { get { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int rewardItemNum { get { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int weight { get { int o = __p.__offset(12); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int limitNum { get { int o = __p.__offset(14); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }

  public static Offset<ArtifactJarLotteryTable> CreateArtifactJarLotteryTable(FlatBufferBuilder builder,
      int ID = 0,
      int JarId = 0,
      int rewardItemId = 0,
      int rewardItemNum = 0,
      int weight = 0,
      int limitNum = 0) {
    builder.StartObject(6);
    ArtifactJarLotteryTable.AddLimitNum(builder, limitNum);
    ArtifactJarLotteryTable.AddWeight(builder, weight);
    ArtifactJarLotteryTable.AddRewardItemNum(builder, rewardItemNum);
    ArtifactJarLotteryTable.AddRewardItemId(builder, rewardItemId);
    ArtifactJarLotteryTable.AddJarId(builder, JarId);
    ArtifactJarLotteryTable.AddID(builder, ID);
    return ArtifactJarLotteryTable.EndArtifactJarLotteryTable(builder);
  }

  public static void StartArtifactJarLotteryTable(FlatBufferBuilder builder) { builder.StartObject(6); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddJarId(FlatBufferBuilder builder, int JarId) { builder.AddInt(1, JarId, 0); }
  public static void AddRewardItemId(FlatBufferBuilder builder, int rewardItemId) { builder.AddInt(2, rewardItemId, 0); }
  public static void AddRewardItemNum(FlatBufferBuilder builder, int rewardItemNum) { builder.AddInt(3, rewardItemNum, 0); }
  public static void AddWeight(FlatBufferBuilder builder, int weight) { builder.AddInt(4, weight, 0); }
  public static void AddLimitNum(FlatBufferBuilder builder, int limitNum) { builder.AddInt(5, limitNum, 0); }
  public static Offset<ArtifactJarLotteryTable> EndArtifactJarLotteryTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ArtifactJarLotteryTable>(o);
  }
  public static void FinishArtifactJarLotteryTableBuffer(FlatBufferBuilder builder, Offset<ArtifactJarLotteryTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

