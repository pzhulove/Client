// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class EquipRecoveryRewardTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = 1145868590,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static EquipRecoveryRewardTable GetRootAsEquipRecoveryRewardTable(ByteBuffer _bb) { return GetRootAsEquipRecoveryRewardTable(_bb, new EquipRecoveryRewardTable()); }
  public static EquipRecoveryRewardTable GetRootAsEquipRecoveryRewardTable(ByteBuffer _bb, EquipRecoveryRewardTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public EquipRecoveryRewardTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Integral { get { int o = __p.__offset(6); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string IconPath { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetIconPathBytes() { return __p.__vector_as_arraysegment(8); }
  public string Desc { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetDescBytes() { return __p.__vector_as_arraysegment(10); }
  public string SpecialEffects { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetSpecialEffectsBytes() { return __p.__vector_as_arraysegment(12); }
  public string Reward { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetRewardBytes() { return __p.__vector_as_arraysegment(14); }
  public int JarID { get { int o = __p.__offset(16); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ShowID { get { int o = __p.__offset(18); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string IconPath2 { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetIconPath2Bytes() { return __p.__vector_as_arraysegment(20); }

  public static Offset<EquipRecoveryRewardTable> CreateEquipRecoveryRewardTable(FlatBufferBuilder builder,
      int ID = 0,
      int Integral = 0,
      StringOffset IconPathOffset = default(StringOffset),
      StringOffset DescOffset = default(StringOffset),
      StringOffset SpecialEffectsOffset = default(StringOffset),
      StringOffset RewardOffset = default(StringOffset),
      int JarID = 0,
      int ShowID = 0,
      StringOffset IconPath2Offset = default(StringOffset)) {
    builder.StartObject(9);
    EquipRecoveryRewardTable.AddIconPath2(builder, IconPath2Offset);
    EquipRecoveryRewardTable.AddShowID(builder, ShowID);
    EquipRecoveryRewardTable.AddJarID(builder, JarID);
    EquipRecoveryRewardTable.AddReward(builder, RewardOffset);
    EquipRecoveryRewardTable.AddSpecialEffects(builder, SpecialEffectsOffset);
    EquipRecoveryRewardTable.AddDesc(builder, DescOffset);
    EquipRecoveryRewardTable.AddIconPath(builder, IconPathOffset);
    EquipRecoveryRewardTable.AddIntegral(builder, Integral);
    EquipRecoveryRewardTable.AddID(builder, ID);
    return EquipRecoveryRewardTable.EndEquipRecoveryRewardTable(builder);
  }

  public static void StartEquipRecoveryRewardTable(FlatBufferBuilder builder) { builder.StartObject(9); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddIntegral(FlatBufferBuilder builder, int Integral) { builder.AddInt(1, Integral, 0); }
  public static void AddIconPath(FlatBufferBuilder builder, StringOffset IconPathOffset) { builder.AddOffset(2, IconPathOffset.Value, 0); }
  public static void AddDesc(FlatBufferBuilder builder, StringOffset DescOffset) { builder.AddOffset(3, DescOffset.Value, 0); }
  public static void AddSpecialEffects(FlatBufferBuilder builder, StringOffset SpecialEffectsOffset) { builder.AddOffset(4, SpecialEffectsOffset.Value, 0); }
  public static void AddReward(FlatBufferBuilder builder, StringOffset RewardOffset) { builder.AddOffset(5, RewardOffset.Value, 0); }
  public static void AddJarID(FlatBufferBuilder builder, int JarID) { builder.AddInt(6, JarID, 0); }
  public static void AddShowID(FlatBufferBuilder builder, int ShowID) { builder.AddInt(7, ShowID, 0); }
  public static void AddIconPath2(FlatBufferBuilder builder, StringOffset IconPath2Offset) { builder.AddOffset(8, IconPath2Offset.Value, 0); }
  public static Offset<EquipRecoveryRewardTable> EndEquipRecoveryRewardTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<EquipRecoveryRewardTable>(o);
  }
  public static void FinishEquipRecoveryRewardTableBuffer(FlatBufferBuilder builder, Offset<EquipRecoveryRewardTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

