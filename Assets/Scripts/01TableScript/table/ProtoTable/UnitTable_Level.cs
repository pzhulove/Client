// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class UnitTable_Level : IFlatbufferObject
{
public enum eType : int
{
 HERO = 0,
 MONSTER = 1,
 ELITE = 2,
 BOSS = 3,
 NPC = 4,
 HELL = 5,
 ACTIVITYMONSTER = 6,
 ACCOMPANY = 7,
 SKILL_MONSTER = 8,
 EGG = 9,
 ZHS = 10,
};

public enum eCamp : int
{
 C_HERO = 0,
 C_ENEMY = 1,
 C_ENEMY2 = 2,
};

public enum eMonsterRace : int
{
 NONE = 0,
 EVIL = 1,
 UNDEAD = 2,
 ELF = 3,
 HUMAN = 4,
 HOMINIS = 5,
 PUPPET = 6,
 MACHINE = 7,
};

public enum eBornAI : int
{
 Start = 0,
 None = 1,
};

public enum eCrypt : int
{
 code = -601822511,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static UnitTable_Level GetRootAsUnitTable_Level(ByteBuffer _bb) { return GetRootAsUnitTable_Level(_bb, new UnitTable_Level()); }
  public static UnitTable_Level GetRootAsUnitTable_Level(ByteBuffer _bb, UnitTable_Level obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public UnitTable_Level __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
  public string BossShowActionName { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetBossShowActionNameBytes() { return __p.__vector_as_arraysegment(8); }
  public string Desc { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetDescBytes() { return __p.__vector_as_arraysegment(10); }
  public int MonsterMode { get { int o = __p.__offset(12); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public ProtoTable.UnitTable_Level.eType Type { get { int o = __p.__offset(14); return o != 0 ? (ProtoTable.UnitTable_Level.eType)__p.bb.GetInt(o + __p.bb_pos) : ProtoTable.UnitTable_Level.eType.HERO; } }
  public int IsShowPortrait { get { int o = __p.__offset(16); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public ProtoTable.UnitTable_Level.eCamp Camp { get { int o = __p.__offset(18); return o != 0 ? (ProtoTable.UnitTable_Level.eCamp)__p.bb.GetInt(o + __p.bb_pos) : ProtoTable.UnitTable_Level.eCamp.C_HERO; } }
  public ProtoTable.UnitTable_Level.eMonsterRace MonsterRace { get { int o = __p.__offset(20); return o != 0 ? (ProtoTable.UnitTable_Level.eMonsterRace)__p.bb.GetInt(o + __p.bb_pos) : ProtoTable.UnitTable_Level.eMonsterRace.NONE; } }
  public int Mode { get { int o = __p.__offset(22); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Weight { get { int o = __p.__offset(24); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int AutoFightNeedAttackFirst { get { int o = __p.__offset(26); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int SkillMonsterCanBeAttack { get { int o = __p.__offset(28); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public UnionCell Scale { get { int o = __p.__offset(30); return o != 0 ? (UnionCell)(new UnionCell()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) :(UnionCell)UnionCell.Default(); } }
  public int enhanceRadius { get { int o = __p.__offset(32); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int overHeadHeight { get { int o = __p.__offset(34); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int buffOriginHeight { get { int o = __p.__offset(36); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int WalkSpeed { get { int o = __p.__offset(38); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int WalkAnimationSpeedPerent { get { int o = __p.__offset(40); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int MonsterTitle { get { int o = __p.__offset(42); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int AttackSkillID { get { int o = __p.__offset(44); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int GetupBati { get { int o = __p.__offset(46); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int GetupSkillRand { get { int o = __p.__offset(48); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int GetupSkillID { get { int o = __p.__offset(50); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int HitSkillRand { get { int o = __p.__offset(52); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int HitSkillID { get { int o = __p.__offset(54); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int SkillIDsArray(int j) { int o = __p.__offset(56); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int SkillIDsLength { get { int o = __p.__offset(56); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetSkillIDsBytes() { return __p.__vector_as_arraysegment(56); }
 private FlatBufferArray<int> SkillIDsValue;
 public FlatBufferArray<int>  SkillIDs
 {
  get{
  if (SkillIDsValue == null)
  {
    SkillIDsValue = new FlatBufferArray<int>(this.SkillIDsArray, this.SkillIDsLength);
  }
  return SkillIDsValue;}
 }
  public string Hurt { get { int o = __p.__offset(58); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetHurtBytes() { return __p.__vector_as_arraysegment(58); }
  public string FootEffectName { get { int o = __p.__offset(60); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetFootEffectNameBytes() { return __p.__vector_as_arraysegment(60); }
  public string WeaponModel { get { int o = __p.__offset(62); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetWeaponModelBytes() { return __p.__vector_as_arraysegment(62); }
  public string WeaponLocator { get { int o = __p.__offset(64); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetWeaponLocatorBytes() { return __p.__vector_as_arraysegment(64); }
  public int Exp { get { int o = __p.__offset(66); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string PrefixEffect { get { int o = __p.__offset(68); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetPrefixEffectBytes() { return __p.__vector_as_arraysegment(68); }
  public int DefaultAttackHitSFXID { get { int o = __p.__offset(70); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int DropID { get { int o = __p.__offset(72); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int AwardID { get { int o = __p.__offset(74); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public UnionCell ExistDuration { get { int o = __p.__offset(76); return o != 0 ? (UnionCell)(new UnionCell()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) :(UnionCell)UnionCell.Default(); } }
  public UnionCell PVPExistDuration { get { int o = __p.__offset(78); return o != 0 ? (UnionCell)(new UnionCell()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) :(UnionCell)UnionCell.Default(); } }
  public int FloatValue { get { int o = __p.__offset(80); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string DescriptionA { get { int o = __p.__offset(82); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetDescriptionABytes() { return __p.__vector_as_arraysegment(82); }
  public int ValueA { get { int o = __p.__offset(84); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int WalkSpeechArray(int j) { int o = __p.__offset(86); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int WalkSpeechLength { get { int o = __p.__offset(86); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetWalkSpeechBytes() { return __p.__vector_as_arraysegment(86); }
 private FlatBufferArray<int> WalkSpeechValue;
 public FlatBufferArray<int>  WalkSpeech
 {
  get{
  if (WalkSpeechValue == null)
  {
    WalkSpeechValue = new FlatBufferArray<int>(this.WalkSpeechArray, this.WalkSpeechLength);
  }
  return WalkSpeechValue;}
 }
  public int AttackSpeechArray(int j) { int o = __p.__offset(88); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int AttackSpeechLength { get { int o = __p.__offset(88); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetAttackSpeechBytes() { return __p.__vector_as_arraysegment(88); }
 private FlatBufferArray<int> AttackSpeechValue;
 public FlatBufferArray<int>  AttackSpeech
 {
  get{
  if (AttackSpeechValue == null)
  {
    AttackSpeechValue = new FlatBufferArray<int>(this.AttackSpeechArray, this.AttackSpeechLength);
  }
  return AttackSpeechValue;}
 }
  public int BirthSpeechArray(int j) { int o = __p.__offset(90); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int BirthSpeechLength { get { int o = __p.__offset(90); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetBirthSpeechBytes() { return __p.__vector_as_arraysegment(90); }
 private FlatBufferArray<int> BirthSpeechValue;
 public FlatBufferArray<int>  BirthSpeech
 {
  get{
  if (BirthSpeechValue == null)
  {
    BirthSpeechValue = new FlatBufferArray<int>(this.BirthSpeechArray, this.BirthSpeechLength);
  }
  return BirthSpeechValue;}
 }
  public bool ShowName { get { int o = __p.__offset(92); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool ShowHPBar { get { int o = __p.__offset(94); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool ShowFootBar { get { int o = __p.__offset(96); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public int AbilityChangeArray(int j) { int o = __p.__offset(98); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int AbilityChangeLength { get { int o = __p.__offset(98); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetAbilityChangeBytes() { return __p.__vector_as_arraysegment(98); }
 private FlatBufferArray<int> AbilityChangeValue;
 public FlatBufferArray<int>  AbilityChange
 {
  get{
  if (AbilityChangeValue == null)
  {
    AbilityChangeValue = new FlatBufferArray<int>(this.AbilityChangeArray, this.AbilityChangeLength);
  }
  return AbilityChangeValue;}
 }
  public int BornBuffArray(int j) { int o = __p.__offset(100); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int BornBuffLength { get { int o = __p.__offset(100); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetBornBuffBytes() { return __p.__vector_as_arraysegment(100); }
 private FlatBufferArray<int> BornBuffValue;
 public FlatBufferArray<int>  BornBuff
 {
  get{
  if (BornBuffValue == null)
  {
    BornBuffValue = new FlatBufferArray<int>(this.BornBuffArray, this.BornBuffLength);
  }
  return BornBuffValue;}
 }
  public int BornBuff2Array(int j) { int o = __p.__offset(102); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int BornBuff2Length { get { int o = __p.__offset(102); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetBornBuff2Bytes() { return __p.__vector_as_arraysegment(102); }
 private FlatBufferArray<int> BornBuff2Value;
 public FlatBufferArray<int>  BornBuff2
 {
  get{
  if (BornBuff2Value == null)
  {
    BornBuff2Value = new FlatBufferArray<int>(this.BornBuff2Array, this.BornBuff2Length);
  }
  return BornBuff2Value;}
 }
  public int BornMechanismArray(int j) { int o = __p.__offset(104); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int BornMechanismLength { get { int o = __p.__offset(104); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetBornMechanismBytes() { return __p.__vector_as_arraysegment(104); }
 private FlatBufferArray<int> BornMechanismValue;
 public FlatBufferArray<int>  BornMechanism
 {
  get{
  if (BornMechanismValue == null)
  {
    BornMechanismValue = new FlatBufferArray<int>(this.BornMechanismArray, this.BornMechanismLength);
  }
  return BornMechanismValue;}
 }
  public UnionCell maxFixHp { get { int o = __p.__offset(106); return o != 0 ? (UnionCell)(new UnionCell()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) :(UnionCell)UnionCell.Default(); } }
  public int maxHp { get { int o = __p.__offset(108); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int maxMp { get { int o = __p.__offset(110); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int hpRecover { get { int o = __p.__offset(112); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int mpRecover { get { int o = __p.__offset(114); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int attack { get { int o = __p.__offset(116); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int magicAttack { get { int o = __p.__offset(118); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int defence { get { int o = __p.__offset(120); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int magicDefence { get { int o = __p.__offset(122); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int attackSpeed { get { int o = __p.__offset(124); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int spellSpeed { get { int o = __p.__offset(126); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int moveSpeed { get { int o = __p.__offset(128); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ciriticalAttack { get { int o = __p.__offset(130); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ciriticalMagicAttack { get { int o = __p.__offset(132); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int dex { get { int o = __p.__offset(134); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int dodge { get { int o = __p.__offset(136); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int frozen { get { int o = __p.__offset(138); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int hard { get { int o = __p.__offset(140); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int cdReduceRate { get { int o = __p.__offset(142); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int baseAtk { get { int o = __p.__offset(144); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int baseInt { get { int o = __p.__offset(146); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int sta { get { int o = __p.__offset(148); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int spr { get { int o = __p.__offset(150); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ignoreDefAttackAdd { get { int o = __p.__offset(152); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ignoreDefMagicAttackAdd { get { int o = __p.__offset(154); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ElementsArray(int j) { int o = __p.__offset(156); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int ElementsLength { get { int o = __p.__offset(156); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetElementsBytes() { return __p.__vector_as_arraysegment(156); }
 private FlatBufferArray<int> ElementsValue;
 public FlatBufferArray<int>  Elements
 {
  get{
  if (ElementsValue == null)
  {
    ElementsValue = new FlatBufferArray<int>(this.ElementsArray, this.ElementsLength);
  }
  return ElementsValue;}
 }
  public UnionCell LightAttack { get { int o = __p.__offset(158); return o != 0 ? (UnionCell)(new UnionCell()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) :(UnionCell)UnionCell.Default(); } }
  public UnionCell FireAttack { get { int o = __p.__offset(160); return o != 0 ? (UnionCell)(new UnionCell()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) :(UnionCell)UnionCell.Default(); } }
  public UnionCell IceAttack { get { int o = __p.__offset(162); return o != 0 ? (UnionCell)(new UnionCell()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) :(UnionCell)UnionCell.Default(); } }
  public UnionCell DarkAttack { get { int o = __p.__offset(164); return o != 0 ? (UnionCell)(new UnionCell()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) :(UnionCell)UnionCell.Default(); } }
  public UnionCell LightDefence { get { int o = __p.__offset(166); return o != 0 ? (UnionCell)(new UnionCell()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) :(UnionCell)UnionCell.Default(); } }
  public UnionCell FireDefence { get { int o = __p.__offset(168); return o != 0 ? (UnionCell)(new UnionCell()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) :(UnionCell)UnionCell.Default(); } }
  public UnionCell IceDefence { get { int o = __p.__offset(170); return o != 0 ? (UnionCell)(new UnionCell()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) :(UnionCell)UnionCell.Default(); } }
  public UnionCell DarkDefence { get { int o = __p.__offset(172); return o != 0 ? (UnionCell)(new UnionCell()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) :(UnionCell)UnionCell.Default(); } }
  public UnionCell abnormalResist1 { get { int o = __p.__offset(174); return o != 0 ? (UnionCell)(new UnionCell()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) :(UnionCell)UnionCell.Default(); } }
  public UnionCell abnormalResist2 { get { int o = __p.__offset(176); return o != 0 ? (UnionCell)(new UnionCell()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) :(UnionCell)UnionCell.Default(); } }
  public UnionCell abnormalResist3 { get { int o = __p.__offset(178); return o != 0 ? (UnionCell)(new UnionCell()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) :(UnionCell)UnionCell.Default(); } }
  public UnionCell abnormalResist4 { get { int o = __p.__offset(180); return o != 0 ? (UnionCell)(new UnionCell()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) :(UnionCell)UnionCell.Default(); } }
  public UnionCell abnormalResist5 { get { int o = __p.__offset(182); return o != 0 ? (UnionCell)(new UnionCell()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) :(UnionCell)UnionCell.Default(); } }
  public UnionCell abnormalResist6 { get { int o = __p.__offset(184); return o != 0 ? (UnionCell)(new UnionCell()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) :(UnionCell)UnionCell.Default(); } }
  public UnionCell abnormalResist7 { get { int o = __p.__offset(186); return o != 0 ? (UnionCell)(new UnionCell()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) :(UnionCell)UnionCell.Default(); } }
  public UnionCell abnormalResist8 { get { int o = __p.__offset(188); return o != 0 ? (UnionCell)(new UnionCell()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) :(UnionCell)UnionCell.Default(); } }
  public UnionCell abnormalResist9 { get { int o = __p.__offset(190); return o != 0 ? (UnionCell)(new UnionCell()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) :(UnionCell)UnionCell.Default(); } }
  public UnionCell abnormalResist10 { get { int o = __p.__offset(192); return o != 0 ? (UnionCell)(new UnionCell()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) :(UnionCell)UnionCell.Default(); } }
  public UnionCell abnormalResist11 { get { int o = __p.__offset(194); return o != 0 ? (UnionCell)(new UnionCell()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) :(UnionCell)UnionCell.Default(); } }
  public UnionCell abnormalResist12 { get { int o = __p.__offset(196); return o != 0 ? (UnionCell)(new UnionCell()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) :(UnionCell)UnionCell.Default(); } }
  public UnionCell abnormalResist13 { get { int o = __p.__offset(198); return o != 0 ? (UnionCell)(new UnionCell()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) :(UnionCell)UnionCell.Default(); } }
  public int UseProtect { get { int o = __p.__offset(200); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ProtectFloatPercent { get { int o = __p.__offset(202); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ProtectFloatPercent2 { get { int o = __p.__offset(204); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ProtectGroundPercent { get { int o = __p.__offset(206); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ProtectStandPercent { get { int o = __p.__offset(208); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public ProtoTable.UnitTable_Level.eBornAI BornAI { get { int o = __p.__offset(210); return o != 0 ? (ProtoTable.UnitTable_Level.eBornAI)__p.bb.GetInt(o + __p.bb_pos) : ProtoTable.UnitTable_Level.eBornAI.Start; } }
  public int AICombatType { get { int o = __p.__offset(212); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int AITargetTypeArray(int j) { int o = __p.__offset(214); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int AITargetTypeLength { get { int o = __p.__offset(214); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetAITargetTypeBytes() { return __p.__vector_as_arraysegment(214); }
 private FlatBufferArray<int> AITargetTypeValue;
 public FlatBufferArray<int>  AITargetType
 {
  get{
  if (AITargetTypeValue == null)
  {
    AITargetTypeValue = new FlatBufferArray<int>(this.AITargetTypeArray, this.AITargetTypeLength);
  }
  return AITargetTypeValue;}
 }
  public int AISight { get { int o = __p.__offset(216); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int AIChase { get { int o = __p.__offset(218); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int AIWarlike { get { int o = __p.__offset(220); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int AIFollowDistance { get { int o = __p.__offset(222); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int AIKeepDistance { get { int o = __p.__offset(224); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int AIAttackDelay { get { int o = __p.__offset(226); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int AIDestinationChangeTerm { get { int o = __p.__offset(228); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int AIThinkTargetTerm { get { int o = __p.__offset(230); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string AIAttackKindArray(int j) { int o = __p.__offset(232); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : FlatBufferConstants.DefaultString; }
  public int AIAttackKindLength { get { int o = __p.__offset(232); return o != 0 ? __p.__vector_len(o) : 0; } }
 private FlatBufferArray<string> AIAttackKindValue;
 public FlatBufferArray<string>  AIAttackKind
 {
  get{
  if (AIAttackKindValue == null)
  {
    AIAttackKindValue = new FlatBufferArray<string>(this.AIAttackKindArray, this.AIAttackKindLength);
  }
  return AIAttackKindValue;}
 }
  public int AIIdleMode { get { int o = __p.__offset(234); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int AIIsAPC { get { int o = __p.__offset(236); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int AIIdleRand { get { int o = __p.__offset(238); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int AIIdleDuration { get { int o = __p.__offset(240); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int AIEscapeRand { get { int o = __p.__offset(242); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int AIWanderRand { get { int o = __p.__offset(244); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int AIWanderRange { get { int o = __p.__offset(246); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int AIWalkBackRange { get { int o = __p.__offset(248); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int AIYFirstRand { get { int o = __p.__offset(250); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int AIMaxWalkCmdCount { get { int o = __p.__offset(252); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int AIMaxIdleCmdCount { get { int o = __p.__offset(254); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int AIWeaponTag { get { int o = __p.__offset(256); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int APCIsSpecialConfig { get { int o = __p.__offset(258); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int APCWeaponRes { get { int o = __p.__offset(260); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int APCWeaponStrengthLevel { get { int o = __p.__offset(262); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string AIActionPath { get { int o = __p.__offset(264); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetAIActionPathBytes() { return __p.__vector_as_arraysegment(264); }
  public string AIDestinationSelectPath { get { int o = __p.__offset(266); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetAIDestinationSelectPathBytes() { return __p.__vector_as_arraysegment(266); }
  public string AIEventPath { get { int o = __p.__offset(268); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetAIEventPathBytes() { return __p.__vector_as_arraysegment(268); }
  public string AttackInModelStageArray(int j) { int o = __p.__offset(270); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : FlatBufferConstants.DefaultString; }
  public int AttackInModelStageLength { get { int o = __p.__offset(270); return o != 0 ? __p.__vector_len(o) : 0; } }
 private FlatBufferArray<string> AttackInModelStageValue;
 public FlatBufferArray<string>  AttackInModelStage
 {
  get{
  if (AttackInModelStageValue == null)
  {
    AttackInModelStageValue = new FlatBufferArray<string>(this.AttackInModelStageArray, this.AttackInModelStageLength);
  }
  return AttackInModelStageValue;}
 }

  public static void StartUnitTable_Level(FlatBufferBuilder builder) { builder.StartObject(134); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset NameOffset) { builder.AddOffset(1, NameOffset.Value, 0); }
  public static void AddBossShowActionName(FlatBufferBuilder builder, StringOffset BossShowActionNameOffset) { builder.AddOffset(2, BossShowActionNameOffset.Value, 0); }
  public static void AddDesc(FlatBufferBuilder builder, StringOffset DescOffset) { builder.AddOffset(3, DescOffset.Value, 0); }
  public static void AddMonsterMode(FlatBufferBuilder builder, int MonsterMode) { builder.AddInt(4, MonsterMode, 0); }
  public static void AddType(FlatBufferBuilder builder, ProtoTable.UnitTable_Level.eType Type) { builder.AddInt(5, (int)Type, 0); }
  public static void AddIsShowPortrait(FlatBufferBuilder builder, int IsShowPortrait) { builder.AddInt(6, IsShowPortrait, 0); }
  public static void AddCamp(FlatBufferBuilder builder, ProtoTable.UnitTable_Level.eCamp Camp) { builder.AddInt(7, (int)Camp, 0); }
  public static void AddMonsterRace(FlatBufferBuilder builder, ProtoTable.UnitTable_Level.eMonsterRace MonsterRace) { builder.AddInt(8, (int)MonsterRace, 0); }
  public static void AddMode(FlatBufferBuilder builder, int Mode) { builder.AddInt(9, Mode, 0); }
  public static void AddWeight(FlatBufferBuilder builder, int Weight) { builder.AddInt(10, Weight, 0); }
  public static void AddAutoFightNeedAttackFirst(FlatBufferBuilder builder, int AutoFightNeedAttackFirst) { builder.AddInt(11, AutoFightNeedAttackFirst, 0); }
  public static void AddSkillMonsterCanBeAttack(FlatBufferBuilder builder, int SkillMonsterCanBeAttack) { builder.AddInt(12, SkillMonsterCanBeAttack, 0); }
  public static void AddScale(FlatBufferBuilder builder, Offset<UnionCell> ScaleOffset) { builder.AddOffset(13, ScaleOffset.Value, 0); }
  public static void AddEnhanceRadius(FlatBufferBuilder builder, int enhanceRadius) { builder.AddInt(14, enhanceRadius, 0); }
  public static void AddOverHeadHeight(FlatBufferBuilder builder, int overHeadHeight) { builder.AddInt(15, overHeadHeight, 0); }
  public static void AddBuffOriginHeight(FlatBufferBuilder builder, int buffOriginHeight) { builder.AddInt(16, buffOriginHeight, 0); }
  public static void AddWalkSpeed(FlatBufferBuilder builder, int WalkSpeed) { builder.AddInt(17, WalkSpeed, 0); }
  public static void AddWalkAnimationSpeedPerent(FlatBufferBuilder builder, int WalkAnimationSpeedPerent) { builder.AddInt(18, WalkAnimationSpeedPerent, 0); }
  public static void AddMonsterTitle(FlatBufferBuilder builder, int MonsterTitle) { builder.AddInt(19, MonsterTitle, 0); }
  public static void AddAttackSkillID(FlatBufferBuilder builder, int AttackSkillID) { builder.AddInt(20, AttackSkillID, 0); }
  public static void AddGetupBati(FlatBufferBuilder builder, int GetupBati) { builder.AddInt(21, GetupBati, 0); }
  public static void AddGetupSkillRand(FlatBufferBuilder builder, int GetupSkillRand) { builder.AddInt(22, GetupSkillRand, 0); }
  public static void AddGetupSkillID(FlatBufferBuilder builder, int GetupSkillID) { builder.AddInt(23, GetupSkillID, 0); }
  public static void AddHitSkillRand(FlatBufferBuilder builder, int HitSkillRand) { builder.AddInt(24, HitSkillRand, 0); }
  public static void AddHitSkillID(FlatBufferBuilder builder, int HitSkillID) { builder.AddInt(25, HitSkillID, 0); }
  public static void AddSkillIDs(FlatBufferBuilder builder, VectorOffset SkillIDsOffset) { builder.AddOffset(26, SkillIDsOffset.Value, 0); }
  public static VectorOffset CreateSkillIDsVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartSkillIDsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddHurt(FlatBufferBuilder builder, StringOffset HurtOffset) { builder.AddOffset(27, HurtOffset.Value, 0); }
  public static void AddFootEffectName(FlatBufferBuilder builder, StringOffset FootEffectNameOffset) { builder.AddOffset(28, FootEffectNameOffset.Value, 0); }
  public static void AddWeaponModel(FlatBufferBuilder builder, StringOffset WeaponModelOffset) { builder.AddOffset(29, WeaponModelOffset.Value, 0); }
  public static void AddWeaponLocator(FlatBufferBuilder builder, StringOffset WeaponLocatorOffset) { builder.AddOffset(30, WeaponLocatorOffset.Value, 0); }
  public static void AddExp(FlatBufferBuilder builder, int Exp) { builder.AddInt(31, Exp, 0); }
  public static void AddPrefixEffect(FlatBufferBuilder builder, StringOffset PrefixEffectOffset) { builder.AddOffset(32, PrefixEffectOffset.Value, 0); }
  public static void AddDefaultAttackHitSFXID(FlatBufferBuilder builder, int DefaultAttackHitSFXID) { builder.AddInt(33, DefaultAttackHitSFXID, 0); }
  public static void AddDropID(FlatBufferBuilder builder, int DropID) { builder.AddInt(34, DropID, 0); }
  public static void AddAwardID(FlatBufferBuilder builder, int AwardID) { builder.AddInt(35, AwardID, 0); }
  public static void AddExistDuration(FlatBufferBuilder builder, Offset<UnionCell> ExistDurationOffset) { builder.AddOffset(36, ExistDurationOffset.Value, 0); }
  public static void AddPVPExistDuration(FlatBufferBuilder builder, Offset<UnionCell> PVPExistDurationOffset) { builder.AddOffset(37, PVPExistDurationOffset.Value, 0); }
  public static void AddFloatValue(FlatBufferBuilder builder, int FloatValue) { builder.AddInt(38, FloatValue, 0); }
  public static void AddDescriptionA(FlatBufferBuilder builder, StringOffset DescriptionAOffset) { builder.AddOffset(39, DescriptionAOffset.Value, 0); }
  public static void AddValueA(FlatBufferBuilder builder, int ValueA) { builder.AddInt(40, ValueA, 0); }
  public static void AddWalkSpeech(FlatBufferBuilder builder, VectorOffset WalkSpeechOffset) { builder.AddOffset(41, WalkSpeechOffset.Value, 0); }
  public static VectorOffset CreateWalkSpeechVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartWalkSpeechVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddAttackSpeech(FlatBufferBuilder builder, VectorOffset AttackSpeechOffset) { builder.AddOffset(42, AttackSpeechOffset.Value, 0); }
  public static VectorOffset CreateAttackSpeechVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartAttackSpeechVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddBirthSpeech(FlatBufferBuilder builder, VectorOffset BirthSpeechOffset) { builder.AddOffset(43, BirthSpeechOffset.Value, 0); }
  public static VectorOffset CreateBirthSpeechVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartBirthSpeechVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddShowName(FlatBufferBuilder builder, bool ShowName) { builder.AddBool(44, ShowName, false); }
  public static void AddShowHPBar(FlatBufferBuilder builder, bool ShowHPBar) { builder.AddBool(45, ShowHPBar, false); }
  public static void AddShowFootBar(FlatBufferBuilder builder, bool ShowFootBar) { builder.AddBool(46, ShowFootBar, false); }
  public static void AddAbilityChange(FlatBufferBuilder builder, VectorOffset AbilityChangeOffset) { builder.AddOffset(47, AbilityChangeOffset.Value, 0); }
  public static VectorOffset CreateAbilityChangeVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartAbilityChangeVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddBornBuff(FlatBufferBuilder builder, VectorOffset BornBuffOffset) { builder.AddOffset(48, BornBuffOffset.Value, 0); }
  public static VectorOffset CreateBornBuffVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartBornBuffVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddBornBuff2(FlatBufferBuilder builder, VectorOffset BornBuff2Offset) { builder.AddOffset(49, BornBuff2Offset.Value, 0); }
  public static VectorOffset CreateBornBuff2Vector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartBornBuff2Vector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddBornMechanism(FlatBufferBuilder builder, VectorOffset BornMechanismOffset) { builder.AddOffset(50, BornMechanismOffset.Value, 0); }
  public static VectorOffset CreateBornMechanismVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartBornMechanismVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMaxFixHp(FlatBufferBuilder builder, Offset<UnionCell> maxFixHpOffset) { builder.AddOffset(51, maxFixHpOffset.Value, 0); }
  public static void AddMaxHp(FlatBufferBuilder builder, int maxHp) { builder.AddInt(52, maxHp, 0); }
  public static void AddMaxMp(FlatBufferBuilder builder, int maxMp) { builder.AddInt(53, maxMp, 0); }
  public static void AddHpRecover(FlatBufferBuilder builder, int hpRecover) { builder.AddInt(54, hpRecover, 0); }
  public static void AddMpRecover(FlatBufferBuilder builder, int mpRecover) { builder.AddInt(55, mpRecover, 0); }
  public static void AddAttack(FlatBufferBuilder builder, int attack) { builder.AddInt(56, attack, 0); }
  public static void AddMagicAttack(FlatBufferBuilder builder, int magicAttack) { builder.AddInt(57, magicAttack, 0); }
  public static void AddDefence(FlatBufferBuilder builder, int defence) { builder.AddInt(58, defence, 0); }
  public static void AddMagicDefence(FlatBufferBuilder builder, int magicDefence) { builder.AddInt(59, magicDefence, 0); }
  public static void AddAttackSpeed(FlatBufferBuilder builder, int attackSpeed) { builder.AddInt(60, attackSpeed, 0); }
  public static void AddSpellSpeed(FlatBufferBuilder builder, int spellSpeed) { builder.AddInt(61, spellSpeed, 0); }
  public static void AddMoveSpeed(FlatBufferBuilder builder, int moveSpeed) { builder.AddInt(62, moveSpeed, 0); }
  public static void AddCiriticalAttack(FlatBufferBuilder builder, int ciriticalAttack) { builder.AddInt(63, ciriticalAttack, 0); }
  public static void AddCiriticalMagicAttack(FlatBufferBuilder builder, int ciriticalMagicAttack) { builder.AddInt(64, ciriticalMagicAttack, 0); }
  public static void AddDex(FlatBufferBuilder builder, int dex) { builder.AddInt(65, dex, 0); }
  public static void AddDodge(FlatBufferBuilder builder, int dodge) { builder.AddInt(66, dodge, 0); }
  public static void AddFrozen(FlatBufferBuilder builder, int frozen) { builder.AddInt(67, frozen, 0); }
  public static void AddHard(FlatBufferBuilder builder, int hard) { builder.AddInt(68, hard, 0); }
  public static void AddCdReduceRate(FlatBufferBuilder builder, int cdReduceRate) { builder.AddInt(69, cdReduceRate, 0); }
  public static void AddBaseAtk(FlatBufferBuilder builder, int baseAtk) { builder.AddInt(70, baseAtk, 0); }
  public static void AddBaseInt(FlatBufferBuilder builder, int baseInt) { builder.AddInt(71, baseInt, 0); }
  public static void AddSta(FlatBufferBuilder builder, int sta) { builder.AddInt(72, sta, 0); }
  public static void AddSpr(FlatBufferBuilder builder, int spr) { builder.AddInt(73, spr, 0); }
  public static void AddIgnoreDefAttackAdd(FlatBufferBuilder builder, int ignoreDefAttackAdd) { builder.AddInt(74, ignoreDefAttackAdd, 0); }
  public static void AddIgnoreDefMagicAttackAdd(FlatBufferBuilder builder, int ignoreDefMagicAttackAdd) { builder.AddInt(75, ignoreDefMagicAttackAdd, 0); }
  public static void AddElements(FlatBufferBuilder builder, VectorOffset ElementsOffset) { builder.AddOffset(76, ElementsOffset.Value, 0); }
  public static VectorOffset CreateElementsVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartElementsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddLightAttack(FlatBufferBuilder builder, Offset<UnionCell> LightAttackOffset) { builder.AddOffset(77, LightAttackOffset.Value, 0); }
  public static void AddFireAttack(FlatBufferBuilder builder, Offset<UnionCell> FireAttackOffset) { builder.AddOffset(78, FireAttackOffset.Value, 0); }
  public static void AddIceAttack(FlatBufferBuilder builder, Offset<UnionCell> IceAttackOffset) { builder.AddOffset(79, IceAttackOffset.Value, 0); }
  public static void AddDarkAttack(FlatBufferBuilder builder, Offset<UnionCell> DarkAttackOffset) { builder.AddOffset(80, DarkAttackOffset.Value, 0); }
  public static void AddLightDefence(FlatBufferBuilder builder, Offset<UnionCell> LightDefenceOffset) { builder.AddOffset(81, LightDefenceOffset.Value, 0); }
  public static void AddFireDefence(FlatBufferBuilder builder, Offset<UnionCell> FireDefenceOffset) { builder.AddOffset(82, FireDefenceOffset.Value, 0); }
  public static void AddIceDefence(FlatBufferBuilder builder, Offset<UnionCell> IceDefenceOffset) { builder.AddOffset(83, IceDefenceOffset.Value, 0); }
  public static void AddDarkDefence(FlatBufferBuilder builder, Offset<UnionCell> DarkDefenceOffset) { builder.AddOffset(84, DarkDefenceOffset.Value, 0); }
  public static void AddAbnormalResist1(FlatBufferBuilder builder, Offset<UnionCell> abnormalResist1Offset) { builder.AddOffset(85, abnormalResist1Offset.Value, 0); }
  public static void AddAbnormalResist2(FlatBufferBuilder builder, Offset<UnionCell> abnormalResist2Offset) { builder.AddOffset(86, abnormalResist2Offset.Value, 0); }
  public static void AddAbnormalResist3(FlatBufferBuilder builder, Offset<UnionCell> abnormalResist3Offset) { builder.AddOffset(87, abnormalResist3Offset.Value, 0); }
  public static void AddAbnormalResist4(FlatBufferBuilder builder, Offset<UnionCell> abnormalResist4Offset) { builder.AddOffset(88, abnormalResist4Offset.Value, 0); }
  public static void AddAbnormalResist5(FlatBufferBuilder builder, Offset<UnionCell> abnormalResist5Offset) { builder.AddOffset(89, abnormalResist5Offset.Value, 0); }
  public static void AddAbnormalResist6(FlatBufferBuilder builder, Offset<UnionCell> abnormalResist6Offset) { builder.AddOffset(90, abnormalResist6Offset.Value, 0); }
  public static void AddAbnormalResist7(FlatBufferBuilder builder, Offset<UnionCell> abnormalResist7Offset) { builder.AddOffset(91, abnormalResist7Offset.Value, 0); }
  public static void AddAbnormalResist8(FlatBufferBuilder builder, Offset<UnionCell> abnormalResist8Offset) { builder.AddOffset(92, abnormalResist8Offset.Value, 0); }
  public static void AddAbnormalResist9(FlatBufferBuilder builder, Offset<UnionCell> abnormalResist9Offset) { builder.AddOffset(93, abnormalResist9Offset.Value, 0); }
  public static void AddAbnormalResist10(FlatBufferBuilder builder, Offset<UnionCell> abnormalResist10Offset) { builder.AddOffset(94, abnormalResist10Offset.Value, 0); }
  public static void AddAbnormalResist11(FlatBufferBuilder builder, Offset<UnionCell> abnormalResist11Offset) { builder.AddOffset(95, abnormalResist11Offset.Value, 0); }
  public static void AddAbnormalResist12(FlatBufferBuilder builder, Offset<UnionCell> abnormalResist12Offset) { builder.AddOffset(96, abnormalResist12Offset.Value, 0); }
  public static void AddAbnormalResist13(FlatBufferBuilder builder, Offset<UnionCell> abnormalResist13Offset) { builder.AddOffset(97, abnormalResist13Offset.Value, 0); }
  public static void AddUseProtect(FlatBufferBuilder builder, int UseProtect) { builder.AddInt(98, UseProtect, 0); }
  public static void AddProtectFloatPercent(FlatBufferBuilder builder, int ProtectFloatPercent) { builder.AddInt(99, ProtectFloatPercent, 0); }
  public static void AddProtectFloatPercent2(FlatBufferBuilder builder, int ProtectFloatPercent2) { builder.AddInt(100, ProtectFloatPercent2, 0); }
  public static void AddProtectGroundPercent(FlatBufferBuilder builder, int ProtectGroundPercent) { builder.AddInt(101, ProtectGroundPercent, 0); }
  public static void AddProtectStandPercent(FlatBufferBuilder builder, int ProtectStandPercent) { builder.AddInt(102, ProtectStandPercent, 0); }
  public static void AddBornAI(FlatBufferBuilder builder, ProtoTable.UnitTable_Level.eBornAI BornAI) { builder.AddInt(103, (int)BornAI, 0); }
  public static void AddAICombatType(FlatBufferBuilder builder, int AICombatType) { builder.AddInt(104, AICombatType, 0); }
  public static void AddAITargetType(FlatBufferBuilder builder, VectorOffset AITargetTypeOffset) { builder.AddOffset(105, AITargetTypeOffset.Value, 0); }
  public static VectorOffset CreateAITargetTypeVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartAITargetTypeVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddAISight(FlatBufferBuilder builder, int AISight) { builder.AddInt(106, AISight, 0); }
  public static void AddAIChase(FlatBufferBuilder builder, int AIChase) { builder.AddInt(107, AIChase, 0); }
  public static void AddAIWarlike(FlatBufferBuilder builder, int AIWarlike) { builder.AddInt(108, AIWarlike, 0); }
  public static void AddAIFollowDistance(FlatBufferBuilder builder, int AIFollowDistance) { builder.AddInt(109, AIFollowDistance, 0); }
  public static void AddAIKeepDistance(FlatBufferBuilder builder, int AIKeepDistance) { builder.AddInt(110, AIKeepDistance, 0); }
  public static void AddAIAttackDelay(FlatBufferBuilder builder, int AIAttackDelay) { builder.AddInt(111, AIAttackDelay, 0); }
  public static void AddAIDestinationChangeTerm(FlatBufferBuilder builder, int AIDestinationChangeTerm) { builder.AddInt(112, AIDestinationChangeTerm, 0); }
  public static void AddAIThinkTargetTerm(FlatBufferBuilder builder, int AIThinkTargetTerm) { builder.AddInt(113, AIThinkTargetTerm, 0); }
  public static void AddAIAttackKind(FlatBufferBuilder builder, VectorOffset AIAttackKindOffset) { builder.AddOffset(114, AIAttackKindOffset.Value, 0); }
  public static VectorOffset CreateAIAttackKindVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartAIAttackKindVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddAIIdleMode(FlatBufferBuilder builder, int AIIdleMode) { builder.AddInt(115, AIIdleMode, 0); }
  public static void AddAIIsAPC(FlatBufferBuilder builder, int AIIsAPC) { builder.AddInt(116, AIIsAPC, 0); }
  public static void AddAIIdleRand(FlatBufferBuilder builder, int AIIdleRand) { builder.AddInt(117, AIIdleRand, 0); }
  public static void AddAIIdleDuration(FlatBufferBuilder builder, int AIIdleDuration) { builder.AddInt(118, AIIdleDuration, 0); }
  public static void AddAIEscapeRand(FlatBufferBuilder builder, int AIEscapeRand) { builder.AddInt(119, AIEscapeRand, 0); }
  public static void AddAIWanderRand(FlatBufferBuilder builder, int AIWanderRand) { builder.AddInt(120, AIWanderRand, 0); }
  public static void AddAIWanderRange(FlatBufferBuilder builder, int AIWanderRange) { builder.AddInt(121, AIWanderRange, 0); }
  public static void AddAIWalkBackRange(FlatBufferBuilder builder, int AIWalkBackRange) { builder.AddInt(122, AIWalkBackRange, 0); }
  public static void AddAIYFirstRand(FlatBufferBuilder builder, int AIYFirstRand) { builder.AddInt(123, AIYFirstRand, 0); }
  public static void AddAIMaxWalkCmdCount(FlatBufferBuilder builder, int AIMaxWalkCmdCount) { builder.AddInt(124, AIMaxWalkCmdCount, 0); }
  public static void AddAIMaxIdleCmdCount(FlatBufferBuilder builder, int AIMaxIdleCmdCount) { builder.AddInt(125, AIMaxIdleCmdCount, 0); }
  public static void AddAIWeaponTag(FlatBufferBuilder builder, int AIWeaponTag) { builder.AddInt(126, AIWeaponTag, 0); }
  public static void AddAPCIsSpecialConfig(FlatBufferBuilder builder, int APCIsSpecialConfig) { builder.AddInt(127, APCIsSpecialConfig, 0); }
  public static void AddAPCWeaponRes(FlatBufferBuilder builder, int APCWeaponRes) { builder.AddInt(128, APCWeaponRes, 0); }
  public static void AddAPCWeaponStrengthLevel(FlatBufferBuilder builder, int APCWeaponStrengthLevel) { builder.AddInt(129, APCWeaponStrengthLevel, 0); }
  public static void AddAIActionPath(FlatBufferBuilder builder, StringOffset AIActionPathOffset) { builder.AddOffset(130, AIActionPathOffset.Value, 0); }
  public static void AddAIDestinationSelectPath(FlatBufferBuilder builder, StringOffset AIDestinationSelectPathOffset) { builder.AddOffset(131, AIDestinationSelectPathOffset.Value, 0); }
  public static void AddAIEventPath(FlatBufferBuilder builder, StringOffset AIEventPathOffset) { builder.AddOffset(132, AIEventPathOffset.Value, 0); }
  public static void AddAttackInModelStage(FlatBufferBuilder builder, VectorOffset AttackInModelStageOffset) { builder.AddOffset(133, AttackInModelStageOffset.Value, 0); }
  public static VectorOffset CreateAttackInModelStageVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartAttackInModelStageVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<UnitTable_Level> EndUnitTable_Level(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<UnitTable_Level>(o);
  }
  public static void FinishUnitTable_LevelBuffer(FlatBufferBuilder builder, Offset<UnitTable_Level> offset) { builder.Finish(offset.Value); }
};


}


#endif

