// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class EquieUpdateTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = 437936418,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static EquieUpdateTable GetRootAsEquieUpdateTable(ByteBuffer _bb) { return GetRootAsEquieUpdateTable(_bb, new EquieUpdateTable()); }
  public static EquieUpdateTable GetRootAsEquieUpdateTable(ByteBuffer _bb, EquieUpdateTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public EquieUpdateTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int EquieID { get { int o = __p.__offset(6); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int JobID { get { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int NextLvEquieID { get { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string MaterialConsume { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetMaterialConsumeBytes() { return __p.__vector_as_arraysegment(12); }
  public string IncreaseMaterialConsume { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetIncreaseMaterialConsumeBytes() { return __p.__vector_as_arraysegment(14); }
  public int AnnounceID { get { int o = __p.__offset(16); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }

  public static Offset<EquieUpdateTable> CreateEquieUpdateTable(FlatBufferBuilder builder,
      int ID = 0,
      int EquieID = 0,
      int JobID = 0,
      int NextLvEquieID = 0,
      StringOffset MaterialConsumeOffset = default(StringOffset),
      StringOffset IncreaseMaterialConsumeOffset = default(StringOffset),
      int AnnounceID = 0) {
    builder.StartObject(7);
    EquieUpdateTable.AddAnnounceID(builder, AnnounceID);
    EquieUpdateTable.AddIncreaseMaterialConsume(builder, IncreaseMaterialConsumeOffset);
    EquieUpdateTable.AddMaterialConsume(builder, MaterialConsumeOffset);
    EquieUpdateTable.AddNextLvEquieID(builder, NextLvEquieID);
    EquieUpdateTable.AddJobID(builder, JobID);
    EquieUpdateTable.AddEquieID(builder, EquieID);
    EquieUpdateTable.AddID(builder, ID);
    return EquieUpdateTable.EndEquieUpdateTable(builder);
  }

  public static void StartEquieUpdateTable(FlatBufferBuilder builder) { builder.StartObject(7); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddEquieID(FlatBufferBuilder builder, int EquieID) { builder.AddInt(1, EquieID, 0); }
  public static void AddJobID(FlatBufferBuilder builder, int JobID) { builder.AddInt(2, JobID, 0); }
  public static void AddNextLvEquieID(FlatBufferBuilder builder, int NextLvEquieID) { builder.AddInt(3, NextLvEquieID, 0); }
  public static void AddMaterialConsume(FlatBufferBuilder builder, StringOffset MaterialConsumeOffset) { builder.AddOffset(4, MaterialConsumeOffset.Value, 0); }
  public static void AddIncreaseMaterialConsume(FlatBufferBuilder builder, StringOffset IncreaseMaterialConsumeOffset) { builder.AddOffset(5, IncreaseMaterialConsumeOffset.Value, 0); }
  public static void AddAnnounceID(FlatBufferBuilder builder, int AnnounceID) { builder.AddInt(6, AnnounceID, 0); }
  public static Offset<EquieUpdateTable> EndEquieUpdateTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<EquieUpdateTable>(o);
  }
  public static void FinishEquieUpdateTableBuffer(FlatBufferBuilder builder, Offset<EquieUpdateTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

