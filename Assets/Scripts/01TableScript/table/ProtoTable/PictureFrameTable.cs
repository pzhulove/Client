// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class PictureFrameTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = -395137297,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static PictureFrameTable GetRootAsPictureFrameTable(ByteBuffer _bb) { return GetRootAsPictureFrameTable(_bb, new PictureFrameTable()); }
  public static PictureFrameTable GetRootAsPictureFrameTable(ByteBuffer _bb, PictureFrameTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public PictureFrameTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
  public int TabID { get { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string IconPath { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetIconPathBytes() { return __p.__vector_as_arraysegment(10); }
  public string Conditions { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetConditionsBytes() { return __p.__vector_as_arraysegment(12); }

  public static Offset<PictureFrameTable> CreatePictureFrameTable(FlatBufferBuilder builder,
      int ID = 0,
      StringOffset NameOffset = default(StringOffset),
      int TabID = 0,
      StringOffset IconPathOffset = default(StringOffset),
      StringOffset ConditionsOffset = default(StringOffset)) {
    builder.StartObject(5);
    PictureFrameTable.AddConditions(builder, ConditionsOffset);
    PictureFrameTable.AddIconPath(builder, IconPathOffset);
    PictureFrameTable.AddTabID(builder, TabID);
    PictureFrameTable.AddName(builder, NameOffset);
    PictureFrameTable.AddID(builder, ID);
    return PictureFrameTable.EndPictureFrameTable(builder);
  }

  public static void StartPictureFrameTable(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset NameOffset) { builder.AddOffset(1, NameOffset.Value, 0); }
  public static void AddTabID(FlatBufferBuilder builder, int TabID) { builder.AddInt(2, TabID, 0); }
  public static void AddIconPath(FlatBufferBuilder builder, StringOffset IconPathOffset) { builder.AddOffset(3, IconPathOffset.Value, 0); }
  public static void AddConditions(FlatBufferBuilder builder, StringOffset ConditionsOffset) { builder.AddOffset(4, ConditionsOffset.Value, 0); }
  public static Offset<PictureFrameTable> EndPictureFrameTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<PictureFrameTable>(o);
  }
  public static void FinishPictureFrameTableBuffer(FlatBufferBuilder builder, Offset<PictureFrameTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

