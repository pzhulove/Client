// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class PackageEnlargeTable : IFlatbufferObject
{
public enum eItemEnlargeType : int
{
 ITEM_ENLARGE_TYPE_PACKAGE = 0,
 ITEM_ENLARGE_TYPE_STORAGE = 1,
 ITEM_ENLARGE_TYPE_ACCOUNT_STORAGE = 2,
};

public enum eCrypt : int
{
 code = -1536308738,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static PackageEnlargeTable GetRootAsPackageEnlargeTable(ByteBuffer _bb) { return GetRootAsPackageEnlargeTable(_bb, new PackageEnlargeTable()); }
  public static PackageEnlargeTable GetRootAsPackageEnlargeTable(ByteBuffer _bb, PackageEnlargeTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public PackageEnlargeTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public ProtoTable.PackageEnlargeTable.eItemEnlargeType ItemEnlargeType { get { int o = __p.__offset(6); return o != 0 ? (ProtoTable.PackageEnlargeTable.eItemEnlargeType)__p.bb.GetInt(o + __p.bb_pos) : ProtoTable.PackageEnlargeTable.eItemEnlargeType.ITEM_ENLARGE_TYPE_PACKAGE; } }
  public int GridSize { get { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int AddGrid { get { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string Consume { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetConsumeBytes() { return __p.__vector_as_arraysegment(12); }
  public int NeedLevel { get { int o = __p.__offset(14); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }

  public static Offset<PackageEnlargeTable> CreatePackageEnlargeTable(FlatBufferBuilder builder,
      int ID = 0,
      ProtoTable.PackageEnlargeTable.eItemEnlargeType ItemEnlargeType = ProtoTable.PackageEnlargeTable.eItemEnlargeType.ITEM_ENLARGE_TYPE_PACKAGE,
      int GridSize = 0,
      int AddGrid = 0,
      StringOffset ConsumeOffset = default(StringOffset),
      int NeedLevel = 0) {
    builder.StartObject(6);
    PackageEnlargeTable.AddNeedLevel(builder, NeedLevel);
    PackageEnlargeTable.AddConsume(builder, ConsumeOffset);
    PackageEnlargeTable.AddAddGrid(builder, AddGrid);
    PackageEnlargeTable.AddGridSize(builder, GridSize);
    PackageEnlargeTable.AddItemEnlargeType(builder, ItemEnlargeType);
    PackageEnlargeTable.AddID(builder, ID);
    return PackageEnlargeTable.EndPackageEnlargeTable(builder);
  }

  public static void StartPackageEnlargeTable(FlatBufferBuilder builder) { builder.StartObject(6); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddItemEnlargeType(FlatBufferBuilder builder, ProtoTable.PackageEnlargeTable.eItemEnlargeType ItemEnlargeType) { builder.AddInt(1, (int)ItemEnlargeType, 0); }
  public static void AddGridSize(FlatBufferBuilder builder, int GridSize) { builder.AddInt(2, GridSize, 0); }
  public static void AddAddGrid(FlatBufferBuilder builder, int AddGrid) { builder.AddInt(3, AddGrid, 0); }
  public static void AddConsume(FlatBufferBuilder builder, StringOffset ConsumeOffset) { builder.AddOffset(4, ConsumeOffset.Value, 0); }
  public static void AddNeedLevel(FlatBufferBuilder builder, int NeedLevel) { builder.AddInt(5, NeedLevel, 0); }
  public static Offset<PackageEnlargeTable> EndPackageEnlargeTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<PackageEnlargeTable>(o);
  }
  public static void FinishPackageEnlargeTableBuffer(FlatBufferBuilder builder, Offset<PackageEnlargeTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

