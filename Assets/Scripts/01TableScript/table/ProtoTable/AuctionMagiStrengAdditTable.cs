// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class AuctionMagiStrengAdditTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = 1342041522,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static AuctionMagiStrengAdditTable GetRootAsAuctionMagiStrengAdditTable(ByteBuffer _bb) { return GetRootAsAuctionMagiStrengAdditTable(_bb, new AuctionMagiStrengAdditTable()); }
  public static AuctionMagiStrengAdditTable GetRootAsAuctionMagiStrengAdditTable(ByteBuffer _bb, AuctionMagiStrengAdditTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public AuctionMagiStrengAdditTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Type { get { int o = __p.__offset(6); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int StrengthenLv { get { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Color { get { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int StrengthenAddition { get { int o = __p.__offset(12); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }

  public static Offset<AuctionMagiStrengAdditTable> CreateAuctionMagiStrengAdditTable(FlatBufferBuilder builder,
      int ID = 0,
      int Type = 0,
      int StrengthenLv = 0,
      int Color = 0,
      int StrengthenAddition = 0) {
    builder.StartObject(5);
    AuctionMagiStrengAdditTable.AddStrengthenAddition(builder, StrengthenAddition);
    AuctionMagiStrengAdditTable.AddColor(builder, Color);
    AuctionMagiStrengAdditTable.AddStrengthenLv(builder, StrengthenLv);
    AuctionMagiStrengAdditTable.AddType(builder, Type);
    AuctionMagiStrengAdditTable.AddID(builder, ID);
    return AuctionMagiStrengAdditTable.EndAuctionMagiStrengAdditTable(builder);
  }

  public static void StartAuctionMagiStrengAdditTable(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddType(FlatBufferBuilder builder, int Type) { builder.AddInt(1, Type, 0); }
  public static void AddStrengthenLv(FlatBufferBuilder builder, int StrengthenLv) { builder.AddInt(2, StrengthenLv, 0); }
  public static void AddColor(FlatBufferBuilder builder, int Color) { builder.AddInt(3, Color, 0); }
  public static void AddStrengthenAddition(FlatBufferBuilder builder, int StrengthenAddition) { builder.AddInt(4, StrengthenAddition, 0); }
  public static Offset<AuctionMagiStrengAdditTable> EndAuctionMagiStrengAdditTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<AuctionMagiStrengAdditTable>(o);
  }
  public static void FinishAuctionMagiStrengAdditTableBuffer(FlatBufferBuilder builder, Offset<AuctionMagiStrengAdditTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

