// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class ChargeMallTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = 1118665560,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ChargeMallTable GetRootAsChargeMallTable(ByteBuffer _bb) { return GetRootAsChargeMallTable(_bb, new ChargeMallTable()); }
  public static ChargeMallTable GetRootAsChargeMallTable(ByteBuffer _bb, ChargeMallTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ChargeMallTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Sort { get { int o = __p.__offset(6); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string Desc { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetDescBytes() { return __p.__vector_as_arraysegment(8); }
  public string TagsArray(int j) { int o = __p.__offset(10); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : FlatBufferConstants.DefaultString; }
  public int TagsLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
 private FlatBufferArray<string> TagsValue;
 public FlatBufferArray<string>  Tags
 {
  get{
  if (TagsValue == null)
  {
    TagsValue = new FlatBufferArray<string>(this.TagsArray, this.TagsLength);
  }
  return TagsValue;}
 }
  public int ChargeMoney { get { int o = __p.__offset(12); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int VipScore { get { int o = __p.__offset(14); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int DailyLimitNum { get { int o = __p.__offset(16); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int itemID { get { int o = __p.__offset(18); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int itemNum { get { int o = __p.__offset(20); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int FirstAddNum { get { int o = __p.__offset(22); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int UnFirstAddNum { get { int o = __p.__offset(24); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Icon { get { int o = __p.__offset(26); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string Name { get { int o = __p.__offset(28); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(28); }

  public static Offset<ChargeMallTable> CreateChargeMallTable(FlatBufferBuilder builder,
      int ID = 0,
      int Sort = 0,
      StringOffset DescOffset = default(StringOffset),
      VectorOffset TagsOffset = default(VectorOffset),
      int ChargeMoney = 0,
      int VipScore = 0,
      int DailyLimitNum = 0,
      int itemID = 0,
      int itemNum = 0,
      int FirstAddNum = 0,
      int UnFirstAddNum = 0,
      int Icon = 0,
      StringOffset NameOffset = default(StringOffset)) {
    builder.StartObject(13);
    ChargeMallTable.AddName(builder, NameOffset);
    ChargeMallTable.AddIcon(builder, Icon);
    ChargeMallTable.AddUnFirstAddNum(builder, UnFirstAddNum);
    ChargeMallTable.AddFirstAddNum(builder, FirstAddNum);
    ChargeMallTable.AddItemNum(builder, itemNum);
    ChargeMallTable.AddItemID(builder, itemID);
    ChargeMallTable.AddDailyLimitNum(builder, DailyLimitNum);
    ChargeMallTable.AddVipScore(builder, VipScore);
    ChargeMallTable.AddChargeMoney(builder, ChargeMoney);
    ChargeMallTable.AddTags(builder, TagsOffset);
    ChargeMallTable.AddDesc(builder, DescOffset);
    ChargeMallTable.AddSort(builder, Sort);
    ChargeMallTable.AddID(builder, ID);
    return ChargeMallTable.EndChargeMallTable(builder);
  }

  public static void StartChargeMallTable(FlatBufferBuilder builder) { builder.StartObject(13); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddSort(FlatBufferBuilder builder, int Sort) { builder.AddInt(1, Sort, 0); }
  public static void AddDesc(FlatBufferBuilder builder, StringOffset DescOffset) { builder.AddOffset(2, DescOffset.Value, 0); }
  public static void AddTags(FlatBufferBuilder builder, VectorOffset TagsOffset) { builder.AddOffset(3, TagsOffset.Value, 0); }
  public static VectorOffset CreateTagsVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartTagsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddChargeMoney(FlatBufferBuilder builder, int ChargeMoney) { builder.AddInt(4, ChargeMoney, 0); }
  public static void AddVipScore(FlatBufferBuilder builder, int VipScore) { builder.AddInt(5, VipScore, 0); }
  public static void AddDailyLimitNum(FlatBufferBuilder builder, int DailyLimitNum) { builder.AddInt(6, DailyLimitNum, 0); }
  public static void AddItemID(FlatBufferBuilder builder, int itemID) { builder.AddInt(7, itemID, 0); }
  public static void AddItemNum(FlatBufferBuilder builder, int itemNum) { builder.AddInt(8, itemNum, 0); }
  public static void AddFirstAddNum(FlatBufferBuilder builder, int FirstAddNum) { builder.AddInt(9, FirstAddNum, 0); }
  public static void AddUnFirstAddNum(FlatBufferBuilder builder, int UnFirstAddNum) { builder.AddInt(10, UnFirstAddNum, 0); }
  public static void AddIcon(FlatBufferBuilder builder, int Icon) { builder.AddInt(11, Icon, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset NameOffset) { builder.AddOffset(12, NameOffset.Value, 0); }
  public static Offset<ChargeMallTable> EndChargeMallTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ChargeMallTable>(o);
  }
  public static void FinishChargeMallTableBuffer(FlatBufferBuilder builder, Offset<ChargeMallTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

