// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class SuperLinkTable : IFlatbufferObject
{
public enum eLinkType : int
{
 LT_DESC = 0,
 LT_TABLE_NAME = 1,
};

public enum eCrypt : int
{
 code = -1907652381,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static SuperLinkTable GetRootAsSuperLinkTable(ByteBuffer _bb) { return GetRootAsSuperLinkTable(_bb, new SuperLinkTable()); }
  public static SuperLinkTable GetRootAsSuperLinkTable(ByteBuffer _bb, SuperLinkTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public SuperLinkTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public ProtoTable.SuperLinkTable.eLinkType LinkType { get { int o = __p.__offset(6); return o != 0 ? (ProtoTable.SuperLinkTable.eLinkType)__p.bb.GetInt(o + __p.bb_pos) : ProtoTable.SuperLinkTable.eLinkType.LT_DESC; } }
  public string LinkInfo { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetLinkInfoBytes() { return __p.__vector_as_arraysegment(8); }
  public string Param { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetParamBytes() { return __p.__vector_as_arraysegment(10); }
  public int FunctionType { get { int o = __p.__offset(12); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string LocalParamArray(int j) { int o = __p.__offset(14); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : FlatBufferConstants.DefaultString; }
  public int LocalParamLength { get { int o = __p.__offset(14); return o != 0 ? __p.__vector_len(o) : 0; } }
 private FlatBufferArray<string> LocalParamValue;
 public FlatBufferArray<string>  LocalParam
 {
  get{
  if (LocalParamValue == null)
  {
    LocalParamValue = new FlatBufferArray<string>(this.LocalParamArray, this.LocalParamLength);
  }
  return LocalParamValue;}
 }
  public string Desc { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetDescBytes() { return __p.__vector_as_arraysegment(16); }
  public string OpenLevelArray(int j) { int o = __p.__offset(18); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : FlatBufferConstants.DefaultString; }
  public int OpenLevelLength { get { int o = __p.__offset(18); return o != 0 ? __p.__vector_len(o) : 0; } }
 private FlatBufferArray<string> OpenLevelValue;
 public FlatBufferArray<string>  OpenLevel
 {
  get{
  if (OpenLevelValue == null)
  {
    OpenLevelValue = new FlatBufferArray<string>(this.OpenLevelArray, this.OpenLevelLength);
  }
  return OpenLevelValue;}
 }

  public static Offset<SuperLinkTable> CreateSuperLinkTable(FlatBufferBuilder builder,
      int ID = 0,
      ProtoTable.SuperLinkTable.eLinkType LinkType = ProtoTable.SuperLinkTable.eLinkType.LT_DESC,
      StringOffset LinkInfoOffset = default(StringOffset),
      StringOffset ParamOffset = default(StringOffset),
      int FunctionType = 0,
      VectorOffset LocalParamOffset = default(VectorOffset),
      StringOffset DescOffset = default(StringOffset),
      VectorOffset OpenLevelOffset = default(VectorOffset)) {
    builder.StartObject(8);
    SuperLinkTable.AddOpenLevel(builder, OpenLevelOffset);
    SuperLinkTable.AddDesc(builder, DescOffset);
    SuperLinkTable.AddLocalParam(builder, LocalParamOffset);
    SuperLinkTable.AddFunctionType(builder, FunctionType);
    SuperLinkTable.AddParam(builder, ParamOffset);
    SuperLinkTable.AddLinkInfo(builder, LinkInfoOffset);
    SuperLinkTable.AddLinkType(builder, LinkType);
    SuperLinkTable.AddID(builder, ID);
    return SuperLinkTable.EndSuperLinkTable(builder);
  }

  public static void StartSuperLinkTable(FlatBufferBuilder builder) { builder.StartObject(8); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddLinkType(FlatBufferBuilder builder, ProtoTable.SuperLinkTable.eLinkType LinkType) { builder.AddInt(1, (int)LinkType, 0); }
  public static void AddLinkInfo(FlatBufferBuilder builder, StringOffset LinkInfoOffset) { builder.AddOffset(2, LinkInfoOffset.Value, 0); }
  public static void AddParam(FlatBufferBuilder builder, StringOffset ParamOffset) { builder.AddOffset(3, ParamOffset.Value, 0); }
  public static void AddFunctionType(FlatBufferBuilder builder, int FunctionType) { builder.AddInt(4, FunctionType, 0); }
  public static void AddLocalParam(FlatBufferBuilder builder, VectorOffset LocalParamOffset) { builder.AddOffset(5, LocalParamOffset.Value, 0); }
  public static VectorOffset CreateLocalParamVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartLocalParamVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddDesc(FlatBufferBuilder builder, StringOffset DescOffset) { builder.AddOffset(6, DescOffset.Value, 0); }
  public static void AddOpenLevel(FlatBufferBuilder builder, VectorOffset OpenLevelOffset) { builder.AddOffset(7, OpenLevelOffset.Value, 0); }
  public static VectorOffset CreateOpenLevelVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartOpenLevelVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<SuperLinkTable> EndSuperLinkTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<SuperLinkTable>(o);
  }
  public static void FinishSuperLinkTableBuffer(FlatBufferBuilder builder, Offset<SuperLinkTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

