// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class CityMonsterPosition : IFlatbufferObject
{
public enum eCrypt : int
{
 code = -1205593230,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static CityMonsterPosition GetRootAsCityMonsterPosition(ByteBuffer _bb) { return GetRootAsCityMonsterPosition(_bb, new CityMonsterPosition()); }
  public static CityMonsterPosition GetRootAsCityMonsterPosition(ByteBuffer _bb, CityMonsterPosition obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public CityMonsterPosition __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int SceneID { get { int o = __p.__offset(6); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int PosType { get { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Pos { get { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }

  public static Offset<CityMonsterPosition> CreateCityMonsterPosition(FlatBufferBuilder builder,
      int ID = 0,
      int SceneID = 0,
      int PosType = 0,
      int Pos = 0) {
    builder.StartObject(4);
    CityMonsterPosition.AddPos(builder, Pos);
    CityMonsterPosition.AddPosType(builder, PosType);
    CityMonsterPosition.AddSceneID(builder, SceneID);
    CityMonsterPosition.AddID(builder, ID);
    return CityMonsterPosition.EndCityMonsterPosition(builder);
  }

  public static void StartCityMonsterPosition(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddSceneID(FlatBufferBuilder builder, int SceneID) { builder.AddInt(1, SceneID, 0); }
  public static void AddPosType(FlatBufferBuilder builder, int PosType) { builder.AddInt(2, PosType, 0); }
  public static void AddPos(FlatBufferBuilder builder, int Pos) { builder.AddInt(3, Pos, 0); }
  public static Offset<CityMonsterPosition> EndCityMonsterPosition(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<CityMonsterPosition>(o);
  }
  public static void FinishCityMonsterPositionBuffer(FlatBufferBuilder builder, Offset<CityMonsterPosition> offset) { builder.Finish(offset.Value); }
};


}


#endif

