// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class AchievementGroupSecondMenuTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = -533477339,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static AchievementGroupSecondMenuTable GetRootAsAchievementGroupSecondMenuTable(ByteBuffer _bb) { return GetRootAsAchievementGroupSecondMenuTable(_bb, new AchievementGroupSecondMenuTable()); }
  public static AchievementGroupSecondMenuTable GetRootAsAchievementGroupSecondMenuTable(ByteBuffer _bb, AchievementGroupSecondMenuTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public AchievementGroupSecondMenuTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
  public string Icon { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetIconBytes() { return __p.__vector_as_arraysegment(8); }
  public int SubItemIDArray(int j) { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int SubItemIDLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetSubItemIDBytes() { return __p.__vector_as_arraysegment(10); }
 private FlatBufferArray<int> SubItemIDValue;
 public FlatBufferArray<int>  SubItemID
 {
  get{
  if (SubItemIDValue == null)
  {
    SubItemIDValue = new FlatBufferArray<int>(this.SubItemIDArray, this.SubItemIDLength);
  }
  return SubItemIDValue;}
 }

  public static Offset<AchievementGroupSecondMenuTable> CreateAchievementGroupSecondMenuTable(FlatBufferBuilder builder,
      int ID = 0,
      StringOffset NameOffset = default(StringOffset),
      StringOffset IconOffset = default(StringOffset),
      VectorOffset SubItemIDOffset = default(VectorOffset)) {
    builder.StartObject(4);
    AchievementGroupSecondMenuTable.AddSubItemID(builder, SubItemIDOffset);
    AchievementGroupSecondMenuTable.AddIcon(builder, IconOffset);
    AchievementGroupSecondMenuTable.AddName(builder, NameOffset);
    AchievementGroupSecondMenuTable.AddID(builder, ID);
    return AchievementGroupSecondMenuTable.EndAchievementGroupSecondMenuTable(builder);
  }

  public static void StartAchievementGroupSecondMenuTable(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset NameOffset) { builder.AddOffset(1, NameOffset.Value, 0); }
  public static void AddIcon(FlatBufferBuilder builder, StringOffset IconOffset) { builder.AddOffset(2, IconOffset.Value, 0); }
  public static void AddSubItemID(FlatBufferBuilder builder, VectorOffset SubItemIDOffset) { builder.AddOffset(3, SubItemIDOffset.Value, 0); }
  public static VectorOffset CreateSubItemIDVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartSubItemIDVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<AchievementGroupSecondMenuTable> EndAchievementGroupSecondMenuTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<AchievementGroupSecondMenuTable>(o);
  }
  public static void FinishAchievementGroupSecondMenuTableBuffer(FlatBufferBuilder builder, Offset<AchievementGroupSecondMenuTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

