// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class DungeonUIConfigTable : IFlatbufferObject
{
public enum eCommon : int
{
 NONE = 0,
 GOLD = 1,
 FATIGUE = 2,
 TICKET = 3,
 DEADCOIN = 4,
 HELLTICKET = 5,
};

public enum eCrypt : int
{
 code = 535724232,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static DungeonUIConfigTable GetRootAsDungeonUIConfigTable(ByteBuffer _bb) { return GetRootAsDungeonUIConfigTable(_bb, new DungeonUIConfigTable()); }
  public static DungeonUIConfigTable GetRootAsDungeonUIConfigTable(ByteBuffer _bb, DungeonUIConfigTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public DungeonUIConfigTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public ProtoTable.DungeonUIConfigTable.eCommon CommonArray(int j) { int o = __p.__offset(6); return o != 0 ? (ProtoTable.DungeonUIConfigTable.eCommon)__p.bb.GetInt(__p.__vector(o) + j * 4) : (ProtoTable.DungeonUIConfigTable.eCommon)0; }
  public int CommonLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetCommonBytes() { return __p.__vector_as_arraysegment(6); }
 private FlatBufferArray<ProtoTable.DungeonUIConfigTable.eCommon> CommonValue;
 public FlatBufferArray<ProtoTable.DungeonUIConfigTable.eCommon>  Common
 {
  get{
  if (CommonValue == null)
  {
    CommonValue = new FlatBufferArray<ProtoTable.DungeonUIConfigTable.eCommon>(this.CommonArray, this.CommonLength);
  }
  return CommonValue;}
 }
  public string ClassName { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetClassNameBytes() { return __p.__vector_as_arraysegment(8); }
  public string BackgroundPath { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetBackgroundPathBytes() { return __p.__vector_as_arraysegment(10); }
  public string LeftPannelConfig { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetLeftPannelConfigBytes() { return __p.__vector_as_arraysegment(12); }
  public string RightPannelConfig { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetRightPannelConfigBytes() { return __p.__vector_as_arraysegment(14); }
  public string AreaDialogArray(int j) { int o = __p.__offset(16); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : FlatBufferConstants.DefaultString; }
  public int AreaDialogLength { get { int o = __p.__offset(16); return o != 0 ? __p.__vector_len(o) : 0; } }
 private FlatBufferArray<string> AreaDialogValue;
 public FlatBufferArray<string>  AreaDialog
 {
  get{
  if (AreaDialogValue == null)
  {
    AreaDialogValue = new FlatBufferArray<string>(this.AreaDialogArray, this.AreaDialogLength);
  }
  return AreaDialogValue;}
 }
  public string CharactorConfig { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetCharactorConfigBytes() { return __p.__vector_as_arraysegment(18); }
  public string AreaAfterDialogArray(int j) { int o = __p.__offset(20); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : FlatBufferConstants.DefaultString; }
  public int AreaAfterDialogLength { get { int o = __p.__offset(20); return o != 0 ? __p.__vector_len(o) : 0; } }
 private FlatBufferArray<string> AreaAfterDialogValue;
 public FlatBufferArray<string>  AreaAfterDialog
 {
  get{
  if (AreaAfterDialogValue == null)
  {
    AreaAfterDialogValue = new FlatBufferArray<string>(this.AreaAfterDialogArray, this.AreaAfterDialogLength);
  }
  return AreaAfterDialogValue;}
 }
  public int BossKilledDialog { get { int o = __p.__offset(22); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int TaskID { get { int o = __p.__offset(24); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }

  public static Offset<DungeonUIConfigTable> CreateDungeonUIConfigTable(FlatBufferBuilder builder,
      int ID = 0,
      VectorOffset CommonOffset = default(VectorOffset),
      StringOffset ClassNameOffset = default(StringOffset),
      StringOffset BackgroundPathOffset = default(StringOffset),
      StringOffset LeftPannelConfigOffset = default(StringOffset),
      StringOffset RightPannelConfigOffset = default(StringOffset),
      VectorOffset AreaDialogOffset = default(VectorOffset),
      StringOffset CharactorConfigOffset = default(StringOffset),
      VectorOffset AreaAfterDialogOffset = default(VectorOffset),
      int BossKilledDialog = 0,
      int TaskID = 0) {
    builder.StartObject(11);
    DungeonUIConfigTable.AddTaskID(builder, TaskID);
    DungeonUIConfigTable.AddBossKilledDialog(builder, BossKilledDialog);
    DungeonUIConfigTable.AddAreaAfterDialog(builder, AreaAfterDialogOffset);
    DungeonUIConfigTable.AddCharactorConfig(builder, CharactorConfigOffset);
    DungeonUIConfigTable.AddAreaDialog(builder, AreaDialogOffset);
    DungeonUIConfigTable.AddRightPannelConfig(builder, RightPannelConfigOffset);
    DungeonUIConfigTable.AddLeftPannelConfig(builder, LeftPannelConfigOffset);
    DungeonUIConfigTable.AddBackgroundPath(builder, BackgroundPathOffset);
    DungeonUIConfigTable.AddClassName(builder, ClassNameOffset);
    DungeonUIConfigTable.AddCommon(builder, CommonOffset);
    DungeonUIConfigTable.AddID(builder, ID);
    return DungeonUIConfigTable.EndDungeonUIConfigTable(builder);
  }

  public static void StartDungeonUIConfigTable(FlatBufferBuilder builder) { builder.StartObject(11); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddCommon(FlatBufferBuilder builder, VectorOffset CommonOffset) { builder.AddOffset(1, CommonOffset.Value, 0); }
  public static VectorOffset CreateCommonVector(FlatBufferBuilder builder, ProtoTable.DungeonUIConfigTable.eCommon[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt((int)data[i]); return builder.EndVector(); }
  public static void StartCommonVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddClassName(FlatBufferBuilder builder, StringOffset ClassNameOffset) { builder.AddOffset(2, ClassNameOffset.Value, 0); }
  public static void AddBackgroundPath(FlatBufferBuilder builder, StringOffset BackgroundPathOffset) { builder.AddOffset(3, BackgroundPathOffset.Value, 0); }
  public static void AddLeftPannelConfig(FlatBufferBuilder builder, StringOffset LeftPannelConfigOffset) { builder.AddOffset(4, LeftPannelConfigOffset.Value, 0); }
  public static void AddRightPannelConfig(FlatBufferBuilder builder, StringOffset RightPannelConfigOffset) { builder.AddOffset(5, RightPannelConfigOffset.Value, 0); }
  public static void AddAreaDialog(FlatBufferBuilder builder, VectorOffset AreaDialogOffset) { builder.AddOffset(6, AreaDialogOffset.Value, 0); }
  public static VectorOffset CreateAreaDialogVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartAreaDialogVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddCharactorConfig(FlatBufferBuilder builder, StringOffset CharactorConfigOffset) { builder.AddOffset(7, CharactorConfigOffset.Value, 0); }
  public static void AddAreaAfterDialog(FlatBufferBuilder builder, VectorOffset AreaAfterDialogOffset) { builder.AddOffset(8, AreaAfterDialogOffset.Value, 0); }
  public static VectorOffset CreateAreaAfterDialogVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartAreaAfterDialogVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddBossKilledDialog(FlatBufferBuilder builder, int BossKilledDialog) { builder.AddInt(9, BossKilledDialog, 0); }
  public static void AddTaskID(FlatBufferBuilder builder, int TaskID) { builder.AddInt(10, TaskID, 0); }
  public static Offset<DungeonUIConfigTable> EndDungeonUIConfigTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<DungeonUIConfigTable>(o);
  }
  public static void FinishDungeonUIConfigTableBuffer(FlatBufferBuilder builder, Offset<DungeonUIConfigTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

