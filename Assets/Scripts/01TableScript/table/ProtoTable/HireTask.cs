// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class HireTask : IFlatbufferObject
{
public enum eCrypt : int
{
 code = 486286475,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static HireTask GetRootAsHireTask(ByteBuffer _bb) { return GetRootAsHireTask(_bb, new HireTask()); }
  public static HireTask GetRootAsHireTask(ByteBuffer _bb, HireTask obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public HireTask __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Type { get { int o = __p.__offset(6); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int FullCnt { get { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string Rewards { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetRewardsBytes() { return __p.__vector_as_arraysegment(10); }
  public int RefreshType { get { int o = __p.__offset(12); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Identify { get { int o = __p.__offset(14); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ParamArray(int j) { int o = __p.__offset(16); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int ParamLength { get { int o = __p.__offset(16); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetParamBytes() { return __p.__vector_as_arraysegment(16); }
 private FlatBufferArray<int> ParamValue;
 public FlatBufferArray<int>  Param
 {
  get{
  if (ParamValue == null)
  {
    ParamValue = new FlatBufferArray<int>(this.ParamArray, this.ParamLength);
  }
  return ParamValue;}
 }
  public string Describe { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetDescribeBytes() { return __p.__vector_as_arraysegment(18); }
  public int Link { get { int o = __p.__offset(20); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }

  public static Offset<HireTask> CreateHireTask(FlatBufferBuilder builder,
      int ID = 0,
      int Type = 0,
      int FullCnt = 0,
      StringOffset RewardsOffset = default(StringOffset),
      int RefreshType = 0,
      int Identify = 0,
      VectorOffset ParamOffset = default(VectorOffset),
      StringOffset DescribeOffset = default(StringOffset),
      int Link = 0) {
    builder.StartObject(9);
    HireTask.AddLink(builder, Link);
    HireTask.AddDescribe(builder, DescribeOffset);
    HireTask.AddParam(builder, ParamOffset);
    HireTask.AddIdentify(builder, Identify);
    HireTask.AddRefreshType(builder, RefreshType);
    HireTask.AddRewards(builder, RewardsOffset);
    HireTask.AddFullCnt(builder, FullCnt);
    HireTask.AddType(builder, Type);
    HireTask.AddID(builder, ID);
    return HireTask.EndHireTask(builder);
  }

  public static void StartHireTask(FlatBufferBuilder builder) { builder.StartObject(9); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddType(FlatBufferBuilder builder, int Type) { builder.AddInt(1, Type, 0); }
  public static void AddFullCnt(FlatBufferBuilder builder, int FullCnt) { builder.AddInt(2, FullCnt, 0); }
  public static void AddRewards(FlatBufferBuilder builder, StringOffset RewardsOffset) { builder.AddOffset(3, RewardsOffset.Value, 0); }
  public static void AddRefreshType(FlatBufferBuilder builder, int RefreshType) { builder.AddInt(4, RefreshType, 0); }
  public static void AddIdentify(FlatBufferBuilder builder, int Identify) { builder.AddInt(5, Identify, 0); }
  public static void AddParam(FlatBufferBuilder builder, VectorOffset ParamOffset) { builder.AddOffset(6, ParamOffset.Value, 0); }
  public static VectorOffset CreateParamVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartParamVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddDescribe(FlatBufferBuilder builder, StringOffset DescribeOffset) { builder.AddOffset(7, DescribeOffset.Value, 0); }
  public static void AddLink(FlatBufferBuilder builder, int Link) { builder.AddInt(8, Link, 0); }
  public static Offset<HireTask> EndHireTask(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<HireTask>(o);
  }
  public static void FinishHireTaskBuffer(FlatBufferBuilder builder, Offset<HireTask> offset) { builder.Finish(offset.Value); }
};


}


#endif

