// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class MonsterInstanceInfoTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = -949526359,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static MonsterInstanceInfoTable GetRootAsMonsterInstanceInfoTable(ByteBuffer _bb) { return GetRootAsMonsterInstanceInfoTable(_bb, new MonsterInstanceInfoTable()); }
  public static MonsterInstanceInfoTable GetRootAsMonsterInstanceInfoTable(ByteBuffer _bb, MonsterInstanceInfoTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public MonsterInstanceInfoTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
  public int Sight { get { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string AIActionPath { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetAIActionPathBytes() { return __p.__vector_as_arraysegment(10); }
  public int BornBuffIDsArray(int j) { int o = __p.__offset(12); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int BornBuffIDsLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetBornBuffIDsBytes() { return __p.__vector_as_arraysegment(12); }
 private FlatBufferArray<int> BornBuffIDsValue;
 public FlatBufferArray<int>  BornBuffIDs
 {
  get{
  if (BornBuffIDsValue == null)
  {
    BornBuffIDsValue = new FlatBufferArray<int>(this.BornBuffIDsArray, this.BornBuffIDsLength);
  }
  return BornBuffIDsValue;}
 }
  public int BornBuffInfoIDsArray(int j) { int o = __p.__offset(14); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int BornBuffInfoIDsLength { get { int o = __p.__offset(14); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetBornBuffInfoIDsBytes() { return __p.__vector_as_arraysegment(14); }
 private FlatBufferArray<int> BornBuffInfoIDsValue;
 public FlatBufferArray<int>  BornBuffInfoIDs
 {
  get{
  if (BornBuffInfoIDsValue == null)
  {
    BornBuffInfoIDsValue = new FlatBufferArray<int>(this.BornBuffInfoIDsArray, this.BornBuffInfoIDsLength);
  }
  return BornBuffInfoIDsValue;}
 }
  public int BornMechismIDsArray(int j) { int o = __p.__offset(16); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int BornMechismIDsLength { get { int o = __p.__offset(16); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetBornMechismIDsBytes() { return __p.__vector_as_arraysegment(16); }
 private FlatBufferArray<int> BornMechismIDsValue;
 public FlatBufferArray<int>  BornMechismIDs
 {
  get{
  if (BornMechismIDsValue == null)
  {
    BornMechismIDsValue = new FlatBufferArray<int>(this.BornMechismIDsArray, this.BornMechismIDsLength);
  }
  return BornMechismIDsValue;}
 }

  public static Offset<MonsterInstanceInfoTable> CreateMonsterInstanceInfoTable(FlatBufferBuilder builder,
      int ID = 0,
      StringOffset NameOffset = default(StringOffset),
      int Sight = 0,
      StringOffset AIActionPathOffset = default(StringOffset),
      VectorOffset BornBuffIDsOffset = default(VectorOffset),
      VectorOffset BornBuffInfoIDsOffset = default(VectorOffset),
      VectorOffset BornMechismIDsOffset = default(VectorOffset)) {
    builder.StartObject(7);
    MonsterInstanceInfoTable.AddBornMechismIDs(builder, BornMechismIDsOffset);
    MonsterInstanceInfoTable.AddBornBuffInfoIDs(builder, BornBuffInfoIDsOffset);
    MonsterInstanceInfoTable.AddBornBuffIDs(builder, BornBuffIDsOffset);
    MonsterInstanceInfoTable.AddAIActionPath(builder, AIActionPathOffset);
    MonsterInstanceInfoTable.AddSight(builder, Sight);
    MonsterInstanceInfoTable.AddName(builder, NameOffset);
    MonsterInstanceInfoTable.AddID(builder, ID);
    return MonsterInstanceInfoTable.EndMonsterInstanceInfoTable(builder);
  }

  public static void StartMonsterInstanceInfoTable(FlatBufferBuilder builder) { builder.StartObject(7); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset NameOffset) { builder.AddOffset(1, NameOffset.Value, 0); }
  public static void AddSight(FlatBufferBuilder builder, int Sight) { builder.AddInt(2, Sight, 0); }
  public static void AddAIActionPath(FlatBufferBuilder builder, StringOffset AIActionPathOffset) { builder.AddOffset(3, AIActionPathOffset.Value, 0); }
  public static void AddBornBuffIDs(FlatBufferBuilder builder, VectorOffset BornBuffIDsOffset) { builder.AddOffset(4, BornBuffIDsOffset.Value, 0); }
  public static VectorOffset CreateBornBuffIDsVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartBornBuffIDsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddBornBuffInfoIDs(FlatBufferBuilder builder, VectorOffset BornBuffInfoIDsOffset) { builder.AddOffset(5, BornBuffInfoIDsOffset.Value, 0); }
  public static VectorOffset CreateBornBuffInfoIDsVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartBornBuffInfoIDsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddBornMechismIDs(FlatBufferBuilder builder, VectorOffset BornMechismIDsOffset) { builder.AddOffset(6, BornMechismIDsOffset.Value, 0); }
  public static VectorOffset CreateBornMechismIDsVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartBornMechismIDsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<MonsterInstanceInfoTable> EndMonsterInstanceInfoTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<MonsterInstanceInfoTable>(o);
  }
  public static void FinishMonsterInstanceInfoTableBuffer(FlatBufferBuilder builder, Offset<MonsterInstanceInfoTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

