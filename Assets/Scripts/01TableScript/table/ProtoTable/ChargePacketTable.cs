// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class ChargePacketTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = -1353523056,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ChargePacketTable GetRootAsChargePacketTable(ByteBuffer _bb) { return GetRootAsChargePacketTable(_bb, new ChargePacketTable()); }
  public static ChargePacketTable GetRootAsChargePacketTable(ByteBuffer _bb, ChargePacketTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ChargePacketTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Sort { get { int o = __p.__offset(6); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string Name { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(8); }
  public int OldPrice { get { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int Price { get { int o = __p.__offset(12); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int VipScore { get { int o = __p.__offset(14); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int StartTime { get { int o = __p.__offset(16); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int EndTime { get { int o = __p.__offset(18); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int limitDailyNum { get { int o = __p.__offset(20); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int limitTotalNum { get { int o = __p.__offset(22); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string rewards { get { int o = __p.__offset(24); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetRewardsBytes() { return __p.__vector_as_arraysegment(24); }
  public string Icon { get { int o = __p.__offset(26); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetIconBytes() { return __p.__vector_as_arraysegment(26); }

  public static Offset<ChargePacketTable> CreateChargePacketTable(FlatBufferBuilder builder,
      int ID = 0,
      int Sort = 0,
      StringOffset NameOffset = default(StringOffset),
      int OldPrice = 0,
      int Price = 0,
      int VipScore = 0,
      int StartTime = 0,
      int EndTime = 0,
      int limitDailyNum = 0,
      int limitTotalNum = 0,
      StringOffset rewardsOffset = default(StringOffset),
      StringOffset IconOffset = default(StringOffset)) {
    builder.StartObject(12);
    ChargePacketTable.AddIcon(builder, IconOffset);
    ChargePacketTable.AddRewards(builder, rewardsOffset);
    ChargePacketTable.AddLimitTotalNum(builder, limitTotalNum);
    ChargePacketTable.AddLimitDailyNum(builder, limitDailyNum);
    ChargePacketTable.AddEndTime(builder, EndTime);
    ChargePacketTable.AddStartTime(builder, StartTime);
    ChargePacketTable.AddVipScore(builder, VipScore);
    ChargePacketTable.AddPrice(builder, Price);
    ChargePacketTable.AddOldPrice(builder, OldPrice);
    ChargePacketTable.AddName(builder, NameOffset);
    ChargePacketTable.AddSort(builder, Sort);
    ChargePacketTable.AddID(builder, ID);
    return ChargePacketTable.EndChargePacketTable(builder);
  }

  public static void StartChargePacketTable(FlatBufferBuilder builder) { builder.StartObject(12); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddSort(FlatBufferBuilder builder, int Sort) { builder.AddInt(1, Sort, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset NameOffset) { builder.AddOffset(2, NameOffset.Value, 0); }
  public static void AddOldPrice(FlatBufferBuilder builder, int OldPrice) { builder.AddInt(3, OldPrice, 0); }
  public static void AddPrice(FlatBufferBuilder builder, int Price) { builder.AddInt(4, Price, 0); }
  public static void AddVipScore(FlatBufferBuilder builder, int VipScore) { builder.AddInt(5, VipScore, 0); }
  public static void AddStartTime(FlatBufferBuilder builder, int StartTime) { builder.AddInt(6, StartTime, 0); }
  public static void AddEndTime(FlatBufferBuilder builder, int EndTime) { builder.AddInt(7, EndTime, 0); }
  public static void AddLimitDailyNum(FlatBufferBuilder builder, int limitDailyNum) { builder.AddInt(8, limitDailyNum, 0); }
  public static void AddLimitTotalNum(FlatBufferBuilder builder, int limitTotalNum) { builder.AddInt(9, limitTotalNum, 0); }
  public static void AddRewards(FlatBufferBuilder builder, StringOffset rewardsOffset) { builder.AddOffset(10, rewardsOffset.Value, 0); }
  public static void AddIcon(FlatBufferBuilder builder, StringOffset IconOffset) { builder.AddOffset(11, IconOffset.Value, 0); }
  public static Offset<ChargePacketTable> EndChargePacketTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ChargePacketTable>(o);
  }
  public static void FinishChargePacketTableBuffer(FlatBufferBuilder builder, Offset<ChargePacketTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

