// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class EquipRecoScUpPrbWeightTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = -596189940,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static EquipRecoScUpPrbWeightTable GetRootAsEquipRecoScUpPrbWeightTable(ByteBuffer _bb) { return GetRootAsEquipRecoScUpPrbWeightTable(_bb, new EquipRecoScUpPrbWeightTable()); }
  public static EquipRecoScUpPrbWeightTable GetRootAsEquipRecoScUpPrbWeightTable(ByteBuffer _bb, EquipRecoScUpPrbWeightTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public EquipRecoScUpPrbWeightTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int UpScore { get { int o = __p.__offset(6); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ProbWeight { get { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }

  public static Offset<EquipRecoScUpPrbWeightTable> CreateEquipRecoScUpPrbWeightTable(FlatBufferBuilder builder,
      int ID = 0,
      int UpScore = 0,
      int ProbWeight = 0) {
    builder.StartObject(3);
    EquipRecoScUpPrbWeightTable.AddProbWeight(builder, ProbWeight);
    EquipRecoScUpPrbWeightTable.AddUpScore(builder, UpScore);
    EquipRecoScUpPrbWeightTable.AddID(builder, ID);
    return EquipRecoScUpPrbWeightTable.EndEquipRecoScUpPrbWeightTable(builder);
  }

  public static void StartEquipRecoScUpPrbWeightTable(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddUpScore(FlatBufferBuilder builder, int UpScore) { builder.AddInt(1, UpScore, 0); }
  public static void AddProbWeight(FlatBufferBuilder builder, int ProbWeight) { builder.AddInt(2, ProbWeight, 0); }
  public static Offset<EquipRecoScUpPrbWeightTable> EndEquipRecoScUpPrbWeightTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<EquipRecoScUpPrbWeightTable>(o);
  }
  public static void FinishEquipRecoScUpPrbWeightTableBuffer(FlatBufferBuilder builder, Offset<EquipRecoScUpPrbWeightTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

