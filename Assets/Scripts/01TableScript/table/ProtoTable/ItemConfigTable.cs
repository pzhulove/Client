// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class ItemConfigTable : IFlatbufferObject
{
public enum eItemType : int
{
 ItemType_None = 0,
 BattleDrugHP = 1,
 BattleDrugMP = 2,
 BattleDrugHPMP = 3,
 BattleConsume = 4,
 BattleCoin = 5,
};

public enum eCrypt : int
{
 code = -193024343,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ItemConfigTable GetRootAsItemConfigTable(ByteBuffer _bb) { return GetRootAsItemConfigTable(_bb, new ItemConfigTable()); }
  public static ItemConfigTable GetRootAsItemConfigTable(ByteBuffer _bb, ItemConfigTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ItemConfigTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ItemID { get { int o = __p.__offset(6); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public ProtoTable.ItemConfigTable.eItemType ItemType { get { int o = __p.__offset(8); return o != 0 ? (ProtoTable.ItemConfigTable.eItemType)__p.bb.GetInt(o + __p.bb_pos) : ProtoTable.ItemConfigTable.eItemType.ItemType_None; } }
  public string UseItemEffectArray(int j) { int o = __p.__offset(10); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : FlatBufferConstants.DefaultString; }
  public int UseItemEffectLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
 private FlatBufferArray<string> UseItemEffectValue;
 public FlatBufferArray<string>  UseItemEffect
 {
  get{
  if (UseItemEffectValue == null)
  {
    UseItemEffectValue = new FlatBufferArray<string>(this.UseItemEffectArray, this.UseItemEffectLength);
  }
  return UseItemEffectValue;}
 }
  public int InvalidTipsID { get { int o = __p.__offset(12); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int DefualtUsePriority { get { int o = __p.__offset(14); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }

  public static Offset<ItemConfigTable> CreateItemConfigTable(FlatBufferBuilder builder,
      int ID = 0,
      int ItemID = 0,
      ProtoTable.ItemConfigTable.eItemType ItemType = ProtoTable.ItemConfigTable.eItemType.ItemType_None,
      VectorOffset UseItemEffectOffset = default(VectorOffset),
      int InvalidTipsID = 0,
      int DefualtUsePriority = 0) {
    builder.StartObject(6);
    ItemConfigTable.AddDefualtUsePriority(builder, DefualtUsePriority);
    ItemConfigTable.AddInvalidTipsID(builder, InvalidTipsID);
    ItemConfigTable.AddUseItemEffect(builder, UseItemEffectOffset);
    ItemConfigTable.AddItemType(builder, ItemType);
    ItemConfigTable.AddItemID(builder, ItemID);
    ItemConfigTable.AddID(builder, ID);
    return ItemConfigTable.EndItemConfigTable(builder);
  }

  public static void StartItemConfigTable(FlatBufferBuilder builder) { builder.StartObject(6); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddItemID(FlatBufferBuilder builder, int ItemID) { builder.AddInt(1, ItemID, 0); }
  public static void AddItemType(FlatBufferBuilder builder, ProtoTable.ItemConfigTable.eItemType ItemType) { builder.AddInt(2, (int)ItemType, 0); }
  public static void AddUseItemEffect(FlatBufferBuilder builder, VectorOffset UseItemEffectOffset) { builder.AddOffset(3, UseItemEffectOffset.Value, 0); }
  public static VectorOffset CreateUseItemEffectVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartUseItemEffectVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddInvalidTipsID(FlatBufferBuilder builder, int InvalidTipsID) { builder.AddInt(4, InvalidTipsID, 0); }
  public static void AddDefualtUsePriority(FlatBufferBuilder builder, int DefualtUsePriority) { builder.AddInt(5, DefualtUsePriority, 0); }
  public static Offset<ItemConfigTable> EndItemConfigTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ItemConfigTable>(o);
  }
  public static void FinishItemConfigTableBuffer(FlatBufferBuilder builder, Offset<ItemConfigTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

