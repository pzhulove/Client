// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class JarBonus : IFlatbufferObject
{
public enum eType : int
{
 NoneJar = 0,
 MagicJar = 1,
 MagicJar_Lv55 = 4,
 GoldJar = 2,
 BudoJar = 3,
 EqrecoJar = 5,
 WingJar = 101,
 FashionJar = 102,
 EquipJar = 103,
};

public enum eCrypt : int
{
 code = 484252340,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static JarBonus GetRootAsJarBonus(ByteBuffer _bb) { return GetRootAsJarBonus(_bb, new JarBonus()); }
  public static JarBonus GetRootAsJarBonus(ByteBuffer _bb, JarBonus obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public JarBonus __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
  public ProtoTable.JarBonus.eType Type { get { int o = __p.__offset(8); return o != 0 ? (ProtoTable.JarBonus.eType)__p.bb.GetInt(o + __p.bb_pos) : ProtoTable.JarBonus.eType.NoneJar; } }
  public int FilterArray(int j) { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int FilterLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetFilterBytes() { return __p.__vector_as_arraysegment(10); }
 private FlatBufferArray<int> FilterValue;
 public FlatBufferArray<int>  Filter
 {
  get{
  if (FilterValue == null)
  {
    FilterValue = new FlatBufferArray<int>(this.FilterArray, this.FilterLength);
  }
  return FilterValue;}
 }
  public string JarImage { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetJarImageBytes() { return __p.__vector_as_arraysegment(12); }
  public string JarEffect { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetJarEffectBytes() { return __p.__vector_as_arraysegment(14); }
  public int ExBonusNum_1 { get { int o = __p.__offset(16); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ExBonusJarID_1 { get { int o = __p.__offset(18); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ExBonusNum_2 { get { int o = __p.__offset(20); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ExBonusJarID_2 { get { int o = __p.__offset(22); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string GetItemsAndNumArray(int j) { int o = __p.__offset(24); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : FlatBufferConstants.DefaultString; }
  public int GetItemsAndNumLength { get { int o = __p.__offset(24); return o != 0 ? __p.__vector_len(o) : 0; } }
 private FlatBufferArray<string> GetItemsAndNumValue;
 public FlatBufferArray<string>  GetItemsAndNum
 {
  get{
  if (GetItemsAndNumValue == null)
  {
    GetItemsAndNumValue = new FlatBufferArray<string>(this.GetItemsAndNumArray, this.GetItemsAndNumLength);
  }
  return GetItemsAndNumValue;}
 }
  public int BuyMoneyType { get { int o = __p.__offset(26); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int MoneyValue { get { int o = __p.__offset(28); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int DayBuyLimite { get { int o = __p.__offset(30); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string BuyLimitKey { get { int o = __p.__offset(32); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetBuyLimitKeyBytes() { return __p.__vector_as_arraysegment(32); }
  public int NeedExItem { get { int o = __p.__offset(34); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ExItemID { get { int o = __p.__offset(36); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ExItemCostNum { get { int o = __p.__offset(38); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ComboBuyNum { get { int o = __p.__offset(40); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int SingleBuyDiscount { get { int o = __p.__offset(42); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ComboBuyDiscount { get { int o = __p.__offset(44); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string CounterKey { get { int o = __p.__offset(46); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetCounterKeyBytes() { return __p.__vector_as_arraysegment(46); }
  public int GetPointType { get { int o = __p.__offset(48); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int GetPointNum { get { int o = __p.__offset(50); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string GetPointCrit { get { int o = __p.__offset(52); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetGetPointCritBytes() { return __p.__vector_as_arraysegment(52); }
  public int MaxFreeCount { get { int o = __p.__offset(54); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int FreeCD { get { int o = __p.__offset(56); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string FreeNumCounterKey { get { int o = __p.__offset(58); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetFreeNumCounterKeyBytes() { return __p.__vector_as_arraysegment(58); }
  public string NextFreeTimeCounterKey { get { int o = __p.__offset(60); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetNextFreeTimeCounterKeyBytes() { return __p.__vector_as_arraysegment(60); }
  public int NeedRecord { get { int o = __p.__offset(62); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ActJarDisMaxNum { get { int o = __p.__offset(64); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ActJarDisReset { get { int o = __p.__offset(66); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ActifactJarRewardTime { get { int o = __p.__offset(68); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int JarGiftMustOutNum { get { int o = __p.__offset(70); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string CurCycleIsOutTreasKey { get { int o = __p.__offset(72); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetCurCycleIsOutTreasKeyBytes() { return __p.__vector_as_arraysegment(72); }
  public int jarGiftOutJarId { get { int o = __p.__offset(74); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int SmellType { get { int o = __p.__offset(76); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }

  public static Offset<JarBonus> CreateJarBonus(FlatBufferBuilder builder,
      int ID = 0,
      StringOffset NameOffset = default(StringOffset),
      ProtoTable.JarBonus.eType Type = ProtoTable.JarBonus.eType.NoneJar,
      VectorOffset FilterOffset = default(VectorOffset),
      StringOffset JarImageOffset = default(StringOffset),
      StringOffset JarEffectOffset = default(StringOffset),
      int ExBonusNum_1 = 0,
      int ExBonusJarID_1 = 0,
      int ExBonusNum_2 = 0,
      int ExBonusJarID_2 = 0,
      VectorOffset GetItemsAndNumOffset = default(VectorOffset),
      int BuyMoneyType = 0,
      int MoneyValue = 0,
      int DayBuyLimite = 0,
      StringOffset BuyLimitKeyOffset = default(StringOffset),
      int NeedExItem = 0,
      int ExItemID = 0,
      int ExItemCostNum = 0,
      int ComboBuyNum = 0,
      int SingleBuyDiscount = 0,
      int ComboBuyDiscount = 0,
      StringOffset CounterKeyOffset = default(StringOffset),
      int GetPointType = 0,
      int GetPointNum = 0,
      StringOffset GetPointCritOffset = default(StringOffset),
      int MaxFreeCount = 0,
      int FreeCD = 0,
      StringOffset FreeNumCounterKeyOffset = default(StringOffset),
      StringOffset NextFreeTimeCounterKeyOffset = default(StringOffset),
      int NeedRecord = 0,
      int ActJarDisMaxNum = 0,
      int ActJarDisReset = 0,
      int ActifactJarRewardTime = 0,
      int JarGiftMustOutNum = 0,
      StringOffset CurCycleIsOutTreasKeyOffset = default(StringOffset),
      int jarGiftOutJarId = 0,
      int SmellType = 0) {
    builder.StartObject(37);
    JarBonus.AddSmellType(builder, SmellType);
    JarBonus.AddJarGiftOutJarId(builder, jarGiftOutJarId);
    JarBonus.AddCurCycleIsOutTreasKey(builder, CurCycleIsOutTreasKeyOffset);
    JarBonus.AddJarGiftMustOutNum(builder, JarGiftMustOutNum);
    JarBonus.AddActifactJarRewardTime(builder, ActifactJarRewardTime);
    JarBonus.AddActJarDisReset(builder, ActJarDisReset);
    JarBonus.AddActJarDisMaxNum(builder, ActJarDisMaxNum);
    JarBonus.AddNeedRecord(builder, NeedRecord);
    JarBonus.AddNextFreeTimeCounterKey(builder, NextFreeTimeCounterKeyOffset);
    JarBonus.AddFreeNumCounterKey(builder, FreeNumCounterKeyOffset);
    JarBonus.AddFreeCD(builder, FreeCD);
    JarBonus.AddMaxFreeCount(builder, MaxFreeCount);
    JarBonus.AddGetPointCrit(builder, GetPointCritOffset);
    JarBonus.AddGetPointNum(builder, GetPointNum);
    JarBonus.AddGetPointType(builder, GetPointType);
    JarBonus.AddCounterKey(builder, CounterKeyOffset);
    JarBonus.AddComboBuyDiscount(builder, ComboBuyDiscount);
    JarBonus.AddSingleBuyDiscount(builder, SingleBuyDiscount);
    JarBonus.AddComboBuyNum(builder, ComboBuyNum);
    JarBonus.AddExItemCostNum(builder, ExItemCostNum);
    JarBonus.AddExItemID(builder, ExItemID);
    JarBonus.AddNeedExItem(builder, NeedExItem);
    JarBonus.AddBuyLimitKey(builder, BuyLimitKeyOffset);
    JarBonus.AddDayBuyLimite(builder, DayBuyLimite);
    JarBonus.AddMoneyValue(builder, MoneyValue);
    JarBonus.AddBuyMoneyType(builder, BuyMoneyType);
    JarBonus.AddGetItemsAndNum(builder, GetItemsAndNumOffset);
    JarBonus.AddExBonusJarID2(builder, ExBonusJarID_2);
    JarBonus.AddExBonusNum2(builder, ExBonusNum_2);
    JarBonus.AddExBonusJarID1(builder, ExBonusJarID_1);
    JarBonus.AddExBonusNum1(builder, ExBonusNum_1);
    JarBonus.AddJarEffect(builder, JarEffectOffset);
    JarBonus.AddJarImage(builder, JarImageOffset);
    JarBonus.AddFilter(builder, FilterOffset);
    JarBonus.AddType(builder, Type);
    JarBonus.AddName(builder, NameOffset);
    JarBonus.AddID(builder, ID);
    return JarBonus.EndJarBonus(builder);
  }

  public static void StartJarBonus(FlatBufferBuilder builder) { builder.StartObject(37); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset NameOffset) { builder.AddOffset(1, NameOffset.Value, 0); }
  public static void AddType(FlatBufferBuilder builder, ProtoTable.JarBonus.eType Type) { builder.AddInt(2, (int)Type, 0); }
  public static void AddFilter(FlatBufferBuilder builder, VectorOffset FilterOffset) { builder.AddOffset(3, FilterOffset.Value, 0); }
  public static VectorOffset CreateFilterVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartFilterVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddJarImage(FlatBufferBuilder builder, StringOffset JarImageOffset) { builder.AddOffset(4, JarImageOffset.Value, 0); }
  public static void AddJarEffect(FlatBufferBuilder builder, StringOffset JarEffectOffset) { builder.AddOffset(5, JarEffectOffset.Value, 0); }
  public static void AddExBonusNum1(FlatBufferBuilder builder, int ExBonusNum1) { builder.AddInt(6, ExBonusNum1, 0); }
  public static void AddExBonusJarID1(FlatBufferBuilder builder, int ExBonusJarID1) { builder.AddInt(7, ExBonusJarID1, 0); }
  public static void AddExBonusNum2(FlatBufferBuilder builder, int ExBonusNum2) { builder.AddInt(8, ExBonusNum2, 0); }
  public static void AddExBonusJarID2(FlatBufferBuilder builder, int ExBonusJarID2) { builder.AddInt(9, ExBonusJarID2, 0); }
  public static void AddGetItemsAndNum(FlatBufferBuilder builder, VectorOffset GetItemsAndNumOffset) { builder.AddOffset(10, GetItemsAndNumOffset.Value, 0); }
  public static VectorOffset CreateGetItemsAndNumVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartGetItemsAndNumVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddBuyMoneyType(FlatBufferBuilder builder, int BuyMoneyType) { builder.AddInt(11, BuyMoneyType, 0); }
  public static void AddMoneyValue(FlatBufferBuilder builder, int MoneyValue) { builder.AddInt(12, MoneyValue, 0); }
  public static void AddDayBuyLimite(FlatBufferBuilder builder, int DayBuyLimite) { builder.AddInt(13, DayBuyLimite, 0); }
  public static void AddBuyLimitKey(FlatBufferBuilder builder, StringOffset BuyLimitKeyOffset) { builder.AddOffset(14, BuyLimitKeyOffset.Value, 0); }
  public static void AddNeedExItem(FlatBufferBuilder builder, int NeedExItem) { builder.AddInt(15, NeedExItem, 0); }
  public static void AddExItemID(FlatBufferBuilder builder, int ExItemID) { builder.AddInt(16, ExItemID, 0); }
  public static void AddExItemCostNum(FlatBufferBuilder builder, int ExItemCostNum) { builder.AddInt(17, ExItemCostNum, 0); }
  public static void AddComboBuyNum(FlatBufferBuilder builder, int ComboBuyNum) { builder.AddInt(18, ComboBuyNum, 0); }
  public static void AddSingleBuyDiscount(FlatBufferBuilder builder, int SingleBuyDiscount) { builder.AddInt(19, SingleBuyDiscount, 0); }
  public static void AddComboBuyDiscount(FlatBufferBuilder builder, int ComboBuyDiscount) { builder.AddInt(20, ComboBuyDiscount, 0); }
  public static void AddCounterKey(FlatBufferBuilder builder, StringOffset CounterKeyOffset) { builder.AddOffset(21, CounterKeyOffset.Value, 0); }
  public static void AddGetPointType(FlatBufferBuilder builder, int GetPointType) { builder.AddInt(22, GetPointType, 0); }
  public static void AddGetPointNum(FlatBufferBuilder builder, int GetPointNum) { builder.AddInt(23, GetPointNum, 0); }
  public static void AddGetPointCrit(FlatBufferBuilder builder, StringOffset GetPointCritOffset) { builder.AddOffset(24, GetPointCritOffset.Value, 0); }
  public static void AddMaxFreeCount(FlatBufferBuilder builder, int MaxFreeCount) { builder.AddInt(25, MaxFreeCount, 0); }
  public static void AddFreeCD(FlatBufferBuilder builder, int FreeCD) { builder.AddInt(26, FreeCD, 0); }
  public static void AddFreeNumCounterKey(FlatBufferBuilder builder, StringOffset FreeNumCounterKeyOffset) { builder.AddOffset(27, FreeNumCounterKeyOffset.Value, 0); }
  public static void AddNextFreeTimeCounterKey(FlatBufferBuilder builder, StringOffset NextFreeTimeCounterKeyOffset) { builder.AddOffset(28, NextFreeTimeCounterKeyOffset.Value, 0); }
  public static void AddNeedRecord(FlatBufferBuilder builder, int NeedRecord) { builder.AddInt(29, NeedRecord, 0); }
  public static void AddActJarDisMaxNum(FlatBufferBuilder builder, int ActJarDisMaxNum) { builder.AddInt(30, ActJarDisMaxNum, 0); }
  public static void AddActJarDisReset(FlatBufferBuilder builder, int ActJarDisReset) { builder.AddInt(31, ActJarDisReset, 0); }
  public static void AddActifactJarRewardTime(FlatBufferBuilder builder, int ActifactJarRewardTime) { builder.AddInt(32, ActifactJarRewardTime, 0); }
  public static void AddJarGiftMustOutNum(FlatBufferBuilder builder, int JarGiftMustOutNum) { builder.AddInt(33, JarGiftMustOutNum, 0); }
  public static void AddCurCycleIsOutTreasKey(FlatBufferBuilder builder, StringOffset CurCycleIsOutTreasKeyOffset) { builder.AddOffset(34, CurCycleIsOutTreasKeyOffset.Value, 0); }
  public static void AddJarGiftOutJarId(FlatBufferBuilder builder, int jarGiftOutJarId) { builder.AddInt(35, jarGiftOutJarId, 0); }
  public static void AddSmellType(FlatBufferBuilder builder, int SmellType) { builder.AddInt(36, SmellType, 0); }
  public static Offset<JarBonus> EndJarBonus(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<JarBonus>(o);
  }
  public static void FinishJarBonusBuffer(FlatBufferBuilder builder, Offset<JarBonus> offset) { builder.Finish(offset.Value); }
};


}


#endif

