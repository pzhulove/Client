// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class ShopMainFrameTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = -1299368992,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ShopMainFrameTable GetRootAsShopMainFrameTable(ByteBuffer _bb) { return GetRootAsShopMainFrameTable(_bb, new ShopMainFrameTable()); }
  public static ShopMainFrameTable GetRootAsShopMainFrameTable(ByteBuffer _bb, ShopMainFrameTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ShopMainFrameTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string ShopName { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetShopNameBytes() { return __p.__vector_as_arraysegment(6); }
  public int HelpID { get { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int ChildrenArray(int j) { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int ChildrenLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetChildrenBytes() { return __p.__vector_as_arraysegment(10); }
 private FlatBufferArray<int> ChildrenValue;
 public FlatBufferArray<int>  Children
 {
  get{
  if (ChildrenValue == null)
  {
    ChildrenValue = new FlatBufferArray<int>(this.ChildrenArray, this.ChildrenLength);
  }
  return ChildrenValue;}
 }

  public static Offset<ShopMainFrameTable> CreateShopMainFrameTable(FlatBufferBuilder builder,
      int ID = 0,
      StringOffset ShopNameOffset = default(StringOffset),
      int HelpID = 0,
      VectorOffset ChildrenOffset = default(VectorOffset)) {
    builder.StartObject(4);
    ShopMainFrameTable.AddChildren(builder, ChildrenOffset);
    ShopMainFrameTable.AddHelpID(builder, HelpID);
    ShopMainFrameTable.AddShopName(builder, ShopNameOffset);
    ShopMainFrameTable.AddID(builder, ID);
    return ShopMainFrameTable.EndShopMainFrameTable(builder);
  }

  public static void StartShopMainFrameTable(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddShopName(FlatBufferBuilder builder, StringOffset ShopNameOffset) { builder.AddOffset(1, ShopNameOffset.Value, 0); }
  public static void AddHelpID(FlatBufferBuilder builder, int HelpID) { builder.AddInt(2, HelpID, 0); }
  public static void AddChildren(FlatBufferBuilder builder, VectorOffset ChildrenOffset) { builder.AddOffset(3, ChildrenOffset.Value, 0); }
  public static VectorOffset CreateChildrenVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartChildrenVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ShopMainFrameTable> EndShopMainFrameTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ShopMainFrameTable>(o);
  }
  public static void FinishShopMainFrameTableBuffer(FlatBufferBuilder builder, Offset<ShopMainFrameTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

