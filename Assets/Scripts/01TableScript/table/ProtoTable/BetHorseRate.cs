// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class BetHorseRate : IFlatbufferObject
{
public enum eCrypt : int
{
 code = -192584734,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static BetHorseRate GetRootAsBetHorseRate(ByteBuffer _bb) { return GetRootAsBetHorseRate(_bb, new BetHorseRate()); }
  public static BetHorseRate GetRootAsBetHorseRate(ByteBuffer _bb, BetHorseRate obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public BetHorseRate __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int WeatherType { get { int o = __p.__offset(6); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int WeatherOccupation_1 { get { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int WeatherOccupation_2 { get { int o = __p.__offset(10); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int WeatherWinRate { get { int o = __p.__offset(12); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int TerrainType { get { int o = __p.__offset(14); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int TerrainOccupation_1 { get { int o = __p.__offset(16); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int TerrainOccupation_2 { get { int o = __p.__offset(18); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public int TerrainWinRate { get { int o = __p.__offset(20); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }

  public static Offset<BetHorseRate> CreateBetHorseRate(FlatBufferBuilder builder,
      int ID = 0,
      int WeatherType = 0,
      int WeatherOccupation_1 = 0,
      int WeatherOccupation_2 = 0,
      int WeatherWinRate = 0,
      int TerrainType = 0,
      int TerrainOccupation_1 = 0,
      int TerrainOccupation_2 = 0,
      int TerrainWinRate = 0) {
    builder.StartObject(9);
    BetHorseRate.AddTerrainWinRate(builder, TerrainWinRate);
    BetHorseRate.AddTerrainOccupation2(builder, TerrainOccupation_2);
    BetHorseRate.AddTerrainOccupation1(builder, TerrainOccupation_1);
    BetHorseRate.AddTerrainType(builder, TerrainType);
    BetHorseRate.AddWeatherWinRate(builder, WeatherWinRate);
    BetHorseRate.AddWeatherOccupation2(builder, WeatherOccupation_2);
    BetHorseRate.AddWeatherOccupation1(builder, WeatherOccupation_1);
    BetHorseRate.AddWeatherType(builder, WeatherType);
    BetHorseRate.AddID(builder, ID);
    return BetHorseRate.EndBetHorseRate(builder);
  }

  public static void StartBetHorseRate(FlatBufferBuilder builder) { builder.StartObject(9); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddWeatherType(FlatBufferBuilder builder, int WeatherType) { builder.AddInt(1, WeatherType, 0); }
  public static void AddWeatherOccupation1(FlatBufferBuilder builder, int WeatherOccupation1) { builder.AddInt(2, WeatherOccupation1, 0); }
  public static void AddWeatherOccupation2(FlatBufferBuilder builder, int WeatherOccupation2) { builder.AddInt(3, WeatherOccupation2, 0); }
  public static void AddWeatherWinRate(FlatBufferBuilder builder, int WeatherWinRate) { builder.AddInt(4, WeatherWinRate, 0); }
  public static void AddTerrainType(FlatBufferBuilder builder, int TerrainType) { builder.AddInt(5, TerrainType, 0); }
  public static void AddTerrainOccupation1(FlatBufferBuilder builder, int TerrainOccupation1) { builder.AddInt(6, TerrainOccupation1, 0); }
  public static void AddTerrainOccupation2(FlatBufferBuilder builder, int TerrainOccupation2) { builder.AddInt(7, TerrainOccupation2, 0); }
  public static void AddTerrainWinRate(FlatBufferBuilder builder, int TerrainWinRate) { builder.AddInt(8, TerrainWinRate, 0); }
  public static Offset<BetHorseRate> EndBetHorseRate(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<BetHorseRate>(o);
  }
  public static void FinishBetHorseRateBuffer(FlatBufferBuilder builder, Offset<BetHorseRate> offset) { builder.Finish(offset.Value); }
};


}


#endif

