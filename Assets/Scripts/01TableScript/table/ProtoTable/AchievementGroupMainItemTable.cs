// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class AchievementGroupMainItemTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = -1454208316,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static AchievementGroupMainItemTable GetRootAsAchievementGroupMainItemTable(ByteBuffer _bb) { return GetRootAsAchievementGroupMainItemTable(_bb, new AchievementGroupMainItemTable()); }
  public static AchievementGroupMainItemTable GetRootAsAchievementGroupMainItemTable(ByteBuffer _bb, AchievementGroupMainItemTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public AchievementGroupMainItemTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
  public string PureName { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetPureNameBytes() { return __p.__vector_as_arraysegment(8); }
  public string Icon { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetIconBytes() { return __p.__vector_as_arraysegment(10); }
  public int ChildTabsArray(int j) { int o = __p.__offset(12); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int ChildTabsLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
  public ArraySegment<byte>? GetChildTabsBytes() { return __p.__vector_as_arraysegment(12); }
 private FlatBufferArray<int> ChildTabsValue;
 public FlatBufferArray<int>  ChildTabs
 {
  get{
  if (ChildTabsValue == null)
  {
    ChildTabsValue = new FlatBufferArray<int>(this.ChildTabsArray, this.ChildTabsLength);
  }
  return ChildTabsValue;}
 }
  public string LinkInfo { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetLinkInfoBytes() { return __p.__vector_as_arraysegment(14); }

  public static Offset<AchievementGroupMainItemTable> CreateAchievementGroupMainItemTable(FlatBufferBuilder builder,
      int ID = 0,
      StringOffset NameOffset = default(StringOffset),
      StringOffset PureNameOffset = default(StringOffset),
      StringOffset IconOffset = default(StringOffset),
      VectorOffset ChildTabsOffset = default(VectorOffset),
      StringOffset LinkInfoOffset = default(StringOffset)) {
    builder.StartObject(6);
    AchievementGroupMainItemTable.AddLinkInfo(builder, LinkInfoOffset);
    AchievementGroupMainItemTable.AddChildTabs(builder, ChildTabsOffset);
    AchievementGroupMainItemTable.AddIcon(builder, IconOffset);
    AchievementGroupMainItemTable.AddPureName(builder, PureNameOffset);
    AchievementGroupMainItemTable.AddName(builder, NameOffset);
    AchievementGroupMainItemTable.AddID(builder, ID);
    return AchievementGroupMainItemTable.EndAchievementGroupMainItemTable(builder);
  }

  public static void StartAchievementGroupMainItemTable(FlatBufferBuilder builder) { builder.StartObject(6); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset NameOffset) { builder.AddOffset(1, NameOffset.Value, 0); }
  public static void AddPureName(FlatBufferBuilder builder, StringOffset PureNameOffset) { builder.AddOffset(2, PureNameOffset.Value, 0); }
  public static void AddIcon(FlatBufferBuilder builder, StringOffset IconOffset) { builder.AddOffset(3, IconOffset.Value, 0); }
  public static void AddChildTabs(FlatBufferBuilder builder, VectorOffset ChildTabsOffset) { builder.AddOffset(4, ChildTabsOffset.Value, 0); }
  public static VectorOffset CreateChildTabsVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static void StartChildTabsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddLinkInfo(FlatBufferBuilder builder, StringOffset LinkInfoOffset) { builder.AddOffset(5, LinkInfoOffset.Value, 0); }
  public static Offset<AchievementGroupMainItemTable> EndAchievementGroupMainItemTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<AchievementGroupMainItemTable>(o);
  }
  public static void FinishAchievementGroupMainItemTableBuffer(FlatBufferBuilder builder, Offset<AchievementGroupMainItemTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

