// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

#if USE_FB_TABLE

namespace ProtoTable
{

using global::System;
using global::FlatBuffers;

public class MechanismTable : IFlatbufferObject
{
public enum eCrypt : int
{
 code = -1599982151,
};

  private Table __p = new Table();
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static MechanismTable GetRootAsMechanismTable(ByteBuffer _bb) { return GetRootAsMechanismTable(_bb, new MechanismTable()); }
  public static MechanismTable GetRootAsMechanismTable(ByteBuffer _bb, MechanismTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public MechanismTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ID { get { int o = __p.__offset(4); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string Description { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetDescriptionBytes() { return __p.__vector_as_arraysegment(6); }
  public int Index { get { int o = __p.__offset(8); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string BTPath { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetBTPathBytes() { return __p.__vector_as_arraysegment(10); }
  public int RemoveFlag { get { int o = __p.__offset(12); return o != 0 ? (int)eCrypt.code^__p.bb.GetInt(o + __p.bb_pos) : 0; } }
  public string StringDescriptionA { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetStringDescriptionABytes() { return __p.__vector_as_arraysegment(14); }
  public string StringValueAArray(int j) { int o = __p.__offset(16); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : FlatBufferConstants.DefaultString; }
  public int StringValueALength { get { int o = __p.__offset(16); return o != 0 ? __p.__vector_len(o) : 0; } }
 private FlatBufferArray<string> StringValueAValue;
 public FlatBufferArray<string>  StringValueA
 {
  get{
  if (StringValueAValue == null)
  {
    StringValueAValue = new FlatBufferArray<string>(this.StringValueAArray, this.StringValueALength);
  }
  return StringValueAValue;}
 }
  public string DescriptionA { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetDescriptionABytes() { return __p.__vector_as_arraysegment(18); }
  public UnionCell ValueAArray(int j) { int o = __p.__offset(20); return o != 0 ? (UnionCell)(new UnionCell()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : UnionCell.Default(); }
  public int ValueALength { get { int o = __p.__offset(20); return o != 0 ? __p.__vector_len(o) : 0; } }
 private FlatBufferArray<UnionCell> ValueAValue;
 public FlatBufferArray<UnionCell>  ValueA
 {
  get{
  if (ValueAValue == null)
  {
    ValueAValue = new FlatBufferArray<UnionCell>(this.ValueAArray, this.ValueALength);
  }
  return ValueAValue;}
 }
  public string DescriptionB { get { int o = __p.__offset(22); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetDescriptionBBytes() { return __p.__vector_as_arraysegment(22); }
  public UnionCell ValueBArray(int j) { int o = __p.__offset(24); return o != 0 ? (UnionCell)(new UnionCell()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : UnionCell.Default(); }
  public int ValueBLength { get { int o = __p.__offset(24); return o != 0 ? __p.__vector_len(o) : 0; } }
 private FlatBufferArray<UnionCell> ValueBValue;
 public FlatBufferArray<UnionCell>  ValueB
 {
  get{
  if (ValueBValue == null)
  {
    ValueBValue = new FlatBufferArray<UnionCell>(this.ValueBArray, this.ValueBLength);
  }
  return ValueBValue;}
 }
  public string DescriptionC { get { int o = __p.__offset(26); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetDescriptionCBytes() { return __p.__vector_as_arraysegment(26); }
  public UnionCell ValueCArray(int j) { int o = __p.__offset(28); return o != 0 ? (UnionCell)(new UnionCell()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : UnionCell.Default(); }
  public int ValueCLength { get { int o = __p.__offset(28); return o != 0 ? __p.__vector_len(o) : 0; } }
 private FlatBufferArray<UnionCell> ValueCValue;
 public FlatBufferArray<UnionCell>  ValueC
 {
  get{
  if (ValueCValue == null)
  {
    ValueCValue = new FlatBufferArray<UnionCell>(this.ValueCArray, this.ValueCLength);
  }
  return ValueCValue;}
 }
  public string DescriptionD { get { int o = __p.__offset(30); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetDescriptionDBytes() { return __p.__vector_as_arraysegment(30); }
  public UnionCell ValueDArray(int j) { int o = __p.__offset(32); return o != 0 ? (UnionCell)(new UnionCell()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : UnionCell.Default(); }
  public int ValueDLength { get { int o = __p.__offset(32); return o != 0 ? __p.__vector_len(o) : 0; } }
 private FlatBufferArray<UnionCell> ValueDValue;
 public FlatBufferArray<UnionCell>  ValueD
 {
  get{
  if (ValueDValue == null)
  {
    ValueDValue = new FlatBufferArray<UnionCell>(this.ValueDArray, this.ValueDLength);
  }
  return ValueDValue;}
 }
  public string DescriptionE { get { int o = __p.__offset(34); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetDescriptionEBytes() { return __p.__vector_as_arraysegment(34); }
  public UnionCell ValueEArray(int j) { int o = __p.__offset(36); return o != 0 ? (UnionCell)(new UnionCell()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : UnionCell.Default(); }
  public int ValueELength { get { int o = __p.__offset(36); return o != 0 ? __p.__vector_len(o) : 0; } }
 private FlatBufferArray<UnionCell> ValueEValue;
 public FlatBufferArray<UnionCell>  ValueE
 {
  get{
  if (ValueEValue == null)
  {
    ValueEValue = new FlatBufferArray<UnionCell>(this.ValueEArray, this.ValueELength);
  }
  return ValueEValue;}
 }
  public string DescriptionF { get { int o = __p.__offset(38); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetDescriptionFBytes() { return __p.__vector_as_arraysegment(38); }
  public UnionCell ValueFArray(int j) { int o = __p.__offset(40); return o != 0 ? (UnionCell)(new UnionCell()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : UnionCell.Default(); }
  public int ValueFLength { get { int o = __p.__offset(40); return o != 0 ? __p.__vector_len(o) : 0; } }
 private FlatBufferArray<UnionCell> ValueFValue;
 public FlatBufferArray<UnionCell>  ValueF
 {
  get{
  if (ValueFValue == null)
  {
    ValueFValue = new FlatBufferArray<UnionCell>(this.ValueFArray, this.ValueFLength);
  }
  return ValueFValue;}
 }
  public string DescriptionG { get { int o = __p.__offset(42); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetDescriptionGBytes() { return __p.__vector_as_arraysegment(42); }
  public UnionCell ValueGArray(int j) { int o = __p.__offset(44); return o != 0 ? (UnionCell)(new UnionCell()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : UnionCell.Default(); }
  public int ValueGLength { get { int o = __p.__offset(44); return o != 0 ? __p.__vector_len(o) : 0; } }
 private FlatBufferArray<UnionCell> ValueGValue;
 public FlatBufferArray<UnionCell>  ValueG
 {
  get{
  if (ValueGValue == null)
  {
    ValueGValue = new FlatBufferArray<UnionCell>(this.ValueGArray, this.ValueGLength);
  }
  return ValueGValue;}
 }
  public string DescriptionH { get { int o = __p.__offset(46); return o != 0 ? __p.__string(o + __p.bb_pos) : FlatBufferConstants.DefaultString; } }
  public ArraySegment<byte>? GetDescriptionHBytes() { return __p.__vector_as_arraysegment(46); }
  public UnionCell ValueHArray(int j) { int o = __p.__offset(48); return o != 0 ? (UnionCell)(new UnionCell()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : UnionCell.Default(); }
  public int ValueHLength { get { int o = __p.__offset(48); return o != 0 ? __p.__vector_len(o) : 0; } }
 private FlatBufferArray<UnionCell> ValueHValue;
 public FlatBufferArray<UnionCell>  ValueH
 {
  get{
  if (ValueHValue == null)
  {
    ValueHValue = new FlatBufferArray<UnionCell>(this.ValueHArray, this.ValueHLength);
  }
  return ValueHValue;}
 }

  public static Offset<MechanismTable> CreateMechanismTable(FlatBufferBuilder builder,
      int ID = 0,
      StringOffset DescriptionOffset = default(StringOffset),
      int Index = 0,
      StringOffset BTPathOffset = default(StringOffset),
      int RemoveFlag = 0,
      StringOffset StringDescriptionAOffset = default(StringOffset),
      VectorOffset StringValueAOffset = default(VectorOffset),
      StringOffset DescriptionAOffset = default(StringOffset),
      VectorOffset ValueAOffset = default(VectorOffset),
      StringOffset DescriptionBOffset = default(StringOffset),
      VectorOffset ValueBOffset = default(VectorOffset),
      StringOffset DescriptionCOffset = default(StringOffset),
      VectorOffset ValueCOffset = default(VectorOffset),
      StringOffset DescriptionDOffset = default(StringOffset),
      VectorOffset ValueDOffset = default(VectorOffset),
      StringOffset DescriptionEOffset = default(StringOffset),
      VectorOffset ValueEOffset = default(VectorOffset),
      StringOffset DescriptionFOffset = default(StringOffset),
      VectorOffset ValueFOffset = default(VectorOffset),
      StringOffset DescriptionGOffset = default(StringOffset),
      VectorOffset ValueGOffset = default(VectorOffset),
      StringOffset DescriptionHOffset = default(StringOffset),
      VectorOffset ValueHOffset = default(VectorOffset)) {
    builder.StartObject(23);
    MechanismTable.AddValueH(builder, ValueHOffset);
    MechanismTable.AddDescriptionH(builder, DescriptionHOffset);
    MechanismTable.AddValueG(builder, ValueGOffset);
    MechanismTable.AddDescriptionG(builder, DescriptionGOffset);
    MechanismTable.AddValueF(builder, ValueFOffset);
    MechanismTable.AddDescriptionF(builder, DescriptionFOffset);
    MechanismTable.AddValueE(builder, ValueEOffset);
    MechanismTable.AddDescriptionE(builder, DescriptionEOffset);
    MechanismTable.AddValueD(builder, ValueDOffset);
    MechanismTable.AddDescriptionD(builder, DescriptionDOffset);
    MechanismTable.AddValueC(builder, ValueCOffset);
    MechanismTable.AddDescriptionC(builder, DescriptionCOffset);
    MechanismTable.AddValueB(builder, ValueBOffset);
    MechanismTable.AddDescriptionB(builder, DescriptionBOffset);
    MechanismTable.AddValueA(builder, ValueAOffset);
    MechanismTable.AddDescriptionA(builder, DescriptionAOffset);
    MechanismTable.AddStringValueA(builder, StringValueAOffset);
    MechanismTable.AddStringDescriptionA(builder, StringDescriptionAOffset);
    MechanismTable.AddRemoveFlag(builder, RemoveFlag);
    MechanismTable.AddBTPath(builder, BTPathOffset);
    MechanismTable.AddIndex(builder, Index);
    MechanismTable.AddDescription(builder, DescriptionOffset);
    MechanismTable.AddID(builder, ID);
    return MechanismTable.EndMechanismTable(builder);
  }

  public static void StartMechanismTable(FlatBufferBuilder builder) { builder.StartObject(23); }
  public static void AddID(FlatBufferBuilder builder, int ID) { builder.AddInt(0, ID, 0); }
  public static void AddDescription(FlatBufferBuilder builder, StringOffset DescriptionOffset) { builder.AddOffset(1, DescriptionOffset.Value, 0); }
  public static void AddIndex(FlatBufferBuilder builder, int Index) { builder.AddInt(2, Index, 0); }
  public static void AddBTPath(FlatBufferBuilder builder, StringOffset BTPathOffset) { builder.AddOffset(3, BTPathOffset.Value, 0); }
  public static void AddRemoveFlag(FlatBufferBuilder builder, int RemoveFlag) { builder.AddInt(4, RemoveFlag, 0); }
  public static void AddStringDescriptionA(FlatBufferBuilder builder, StringOffset StringDescriptionAOffset) { builder.AddOffset(5, StringDescriptionAOffset.Value, 0); }
  public static void AddStringValueA(FlatBufferBuilder builder, VectorOffset StringValueAOffset) { builder.AddOffset(6, StringValueAOffset.Value, 0); }
  public static VectorOffset CreateStringValueAVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartStringValueAVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddDescriptionA(FlatBufferBuilder builder, StringOffset DescriptionAOffset) { builder.AddOffset(7, DescriptionAOffset.Value, 0); }
  public static void AddValueA(FlatBufferBuilder builder, VectorOffset ValueAOffset) { builder.AddOffset(8, ValueAOffset.Value, 0); }
  public static VectorOffset CreateValueAVector(FlatBufferBuilder builder, Offset<UnionCell>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartValueAVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddDescriptionB(FlatBufferBuilder builder, StringOffset DescriptionBOffset) { builder.AddOffset(9, DescriptionBOffset.Value, 0); }
  public static void AddValueB(FlatBufferBuilder builder, VectorOffset ValueBOffset) { builder.AddOffset(10, ValueBOffset.Value, 0); }
  public static VectorOffset CreateValueBVector(FlatBufferBuilder builder, Offset<UnionCell>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartValueBVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddDescriptionC(FlatBufferBuilder builder, StringOffset DescriptionCOffset) { builder.AddOffset(11, DescriptionCOffset.Value, 0); }
  public static void AddValueC(FlatBufferBuilder builder, VectorOffset ValueCOffset) { builder.AddOffset(12, ValueCOffset.Value, 0); }
  public static VectorOffset CreateValueCVector(FlatBufferBuilder builder, Offset<UnionCell>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartValueCVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddDescriptionD(FlatBufferBuilder builder, StringOffset DescriptionDOffset) { builder.AddOffset(13, DescriptionDOffset.Value, 0); }
  public static void AddValueD(FlatBufferBuilder builder, VectorOffset ValueDOffset) { builder.AddOffset(14, ValueDOffset.Value, 0); }
  public static VectorOffset CreateValueDVector(FlatBufferBuilder builder, Offset<UnionCell>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartValueDVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddDescriptionE(FlatBufferBuilder builder, StringOffset DescriptionEOffset) { builder.AddOffset(15, DescriptionEOffset.Value, 0); }
  public static void AddValueE(FlatBufferBuilder builder, VectorOffset ValueEOffset) { builder.AddOffset(16, ValueEOffset.Value, 0); }
  public static VectorOffset CreateValueEVector(FlatBufferBuilder builder, Offset<UnionCell>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartValueEVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddDescriptionF(FlatBufferBuilder builder, StringOffset DescriptionFOffset) { builder.AddOffset(17, DescriptionFOffset.Value, 0); }
  public static void AddValueF(FlatBufferBuilder builder, VectorOffset ValueFOffset) { builder.AddOffset(18, ValueFOffset.Value, 0); }
  public static VectorOffset CreateValueFVector(FlatBufferBuilder builder, Offset<UnionCell>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartValueFVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddDescriptionG(FlatBufferBuilder builder, StringOffset DescriptionGOffset) { builder.AddOffset(19, DescriptionGOffset.Value, 0); }
  public static void AddValueG(FlatBufferBuilder builder, VectorOffset ValueGOffset) { builder.AddOffset(20, ValueGOffset.Value, 0); }
  public static VectorOffset CreateValueGVector(FlatBufferBuilder builder, Offset<UnionCell>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartValueGVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddDescriptionH(FlatBufferBuilder builder, StringOffset DescriptionHOffset) { builder.AddOffset(21, DescriptionHOffset.Value, 0); }
  public static void AddValueH(FlatBufferBuilder builder, VectorOffset ValueHOffset) { builder.AddOffset(22, ValueHOffset.Value, 0); }
  public static VectorOffset CreateValueHVector(FlatBufferBuilder builder, Offset<UnionCell>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartValueHVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<MechanismTable> EndMechanismTable(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<MechanismTable>(o);
  }
  public static void FinishMechanismTableBuffer(FlatBufferBuilder builder, Offset<MechanismTable> offset) { builder.Finish(offset.Value); }
};


}


#endif

